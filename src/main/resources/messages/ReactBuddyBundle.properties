JsxTree.action.showHideHooks=Показать/скрыть хуки
JsxTree.collapseAll=Свернуть все
JsxTree.context.action.wrapIntoCondition=Обернуть в условие
JsxTree.context.action.wrapIntoConditionTernary=Обернуть в условие (тернарное)
JsxTree.dataFlavorNodeName=Узел JSX дерева
JsxTree.defaultNodeName=Fragment
JsxTree.else=иначе
JsxTree.emptyText=React компоненты не найдены
JsxTree.expandAll=Развернуть все
JsxTree.ifMain=if ({0})
JsxTree.loading=Загрузка…
JsxTree.popupMenu.label=Обернуть в\:
JsxTree.removeComponent=Удалить компонент
JsxTree.switchCase=case ({0})
JsxTree.switchDefault=default
JsxTree.switchMain=switch ({0})
Marketplace.action.dialog.description=В вашем проекте обнаружено несколько файлов package.json с зависимостями React.\nВыберите один для установки библиотеки React
Marketplace.action.dialog.packageJsonField.label=Выберите package.json\:
Marketplace.action.dialog.title=Выбор исходного файла пакета
Marketplace.action.dialog.validation=Укажите исходный файл package.json
Marketplace.action.notification.packageJsonNotFound=Файл package.json с зависимостями React не найден в проекте
Marketplace.wizard.changeSteps.addCss.description=Добавить CSS import
Marketplace.wizard.changesForKit.label=Изменения в файлах проекта для установки {0}
Marketplace.wizard.createNextJSDocument.description=Создать файл документа в директории pages [_D]
Marketplace.wizard.dependenciesToInstall.label=Зависимости для установки\:
Marketplace.wizard.documentation.label=Документация
Marketplace.wizard.editNextJSConfig.description=Редактировать файл {0}
Marketplace.wizard.editRootComponent.description=Редактировать корневой компонент
Marketplace.wizard.install.button=Установить [&I]
Marketplace.wizard.next.error.documentAlreadyExists=Обновить {0} согласно документации\:
Marketplace.wizard.next.error.pagesDirectory=Директория pages не найдена в {0}
Marketplace.wizard.noChangesRequired.label=Дополнительные изменения проекта не требуются
Marketplace.wizard.noFileToChange.label=Файл не найден
Marketplace.wizard.noKitSelected.label=Набор разработки не выбран
Marketplace.wizard.title=Библиотека React
Palette.action.copyItem.dialog.title=Копировать элемент палитры
Palette.action.copyItem.dialog.variantNameField=Название варианта\:
Palette.action.copyItem.validation.empty=Укажите название варианта
Palette.action.copyItem.validation.unique=Укажите уникальное название варианта
Palette.action.openDoc.label=Открыть документацию
Palette.action.showPreview.label=Предпросмотр компонента
Palette.addSubComponent.intention.label=Добавить дочерний компонент
Palette.addSubComponent.notification.content=Добавить дочерний компонент в {0}
Palette.allResult=Все результаты
Palette.batch.action.addToPalette.label=Добавить компоненты в палитру
Palette.batch.dialog.componentsLabel=Компоненты
Palette.batch.dialog.paletteLabel=Палитра
Palette.batch.dialog.title=Редактор палитры
Palette.batch.editingPalette.importResolve=Разрешение импортов…
Palette.batch.editingPalette.resolving=Разрешение\: 
Palette.batch.folderField.emptyText=Выберите папку с компонентами
Palette.batch.inlay.label=Открыть редактор палитры
Palette.batch.loadingComponents=Поиск React компонентов в зависимостях проекта
Palette.batch.loadingComponents.indicator.label=Найденные компоненты\:
Palette.batch.paletteTree.action.moveDown.label=Вниз
Palette.batch.paletteTree.action.moveUp.label=Вверх
Palette.batch.paletteTree.action.remove.label=Удалить
Palette.batch.selectCategory.dialog.title=Выбор категории
Palette.componentDragWarning=Перетаскивание из панели недоступно во время обновления индекса
Palette.componentSearchHistory=COMPONENT_SEARCH_HISTORY
Palette.contextMenu.editTemplate=Редактировать шаблон
Palette.contextMenu.navigateToFile=Перейти к файлу палитры
Palette.devtools.error.findFile=Файл не найден\: {0}
Palette.devtools.error.rootComponent=Корневой компонент приложения не найден
Palette.devtools.error.rootFile=Некорректный файл корневого компонента приложения
Palette.devtools.extensionDependency.choosePalette.dialog=Добавить палитру компонентов
Palette.devtools.extensionDependency.notification.action.choosePalette=Добавить
Palette.devtools.extensionDependency.notification.action.openConfigName=Открыть конфигурацию
Palette.devtools.extensionDependency.notification.action.skip=Пропустить
Palette.devtools.extensionDependency.notificationContent=<html>{0}</html>
Palette.devtools.infoDialog.dependencyInfo=Установить следующие зависимости\:
Palette.devtools.infoDialog.dependencyInfo.devtoolsContext=Добавить палитру\:
Palette.devtools.infoDialog.devToolsField.label=Директория файлов тулбокса\:
Palette.devtools.infoDialog.devToolsField.validation=Devtools не может находиться в папке с индексным файлом
Palette.devtools.infoDialog.error.devtoolsDirectory=Ошибка создания директории devtools
Palette.devtools.infoDialog.error.devtoolsFiles=Ошибка создания файлов devtools
Palette.devtools.infoDialog.error.paletteFileNotFound=Файл палитры не найден в директории devtools
Palette.devtools.infoDialog.error.rootComponentFile=Ошибка редактирования корневого компонента
Palette.devtools.infoDialog.hideEditorCheckbox.label=Внедрить <DevSupport> вручную
Palette.devtools.infoDialog.packageJsonField.label=Файл package.json проекта\:
Palette.devtools.infoDialog.rootComponentFile.error=Выбранный файл не содержит корневой элемент
Palette.devtools.infoDialog.rootComponentTree.label=Файл корневого компонента\:
Palette.devtools.infoDialog.textInfo=<html>Требуется дополнительная настройка для использования функций предпросмотра и палитры React Buddy.<br/>Мы можем помочь автоматизовать этот процесс\! Будут выполнены следующие изменения\:<br/>\\&emsp;1) Пакет <b>@React-buddy/ide-toolbox</b> будет добавлен в зависимости проекта;<br/>\\&emsp;2) Будет выполнен <b>npm install</b>;<br/>\\&emsp;3) В директории тулбокса будут созданы файлы с палитрой компонентов и конфигурацией предпросмотра;<br/>\\&emsp;4) Обертка <b>DevSupport</b> будет добавлена в корень дерева компонентов (см. предпросмотр ниже).</html>
Palette.devtools.infoDialog.title=Настройка React Buddy Toolbox
Palette.devtools.infoDialog.validation.alreadyContain=Указанная папка уже содержит файл палитры
Palette.devtools.infoDialog.validation.noFolder=Укажите папку для инструментов React Buddy
Palette.devtools.infoDialog.validation.rootComponent=<html>Укажите файл корневого компонента с <b>ReactDOM.render</b> или выберите <b>внедрение DevSupport вручную</b></html>
Palette.intention.addToPalette=Добавить в палитру React
Palette.intention.createNewItemDialog.title=Создать новый {0}
Palette.intention.devtoolsNotFound.action.label=Настроить
Palette.intention.devtoolsNotFound.nextJs.notSupported=Предпросмотр компонентов доступен для проектов на Next.js 10+
Palette.intention.devtoolsNotFound.notification.description="@React-buddy/ide-toolbox" не найден в package.json или отсутствуют некоторые конфигурационные файлы
Palette.intention.devtoolsNotFound.notification.title=Поддержка React Buddy
Palette.intention.devtoolsNotFound.packageJson.notFound=package.json не найден для {0}
Palette.intention.devtoolsNotFound.projectType.notSupported=Предпросмотр пока не поддерживается для проектов {0}
Palette.intention.mainDialog.title=Добавить компонент в палитру
Palette.intention.mainDialog.validation.alreadyExistsVariant=Вариант с таким названием уже существует
Palette.intention.mainDialog.validation.emptyCategory=Укажите категорию для компонента
Palette.intention.mainDialog.validation.emptyComponent=Укажите компонент
Palette.intention.mainDialog.validation.emptyVariantName=Укажите название варианта, так как компонент уже имеет вариант по умолчанию
Palette.intention.name.label=Название {0}\:
Palette.intention.requiredProps.notification.description=Необходимо заполнить обязательные свойства во избежание ошибок компиляции
Palette.intention.requiredProps.notification.title=Палитра React
Palette.intention.validation.alreadyExistsComponent=Такой {0} уже существует
Palette.intention.validation.emptyComponentName=Укажите название {0}
Palette.preview.browser.title=Предпросмотр
Palette.preview.code.title=Код
Palette.preview.noPreview.label=Предпросмотр недоступен
Palette.preview.noPreview.title=Нет предпросмотра
Preact.action.create.component.arrowFunction.description=Создать Preact компонент-стрелочную функцию
Preact.action.create.component.classbased.description=Создать классовый Preact компонент
Preact.action.create.component.functionDeclaration.description=Создать Preact компонент-функцию
ProxyChecking.notification.text=Это может вызвать проблемы с экранами и дизайнером сущностей
ProxyChecking.notification.title=Прокси используется для localhost
React.action.create.component=React компонент
React.action.create.component.arrowFunction.description=Создать React компонент-стрелочную функцию
React.action.create.component.arrowFunctionType.name=Компонент-стрелочная функция
React.action.create.component.classType.name=Классовый компонент
React.action.create.component.classbased.description=Создать классовый React компонент
React.action.create.component.description=Создать новый React компонент
React.action.create.component.functionDeclaration.description=Создать React компонент-функцию
React.action.create.component.functionType.name=Функциональный компонент
React.action.create.component.title=Создать React компонент
React.action.create.component.validation.capitalized=Название компонента должно начинаться с заглавной буквы
React.action.create.component.validation.invalidChars=Название компонента содержит недопустимые символы
React.action.create.component.validation.nullName=Укажите название компонента
React.action.generateComponent.title=Компонент из палитры React
React.action.generateHook.title=React хук
React.action.showSnippetPreview.label=Показать предпросмотр сниппета
React.appView.rootFileField=Корневой файл\:
React.appView.rootFileField.dialogTitle=Выбор корневого файла
React.appView.showRoute.caption=Показывать только маршруты
React.component.tree.initially.visible.message=Проверка поддержки React…
React.component.tree.loading.node.name=Загрузка…
React.component.tree.reselect.file.notification=Выберите корневой файл заново
React.component.tree.select.file.node.name=Выберите файл
React.component.tree.title=Дерево компонентов
React.editor.linemarker.handler.caption=Обработчик событий компонента
React.editor.linemarker.hook.caption=React хук
React.fix.exhaustiveDeps=Обновить массив зависимостей на\: {0}
React.generation=React Buddy
React.generation.test.afterAll=afterAll
React.generation.test.afterEach=afterEach
React.generation.test.beforeAll=beforeAll
React.generation.test.beforeEach=beforeEach
React.generation.test.dialog.title=Создать тест React компонента
React.generation.test.edit.settings.tooltip=Редактировать настройки цели
React.generation.test.generate.label=Сгенерировать
React.generation.test.generateStubs.label=Сгенерировать стабы для props
React.generation.test.setting.defaultDirectory.label=Директория по умолчанию\:
React.generation.test.setting.directory.dialog.title=Директория тестов по умолчанию
React.generation.test.setting.generateInto.label=Генерировать тесты в\:
React.generation.test.setting.subDirectory.label=Поддиректория компонента\:
React.inspection.JSXMap=JSX маппинг
React.inspection.canBeConvertedToProp=Может быть преобразовано в prop
React.inspection.canBeConvertedToStateOrProp=Может быть преобразовано в state или prop
React.inspection.canCreateProps=Можно создать несуществующий prop
React.inspection.canMapToJSX=Может быть развернуто в JSX
React.inspection.convertToState=Преобразовать в state
React.inspection.convertUnresolvedToState=Преобразовать unresolved в useState
React.inspection.convertVarToState=Преобразовать в useState переменную
React.inspection.createProp=Создать prop
React.inspection.createProps=Создать prop {0} в {1}
React.inspection.createStateVariable=Создать useState переменную {0}
React.inspection.createTest=Создать тест
React.inspection.createTest.validation.alreadyExists=<html>В выбранной директории уже существует <b>{0}</b></html>
React.inspection.createTest.validation.emptyField=Поле назначения не может быть пустым
React.inspection.dependency.addPaletteExtension=Добавить палитру компонентов
React.inspection.dependency.paletteExtensionExist=Палитра компонентов доступна
React.inspection.emptyAttribute=Пустое значение атрибута компонента
React.inspection.emptyFormActionAttribute=Пустой атрибут action формы
React.inspection.emptyRefAttribute=Пустой атрибут ref
React.inspection.exhaustiveDeps=Требуется обновление массива зависимостей
React.inspection.noParameters=Параметры компонента не найдены
React.inspection.noPropsDefinition=Определение props компонента не найдено
React.inspection.nonEditablePropsType=Тип свойств компонента не редактируем
React.inspection.quickFix.emptyEventHandler=Сгенерировать обработчик событий
React.inspection.quickFix.emptyFormActionAttribute=Сгенерировать useActionState
React.inspection.quickFix.emptyRefAttribute=Создать ref
React.inspector.action.addElement=Добавить элемент
React.inspector.action.navigateToSource=Перейти к исходному коду
React.inspector.error.calculationError=Ошибка вычисления свойств
React.inspector.error.propertiesNotFound=Свойства не найдены
React.intention.addUseRef=Создать ref
React.intention.generateHandler.label=Сгенерировать обработчик
React.intention.generateHandler.label.capitalized=Сгенерировать обработчик
React.intention.wrapIntoCallback.label=Обернуть в useCallback()
React.intention.wrapIntoCondition=Обернуть в условие
React.intention.wrapIntoConditionTernary=Обернуть в условие (тернарное)
React.intention.wrapIntoMemo.label=Обернуть в memo()
React.jsxTree.action.addPaletteComponent.label=Добавить компонент из палитры
React.jsxTree.action.generateHandler.label=Сгенерировать обработчик
React.livetemplate.context.js.description=Создать React контекст провайдер
React.livetemplate.context.tsx.description=Создать React контекст провайдер
React.livetemplate.error.groupNotFound=<html>Группа шаблонов React Buddy не найдена.<br/>Пожалуйста, сбросьте название группы на значение по умолчанию\: <b>{0}</b></html>
React.livetemplate.error.templateNotFound=<html>Соответствующий живой шаблон не найден.<br/>Пожалуйста, сбросьте сокращение или описание на значения по умолчанию\:<br/>\\&emsp;- Сокращение\: \\&quot;{0}\\&quot;;<br/>\\&emsp;- Описание\: \\&quot;{1}\\&quot;.</html>
React.preview.action.visibility.outline=Показать/скрыть JSX Outline
React.preview.action.visibility.preview=Показать/скрыть предпросмотр
React.preview.errorWhileEditing=Ошибка при редактировании {0}
React.preview.fillActionName=Добавить обязательный prop
React.preview.notificationContent=Для отображения превью компонента необходимо заполнить обязательные свойства
React.preview.notificationTitle=React превью
React.preview.validation.indexing=Превью недоступно во время индексации
React.preview.validation.previewsNotFound=Не найден Previews.tsx, соответствующий компоненту
React.preview.validation.previewsNotFound.title=Невозможно запустить превью
React.preview.validation.previewsNotSuitable=<html>Сервер разработки запущен для другого проекта в текущей рабочей области.<br/>Пожалуйста, закройте сервер превью и попробуйте снова.</html>
React.preview.wrongFileType=Превью недоступно для файлов этого типа
React.previewServer.title=Сервер превью React
React.settings.devServerConfigs.addConfig=Добавить конфигурацию
React.settings.devServerConfigs.label=Конфигурации сервера разработки
React.settings.devServerConfigs.removeConfig=Удалить конфигурацию
React.settings.devServerConfigs.scriptField.label=Скрипт\:
React.settings.devServerConfigs.validation.emptyConfigurationParameters=Необходимо заполнить все параметры конфигурации
React.settings.devServerConfigs.validation.invalidUrl=Недопустимый URL
React.settings.devServerConfigs.validation.noScript=Укажите скрипт для запуска сервера разработки
React.settings.handlerDeclarationType.arrow=Стрелочная функция
React.settings.handlerDeclarationType.label=Генерация обработчиков событий
React.settings.handlerDeclarationType.regular=Объявление функции
React.settings.previewVisibilityLabel=Показывать плавающую панель в редакторе
React.settings.saveOutlineStateAcrossEditors=Сохранять состояние JSX Outline для всех файлов
React.settings.subCompNotification.label=Показывать уведомления о подкомпонентах
React.settings.vcsNotification.addToVcs=Добавить в СКВ
React.settings.vcsNotification.description=rcb-settings.xml находится в списке игнорируемых файлов системы контроля версий
React.settings.vcsNotification.ignore=Игнорировать
React.settings.vcsNotification.title=Настройки React Buddy
React.settings.wrapIntoUseCallback=Оборачивать сгенерированные обработчики в useCallback()
React.toolwindow.start.typing.for.search=Начните вводить для поиска
React.visualDesigner.componentPropsCaption=Свойства компонента
React.visualDesigner.copyUrl=Копировать URL
React.visualDesigner.highlightModeCaption=Подсветка элементов
React.visualDesigner.highlightModeDescription=Выберите элемент для перехода к исходному коду
React.visualDesigner.previewSettings.configureComponent=Настроить компонент
React.visualDesigner.previewSettings.zoomIn=Увеличить
React.visualDesigner.previewSettings.zoomOut=Уменьшить
React.visualDesigner.previewSettings.zoomReset=Сбросить масштаб
React.visualDesigner.previewSettingsCaption=Настройки превью
React.visualDesigner.refresh=Обновить
React.visualDesigner.reinit=Переинициализовать
React.visualDesigner.reinit.description=Пересоздать экземпляр браузера превью
React.visualDesigner.reload=Перезагрузить
React.visualDesigner.reload.description=Перезагрузить страницу
React.visualDesigner.traceUpdates=Подсветка рендеринга компонентов
React.visualDesigner.traceUpdatesDescription=Активировать подсветку границ компонентов React при их перерендеринге
React.visualDesigner.waitingForServer.instruction=<html><p>Мы автоматически определим URL вашего сервера или используем значение из настроек сервера. Если определение некорректно, измените URL вручную.</p></html>
React.visualDesigner.waitingForServer.label=Ожидание
React.visualDesigner.waitingForServer.rcblabel=Ожидание сервера...
React.visualDesigner.waitingForServer.urlFieldLabel=URL сервера разработки\:
ReactAdmin.inspection.unresolved.resource=Соответствующий ресурс не найден
Settings.displayName.devServer=Конфигурация сервера разработки
Settings.displayName.editor=Настройки редактора
Settings.displayName.storybook=Storybook
Settings.displayName.testGeneration=Генерация тестов
Snippet.dialog.title=Параметры сниппета
Snippet.param.wizard.asSeparateComponent=Вставить как отдельный компонент
Snippet.param.wizard.bar.title=Конструктор столбчатых диаграмм
Snippet.param.wizard.cardList.title=Конструктор списка карточек
Snippet.param.wizard.cardObject.title=Конструктор объекта карточки
Snippet.param.wizard.componentParameters.label=Параметры компонента
Snippet.param.wizard.dialog.title=Конструктор диалогов
Snippet.param.wizard.finalButton=Готово [&F]
Snippet.param.wizard.form.title=Конструктор форм
Snippet.param.wizard.line.title=Конструктор линейных графиков
Snippet.param.wizard.parameters.label=Параметры
Snippet.param.wizard.pie.title=Конструктор круговых диаграмм
Snippet.param.wizard.preview.hide=Скрыть превью
Snippet.param.wizard.preview.show=Показать превью
Snippet.param.wizard.scatter.title=Конструктор точечных диаграмм
Snippet.param.wizard.table.title=Конструктор таблиц
Snippet.param.wizard.title=Редактор параметров сниппета
Snippet.param.wizard.treeTable.title=Конструктор древовидных таблиц
Snippet.param.wizard.validation.arrayVariable=Укажите переменную массива
Snippet.param.wizard.validation.collectionIsEmpty=Укажите записи {0}
Snippet.param.wizard.validation.objectName=Укажите имя объекта
Snippet.param.wizard.validation.variable=Укажите переменную
Snippet.validation.notBoolean=Указанное значение для {0} не является логическим
Snippet.validation.notCompatibleType=Указанное значение для {0} имеет несовместимый тип
Snippet.validation.notNumber=Указанное значение для {0} не является числом
Snippet.validation.specifyValue=Укажите значение для {0}
Snippet.velocity.charts.axisLabel=Метка оси
Snippet.velocity.charts.bottomAxis=Нижняя ось\:
Snippet.velocity.charts.data=Свойство данных\:
Snippet.velocity.charts.id=Свойство ID\:
Snippet.velocity.charts.index=Свойство индекса\:
Snippet.velocity.charts.key=Свойство ключа\:
Snippet.velocity.charts.label=Свойство метки\:
Snippet.velocity.charts.leftAxis=Левая ось\:
Snippet.velocity.charts.rightAxis=Правая ось\:
Snippet.velocity.charts.topAxis=Верхняя ось\:
Snippet.velocity.charts.validation.emptyData=Укажите свойство данных
Snippet.velocity.charts.validation.emptyId=Укажите свойство ID
Snippet.velocity.charts.validation.emptyIndex=Укажите свойство индекса
Snippet.velocity.charts.validation.emptyKeys=Необходимо выбрать хотя бы одно свойство ключа
Snippet.velocity.charts.validation.emptyLabel=Укажите свойство метки
Snippet.velocity.charts.validation.emptyValue=Укажите свойство значения
Snippet.velocity.charts.validation.emptyX=Укажите свойство x
Snippet.velocity.charts.validation.emptyY=Укажите свойство y
Snippet.velocity.charts.value=Свойство значения\:
Snippet.velocity.charts.x=x\:
Snippet.velocity.charts.y=y\:
Snippet.velocity.param.card.field.filterBy=Фильтровать по\:
Snippet.velocity.param.card.field.labelPosition=Позиция метки\:
Snippet.velocity.param.card.field.outline=С контуром
Snippet.velocity.param.card.field.pagination=Пагинация
Snippet.velocity.param.card.field.rowsPerPage=Строк на странице\:
Snippet.velocity.param.card.field.solid=Сплошной
Snippet.velocity.param.card.field.sortBy=Сортировать по\:
Snippet.velocity.param.card.field.subTitleProperty=Свойство подзаголовка\:
Snippet.velocity.param.card.field.table=Свойства для отображения
Snippet.velocity.param.card.field.table.validation=Название свойства карточки не может быть пустым
Snippet.velocity.param.card.field.titleProperty=Свойство заголовка\:
Snippet.velocity.param.card.itemField.placeholder=Нажмите Ctrl + пробел для просмотра опций
Snippet.velocity.param.card.key.label=Ключевое свойство\:
Snippet.velocity.param.card.object.type=Тип объекта карточки\:
Snippet.velocity.param.card.select.variable=Локальная переменная\:
Snippet.velocity.param.cardList.actions.label=Действия списка карточек
Snippet.velocity.param.cardObject.actions.label=Действия карточки\:
Snippet.velocity.param.dataSource.type=Источник данных\:
Snippet.velocity.param.dialog.actions.label=Действия диалога
Snippet.velocity.param.dialog.content.label=Содержимое\:
Snippet.velocity.param.dialog.fullScreen.label=Полноэкранный режим
Snippet.velocity.param.dialog.fullWidth.label=Полная ширина
Snippet.velocity.param.dialog.maxWidth.label=Максимальная ширина\:
Snippet.velocity.param.dialog.position.label=Позиция\:
Snippet.velocity.param.dialog.title.label=Заголовок\:
Snippet.velocity.param.form.action.actionType=Группировать по типу
Snippet.velocity.param.form.action.formSubmit=Отправить форму
Snippet.velocity.param.form.action.id=ID
Snippet.velocity.param.form.action.label=Метка
Snippet.velocity.param.form.action.table.validation=Поле таблицы действий не может быть пустым
Snippet.velocity.param.form.actions.table=Действия формы
Snippet.velocity.param.form.field.actionType=Группировать по типу
Snippet.velocity.param.form.field.controlType=Тип контрола
Snippet.velocity.param.form.field.dataType=Тип данных
Snippet.velocity.param.form.field.description=Описание
Snippet.velocity.param.form.field.editor.title=Редактор полей формы
Snippet.velocity.param.form.field.helperText=Вспомогательный текст
Snippet.velocity.param.form.field.label=Метка
Snippet.velocity.param.form.field.labelPosition=Позиция метки\:
Snippet.velocity.param.form.field.name=Имя
Snippet.velocity.param.form.field.placeholder=Placeholder
Snippet.velocity.param.form.field.required=Обязательное
Snippet.velocity.param.form.field.table=Поля формы
Snippet.velocity.param.form.field.table.validation=Имя поля формы не может быть пустым
Snippet.velocity.param.form.field.validate=Валидация
Snippet.velocity.param.form.loading.type=Загрузка...
Snippet.velocity.param.form.new.type.name=Имя нового типа\:
Snippet.velocity.param.form.object.type=Тип объекта формы\:
Snippet.velocity.param.form.select.type=Тип объекта\:
Snippet.velocity.param.preview.compilation.error=Ошибка компиляции шаблона Velocity.\nВероятно, требуется изменить прототип кода.
Snippet.velocity.param.table.actions.label=Действия таблицы
Snippet.velocity.param.table.column.sorting=Сортировка
Snippet.velocity.param.table.column.table=Свойства столбцов таблицы
Snippet.velocity.param.table.column.title=Заголовок
Snippet.velocity.param.table.column.validation=Имя столбца таблицы не может быть пустым
Snippet.velocity.param.table.columns.label=Столбцы таблицы
Snippet.velocity.param.table.expandIfSet=Развернуть если установлено свойство\:
Snippet.velocity.param.table.expandableRow=Разворачиваемая строка
Snippet.velocity.param.table.expandableRow.validation=<html>Укажите хотя бы одно значение для <b>Развернуть если установлено свойство</b> и <b>Свойства для отображения</b></html>
Snippet.velocity.param.table.fixedColumn=Фиксированный столбец\:
Snippet.velocity.param.table.fixedHeader=Фиксированный заголовок
Snippet.velocity.param.table.hierarchical=Иерархическое свойство\:
Snippet.velocity.param.table.object.type=Тип объекта таблицы\:
Snippet.velocity.param.table.propsToDisplay=Свойства для отображения\:
Snippet.velocity.param.table.rowSize=Размер строки\:
Snippet.velocity.param.table.stripes=Полосы
Storybook.action.createNewStory.description=Создать новую историю
Storybook.action.createNewStory.dialog.title=Новый файл .stories для Storybook
Storybook.action.createNewStory.label=История Storybook
Storybook.action.generateStory=Компонент в Storybook
Storybook.componentDragWarning=Перетаскивание невозможно во время обновления индекса.
Storybook.contextMenu.navigate=Перейти к истории
Storybook.intention.createStory.allProps.label=Для всех props
Storybook.intention.createStory.category.label=Категория\:
Storybook.intention.createStory.category.validation=Укажите категорию для истории
Storybook.intention.createStory.dialog.title=Создать историю
Storybook.intention.createStory.directory.label=Назначение\:
Storybook.intention.createStory.generateArgs.actionLink=Аргументы по умолчанию
Storybook.intention.createStory.generateArgs.label=Сгенерировать
Storybook.intention.createStory.requiredProps.label=Только для обязательных props
Storybook.intention.createStory.title=Добавить в Storybook
Storybook.intention.createStory.validation.directoryDoesNotExists=Директория Storybook по умолчанию не существует
Storybook.intention.createStory.validation.storyAlreadyExists=История уже существует
Storybook.livetemplate.newStory.js.7plus.description=История Storybook v7
Storybook.livetemplate.newStory.js.description=История Storybook v6
Storybook.livetemplate.newStory.tsx.7plus.description=История Storybook v7
Storybook.livetemplate.newStory.tsx.description=История Storybook v6
Storybook.setting.defaultDirectory.label=Директория по умолчанию\:
Storybook.setting.directory.dialog.title=Директория Storybook по умолчанию
Storybook.setting.generateInto.label=Генерировать истории в\:
Storybook.setting.subDirectory.label=Поддиректория для компонентов\:
Storybook.setting.use7plus.label=Использовать CSF 7+
Storybook.toolwindow.stripe=Storybook
action.com.intellij.reactbuddy.GenerateReactComponentAction.description=Сгенерировать React компонент
action.com.intellij.reactbuddy.GenerateReactComponentAction.text=React компонент
action.com.intellij.reactbuddy.InstallReactLibraryAction.description=Открыть диалог React Buddy для установки React библиотеки
action.com.intellij.reactbuddy.InstallReactLibraryAction.text=Установить React библиотеку
action.com.intellij.reactbuddy.OutlineVisibleAction.description=Показать/скрыть структуру в текущем редакторе
action.com.intellij.reactbuddy.PreviewVisibleAction.description=Показать/скрыть предпросмотр в текущем редакторе
action.com.intellij.reactbuddy.ShowInComponentTreeAction.text=Показать в дереве компонентов
action.com.intellij.reactbuddy.action.hook.GenerateReactHookAction.description=Сгенерировать React хук
action.com.intellij.reactbuddy.action.hook.GenerateReactHookAction.text=React хук
action.com.intellij.reactbuddy.action.storybook.GenerateStoryAction.description=Сгенерировать компонент Storybook
action.com.intellij.reactbuddy.action.storybook.GenerateStoryAction.text=Компонент в Storybook
configurable.group.com.intellij.reactbuddy.tools.settings.description=<html><body>React Buddy помогает разрабатывать приложения на React.js, предоставляя визуальные инструменты для работы с JSX.
configurable.group.com.intellij.reactbuddy.tools.settings.display.name=React Buddy
error.reporter.privacy.notice.text=<html>Я согласен с тем, что команда разработчиков React Buddy будет использовать <b>конфигурацию оборудования</b> (название ОС, память ПК, имя хоста), <b>конфигурацию ПО</b> (версия ИСРA, версия Java runtime, название ИСРA), <b>информацию о продукте</b> (версия плагина, последняя вызванная операция) и <b>детали ошибки</b>, показанные выше, для <b>улучшения</b> своих продуктов. <b>Убедитесь, что stack trace не содержит конфиденциальной информации</b>. Кроме того, команда React Buddy будет признательна, если вы сможете поделиться кейсом для воспроизведения через <a href\="https\://react-buddy.com/contacts/">email</a> или <a href\="https\://discord.gg/dgcrTKFUb8">Discord канал</a>.</html>
form.field.rule.editor.numberRestriction=Количество символов
form.field.rule.editor.title=Добавить правило валидации
form.field.rule.intention.title=Добавить правило валидации
inspection.group.key.rcbCommon=React Buddy
react.buddy.addsubcomponent.notifications=React Buddy добавление подкомпонента
react.buddy.common.notifications=React Buddy общие уведомления
react.buddy.logs=React Buddy логи
react.componentRegister.command.name=React Buddy регистрация компонента
toolwindow.stripe.reactInspector=React инспектор
toolwindow.stripe.reactPalette=React палитра