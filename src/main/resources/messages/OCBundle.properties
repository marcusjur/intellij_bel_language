abstract.extract.dialog.class.name=Имя {0}\:
abstract.extract.dialog.unable.create.file=Невозможно создать файл
action.CIDR.DebugDumpBuildingSymbols.text=C/C++\: Дамп состояния сборки символов
action.CIDR.Lang.CompactSymbols.text=Обновить/сжать символы
action.CIDR.Lang.Cpp.ExtractLambda.description=Извлечь Lambda параметр
action.CIDR.Lang.Cpp.ExtractLambda.text=Lambda параметр…
action.CIDR.Lang.Cpp.GenerateConstructor.description=Сгенерировать конструктор из членов класса
action.CIDR.Lang.Cpp.GenerateConstructor.text=Конструктор
action.CIDR.Lang.Cpp.GenerateDefinitions.description=Сгенерировать определения
action.CIDR.Lang.Cpp.GenerateDefinitions.text=Сгенерировать определения…
action.CIDR.Lang.Cpp.GenerateDestructor.description=Сгенерировать деструктор
action.CIDR.Lang.Cpp.GenerateDestructor.text=Деструктор
action.CIDR.Lang.Cpp.GenerateEqualityOperators.description=Сгенерировать операторы равенства
action.CIDR.Lang.Cpp.GenerateEqualityOperators.text=Операторы равенства
action.CIDR.Lang.Cpp.GenerateGetter.description=Сгенерировать функцию getter для поля
action.CIDR.Lang.Cpp.GenerateGetter.text=Getter
action.CIDR.Lang.Cpp.GenerateGetterAndSetter.description=Сгенерировать функции getter и setter для поля
action.CIDR.Lang.Cpp.GenerateGetterAndSetter.text=Getter и Setter
action.CIDR.Lang.Cpp.GenerateRelationalOperators.description=Сгенерировать операторы отношения
action.CIDR.Lang.Cpp.GenerateRelationalOperators.text=Операторы отношения
action.CIDR.Lang.Cpp.GenerateSetter.description=Сгенерировать функцию setter для поля
action.CIDR.Lang.Cpp.GenerateSetter.text=Setter
action.CIDR.Lang.Cpp.GenerateStreamOutputOperator.description=Сгенерировать оператор вывода в поток
action.CIDR.Lang.Cpp.GenerateStreamOutputOperator.text=Оператор вывода в поток
action.CIDR.Lang.DropPsiForOpenedFiles.text=Сбросить PSI для открытых файлов
action.CIDR.Lang.DumpFileSymbolStats.text=Дамп статистики символов файла
action.CIDR.Lang.DumpSymbolStats.text=Дамп общей статистики символов
action.CIDR.Lang.Format.Extractor.text=Извлечь формат кода
action.CIDR.Lang.ImportsHierarchy.text=Иерархия импортов
action.CIDR.Lang.IntroduceConstant.description=Создать константу
action.CIDR.Lang.IntroduceConstant.text=Константа…
action.CIDR.Lang.IntroduceDefine.description=Создать Define
action.CIDR.Lang.IntroduceDefine.text=Define…
action.CIDR.Lang.IntroduceParameter.description=Создать параметр
action.CIDR.Lang.IntroduceParameter.text=Параметр…
action.CIDR.Lang.IntroduceTypedef.description=Создать Typedef
action.CIDR.Lang.IntroduceTypedef.text=Typedef…
action.CIDR.Lang.IntroduceVariable.description=Создать переменную
action.CIDR.Lang.IntroduceVariable.text=Переменная…
action.CIDR.Lang.ObjC.ConvertToBlock.description=Преобразовать в блок
action.CIDR.Lang.ObjC.ConvertToBlock.text=Преобразовать в блок…
action.CIDR.Lang.ObjC.ConvertToFunction.description=Преобразовать в функцию
action.CIDR.Lang.ObjC.ConvertToFunction.text=Преобразовать в функцию…
action.CIDR.Lang.ObjC.ConvertToIvar.description=Преобразовать свойство в переменную экземпляра
action.CIDR.Lang.ObjC.ConvertToIvar.text=Преобразовать в переменную экземпляра…
action.CIDR.Lang.ObjC.ConvertToMethod.description=Преобразовать в метод
action.CIDR.Lang.ObjC.ConvertToMethod.text=Преобразовать в метод…
action.CIDR.Lang.ObjC.ConvertToProperty.description=Преобразовать переменную экземпляра в свойство
action.CIDR.Lang.ObjC.ConvertToProperty.text=Преобразовать в свойство…
action.CIDR.Lang.ObjC.DeclareMembers.description=Объявить члены класса в интерфейсе или приватной категории
action.CIDR.Lang.ObjC.DeclareMembers.text=Объявить члены…
action.CIDR.Lang.ObjC.ExtractBlock.description=Извлечь параметр блока
action.CIDR.Lang.ObjC.ExtractBlock.text=Параметр блока…
action.CIDR.Lang.ObjC.ExtractCategory.description=Извлечь члены в новую категорию
action.CIDR.Lang.ObjC.ExtractCategory.text=Категория…
action.CIDR.Lang.ObjC.ExtractProtocol.description=Извлечь члены в новый протокол
action.CIDR.Lang.ObjC.ExtractProtocol.text=Протокол…
action.CIDR.Lang.ObjC.ExtractSubclass.description=Извлечь члены в новый подкласс
action.CIDR.Lang.ObjC.ExtractSubclass.text=Подкласс…
action.CIDR.Lang.ObjC.GenerateCopy.description=Сгенерировать -copyWithZone\: из членов класса
action.CIDR.Lang.ObjC.GenerateCopy.text=-copyWithZone\:…
action.CIDR.Lang.ObjC.GenerateDescription.description=Сгенерировать -description из членов класса
action.CIDR.Lang.ObjC.GenerateDescription.text=-description…
action.CIDR.Lang.ObjC.GenerateEncode.description=Сгенерировать -encodeWithCoder\: и initWithCoder\: из членов класса
action.CIDR.Lang.ObjC.GenerateEncode.text=-init/encodeWithCoder\:…
action.CIDR.Lang.ObjC.GenerateInitWith.description=Сгенерировать -initWith... из членов класса
action.CIDR.Lang.ObjC.GenerateInitWith.text=-initWith…
action.CIDR.Lang.ObjC.GenerateIsEqualAndHash.description=Сгенерировать -isEqual\: и -hash из членов класса
action.CIDR.Lang.ObjC.GenerateIsEqualAndHash.text=-isEqual\: и -hash…
action.CIDR.Lang.ObjC.GenerateSharedInstance.description=Сгенерировать Shared Instance
action.CIDR.Lang.ObjC.GenerateSharedInstance.text=+sharedInstance
action.CIDR.Lang.ObjC.IntroduceIvar.description=Создать переменную экземпляра
action.CIDR.Lang.ObjC.IntroduceIvar.text=Переменная экземпляра…
action.CIDR.Lang.ObjC.IntroduceProperty.description=Создать свойство
action.CIDR.Lang.ObjC.IntroduceProperty.text=Свойство…
action.CIDR.Lang.ObjC.Synthesize.description=Сгенерировать Synthesize и переменные экземпляра (опционально)
action.CIDR.Lang.ObjC.Synthesize.text=@synthesize…
action.CIDR.Lang.QualifiedNames.description=Группировать квалифицированные имена
action.CIDR.Lang.QualifiedNames.text=Группировать квалифицированные имена
action.CIDR.Lang.RemoveBodiesAndComments.text=Удалить тела функций и комментарии
action.CIDR.Lang.SwitchHeaderSource.text=Заголовок/исходник
action.CIDR.Lang.SwitchHeaderSourceDebug.text=Отладка заголовка/исходника
action.CIDR.Lang.Wrap.By.Pragma.Region=\#pragma region...endregion
action.CIDR.Lang.goto.definition=О&пределение
action.CIDR.Lang.goto.definition.declaration=Перейти к определению/объявлению
action.CIDR.Lang.goto.definition.declaration.tooltip=Перейти к определению/объявлению
action.CIDR.Lang.goto.super.definition=С&упер-определение
action.com.jetbrains.cidr.lang.modulemap.RebuildModuleMapsInternalAction.text=Пересобрать карты модулей
action.context.file.name=Файл ''{0}''
action.invalid.title=Недопустимо
action.show.inherited.members.members.in.other.categories.description=Показать унаследованные члены и члены в других категориях
action.show.inherited.text=Показать унаследованные
align.dictionary.values=Выровнять значения словаря в столбцах
align.init.list.values=Выровнять значения списка инициализации в столбцах
annotator.type.literals.are.not.supported=Компилятор не поддерживает литералы {0}
blank.lines.after.class.header=После заголовка класса/структуры\:
blank.lines.after.includes=После включений\:
blank.lines.around.classes=Вокруг класса/структуры\:
blank.lines.around.function.declaration=Вокруг объявления функции\:
blank.lines.around.function.declaration.oc=Вокруг объявления метода/функции\:
blank.lines.around.function.definition=Вокруг определения функции\:
blank.lines.around.function.definition.oc=Вокруг определения метода/функции\:
blank.lines.around.global.variable=Вокруг глобальной переменной\:
blank.lines.around.member.variable=Вокруг поля\:
blank.lines.around.member.variable.oc=Вокруг переменной экземпляра/поля\:
blank.lines.before.function.body=Перед телом функции\:
blank.lines.before.function.body.oc=Перед телом метода/функции\:
blank.lines.before.includes=Перед включениями\:
block=Блок
browse.include.hierarchy.action=Иерархия импортов
building.module.maps=Построение карт модулей…
button.generate=Сгенерировать
c.cpp.0.code.folding=Свёртывание кода {0}
cache.downloader.always.download.option=Всегда загружать
cache.downloader.download.option=Загрузить
cache.downloader.not.now.option=Построить кэш локально
cache.downloader.updating.dialog.title=Обновление кэша
cache.downloader.updating.progress.title=Обновление кэша
callable.type.title=Тип вызываемого объекта
change.signature.convert.action=Выберите реализацию для преобразования в {0}
changeSignature.const.member.function.checkbox=Const
changeSignature.constexpr.function.checkbox=Constexpr [&C]
changeSignature.dialog.callable.type=Тип вызываемого объекта\:
changeSignature.dialog.containing.class=Содержащий класс\:
changeSignature.explicit.constructor.checkbox=Явный
changeSignature.noexcept.function.checkbox=Noexcept [&X]
changeSignature.parameter.selector.part=Часть селектора\:
changeSignature.targetNotFound=Курсор должен быть установлен на функции, методе или блоке
changeSignature.usages.atLeasTwoParams=Как минимум два параметра имеют имя ''{0}''
changeSignature.usages.cantBeRemoved=Параметр {0} используется и не может быть удалён
changeSignature.usages.cantBeUnnamed=Параметр {0} используется и не может быть безымянным
changeSignature.usages.cantConvertLanguage=Невозможно преобразовать использование в коде {0}
changeSignature.usages.cantConvertSelectorToFuncBlock=Невозможно преобразовать выражение селектора в функцию/блок
changeSignature.usages.cantConvertToBlock=Невозможно преобразовать в блок\:
changeSignature.usages.conflictsWithNewParameter={0} конфликтует с новым параметром
changeSignature.usages.functionHasSeveralDefinitions=Функция ''{0}'' имеет несколько определений
changeSignature.usages.moreThan1Found=найдено более 1 использования
changeSignature.usages.noUsagesFound=использования не найдены
changeSignature.usages.unrelatedSelector=Возможно несвязанный селектор с тем же именем будет переименован
changeSignature.usages.usageInsideFunction=использование внутри функции/метода
changeSignature.usages.willConflictWith={0} будет конфликтовать с {1}
changeSignature.usages.willConflictWithMethod={0} будет конфликтовать с методом в {1}
checkbox.allow.import.in.completion=Автоматический импорт при автодополнении
checkbox.block.comment.indent=Отступ новых строк в блочных комментариях
checkbox.local.files.with.quotes=Автоматически импортовать локальные файлы с кавычками
checkbox.try.to.sort=Сортировать включения
checkbox.try.to.sort.tooltip=Включить через стиль кода .clang-format
code.style.remember.choice=Запомнить выбор
codeassists.surroundwith.expression=Окружить
collapse.block.expressions=Лямбды
collapse.block.expressions.oc=Блоки и лямбды
collapse.conditionally.non-compiled=Условно не скомпилированный код
collapse.ivars=Переменные экземпляра
collapse.localized.strings=Локализованные строки
collapse.multiline.comments=Многострочные комментарии
collapse.new.line.before.lbrace=Пробел вместо новой строки перед '{' при свёртывании
collapse.synthesizes=Операторы синтеза
collapse.template.param.list=Параметры шаблона
color.class.reference.oc=Класс
color.concept=Шаблоны//Концепт
color.conditionally.non-compiled=Условно не скомпилированный код
color.deduction_guide=Шаблоны//Правило вывода
color.dependent_code=Шаблоны//Зависимый код
color.doxygen.comment=Комментарии//Doxygen//Текст
color.doxygen.tag=Комментарии//Doxygen//Тег
color.doxygen.tag.value=Комментарии//Doxygen//Значение тега
color.enum.const=Константа перечисления
color.extern.variable=Переменные//Внешние
color.format.string.token=Строка//Спецификатор формата в строковом аргументе
color.function.call=Функции//Вызов
color.function.declaration=Функции//Объявление
color.generic.parameter.oc=Параметр обобщения
color.global.variable=Переменные//Глобальные
color.instance.variable.oc=Переменная экземпляра
color.keyword=Ключевые слова//Ключевое слово
color.label=Метка
color.local.variable=Переменные//Локальные
color.macro.name=Имя макроса
color.macro.parameter=Параметры//Параметр макроса
color.method.call.oc=Вызов метода
color.method.declaration.oc=Объявление метода
color.namespace=Пространство имён
color.overloaded.operator=Скобки и операторы//Перегруженный оператор
color.preprocessor.directive=Препроцессор//Директива
color.preprocessor.path=Препроцессор//Путь к заголовку
color.property.attribute.oc=Атрибут свойства
color.property.oc=Свойство
color.protocol.reference.oc=Протокол
color.std.initializer.list.oc=Скобки и операторы//Список инициализации
color.struct.field=Поле структуры
color.struct.union=Класс/структура/перечисление/объединение
color.struct.union.oc=Структура/перечисление/объединение
color.template.type=Шаблоны//Тип
color.template.value=Шаблоны//Значение
color.this.keywords=Ключевые слова//Ключевое слово 'this'
color.this.keywords.oc=Ключевые слова//'self','super','this'
color.typedef=Typedef
command.name.add.parameter.to.constructor=Добавить параметр в конструктор
command.name.add.parameter.to.initwith=Добавить параметр в 'initWith...'
command.name.codestylesettings.extractor=Экстрактор настроек стиля кода
completion.press.keyboard.shortcut.for.all.methods.selectors=Нажмите {0} еще раз для всех селекторов методов
completion.press.keyboard.shortcut.for.global.symbols=Нажмите {0} еще раз для глобальных символов
completion.press.keyboard.shortcut.for.non.imported.symbols=Нажмите {0} еще раз для неимпортованных символов
completion.press.keyboard.shortcut.to.filter.results.by.type=Нажмите {0} для фильтрации результатов по типу
completion.press.shortcut.again.for.non.imported.members=Нажмите {0} {1, choice, 0\#|1\#еще раз} для неимпортованных членов и членов категорий NSObject
completion.press.shortcut.again.for.non.public.members=Нажмите {0} {1, choice, 0\#|1\#еще раз} для непубличных членов
configurable.OCGenerateCodeConfigurable.display.name=Генерация кода
copy.depths.option.deep=глубокое
copy.depths.option.shallow=поверхностное
copy.files.handler.fail=Не удалось скопировать файлы в ''{0}''
create.category.description=Создает новую категорию Objective-C
create.category.dialog.title=Новая категория Objective-C
create.category.no.class.dialog=Не удаётся найти класс ''{0}''.\nХотите создать категорию?
create.category.no.class.dialog.title=Недопустимый класс
create.category.title=Категория Objective-C
create.checkbox.category.interface=Создать файл интерфейса [&I]
create.class.description=Создает новый класс Objective-C и заголовочный файл
create.class.dialog.title=Новый класс Objective-C
create.class.objc=Objective-C (.m)
create.class.objcpp=Objective-C++ (.mm)
create.class.title=Класс Objective-C
create.field.class=Класс [&C]\:
create.field.language=Язык [&L]\:
create.field.name.category=Имя категории [&N]\:
create.file.description=Создает новый файл
create.file.title=Файл
create.implementation.description=Создает новую реализацию
create.implementation.title=Реализация
create.interface.description=Создает новый интерфейс
create.interface.title=Интерфейс
create.protocol.description=Создает новый протокол Objective-C
create.protocol.dialog.title=Новый протокол Objective-C
create.protocol.title=Протокол Objective-C
declaration.name=Объявление
dialog.message.all.members.are.defined=Все определены
dialog.message.do.you.want.to.move.class.member.definitions=Хотите переместить определения членов класса?
dialog.message.objc.do.you.want.to.generate.instance.variables.for.chosen.properties=Хотите сгенерировать переменные экземпляра для выбранных свойств?
dialog.message.some.members.are.defined=Некоторые определены
dialog.title.move.refactoring.adding.imports=Добавление импортов
dialog.title.objc.generate.instance.variables=Сгенерировать переменные экземпляра
dialog.title.select.constructor.to.update=Выберите конструктор для обновления
dialog.title.select.initwith.method.to.update=Выберите метод 'initWith...' для обновления
dump.file.symbol.stats=Статистика символов файла
dump.symbol.stats=Статистика символов
element.description.provider.predefinition.of=Предварительное определение {0}
element.description.provider.symbol.of.parent={0} из {1}
escalate.visibility=Повысить видимость
escalate.visibility.description=Хотите повысить видимость для следующих членов?
expression.name=Выражение
extract.category.dialog=Извлечь категорию
extract.category.unable.create.file=Невозможно создать файл
extract.class.element.not.located.hint=Выбранный элемент является категорией класса, который не находится внутри проекта
extract.class.use.protocol.instead=Используйте "Извлечь суперпротокол" вместо этого
extract.method.cannot.determine.hint=Невозможно определить тип выбранного выражения
extract.method.selected.block.hint=Выбранный блок должен представлять набор операторов или выражение
extract.subclass.dialog.title=Извлечь подкласс
extract.symbol.already.exist={0} уже существует
extract.unavailable.for.protocols=Это действие недоступно для протоколов
filetype.qt.ui.designer.form.description=Форма Qt UI Designer
find.existing.operators.progress.title=Поиск существующих операторов
find.usages.unknown.type=неизвестно
formatter.item.allman.braces=Фигурные скобки в стиле Allman
formatter.item.kr.braces=Фигурные скобки в стиле K&R
formatter.item.stroustrup.braces=Stroustrup
formatter.item.whitesmiths.braces=Фигурные скобки в стиле Whitesmiths
formatter.title.code.generation=Генерация кода
function=Функция
generate.comparison.operators.action.title=Сгенерировать операторы сравнения
generate.comparison.operators.action.title.eq=Сгенерировать операторы равенства
generate.comparison.operators.action.title.rel=Сгенерировать операторы отношения
generate.comparison.operators.additional.eq.option=Сгенерировать \!\= вместе с \=\= [&W]
generate.comparison.operators.additional.eq.option.desc=Сгенерировать \!\= вместе с \=\=
generate.comparison.operators.additional.rel.option=Сгенерировать >, <\=, >\= вместе с < [&W]
generate.comparison.operators.additional.rel.option.desc=Сгенерировать >, <\=, >\= вместе с <
generate.comparison.operators.as.member.option=Сгенерировать как члены класса [&M]
generate.comparison.operators.member.chooser.title=Выберите поля для использования
generate.comparison.operators.usages.all.defined=Все операторы уже определены.
generate.comparison.operators.usages.existing.text=Существующие операторы
generate.comparison.operators.usages.some.defined=Некоторые операторы уже определены.
generate.comparison.operators.use.std.tie=Использовать std\:\:&tie
generate.configurable.add.brief.tag=Добавить тег @brief
generate.configurable.const.volatile.placement=Размещение квалификаторов const/volatile
generate.configurable.documentation.title=Комментарии документации
generate.configurable.instance.variable.prefix=Префикс для переменных экземпляра\:
generate.configurable.instance.variable.suffix=Суффикс для переменных экземпляра\:
generate.configurable.ivars.generation=Генерировать объявления ivar для свойств
generate.configurable.ivars.generation.always=Всегда генерировать
generate.configurable.ivars.generation.ask=Спрашивать
generate.configurable.ivars.generation.never=Никогда не генерировать
generate.configurable.ivars.release.style=Стиль освобождения ivars (для 'dealloc')
generate.configurable.put.ivars=По возможности помещать ivars в реализацию
generate.configurable.retain.parameters=Сохранять объектные параметры в initWith…
generate.configurable.semicolon.after.method=Точка с запятой после сигнатуры метода в реализации
generate.configurable.tag.prefix.comments=Префикс тегов в однострочных комментариях\:
generate.configurable.top.level.declarations.order=Порядок объявлений верхнего уровня
generate.configurable.use.nsinteger.and.cgfloat=Использовать NSInteger и CGFloat при введении переменной
generate.configurable.use.property.setters=Использовать сеттеры свойств в initWith…
generate.configuralble.tag.prefix.block.comments=Префикс тегов в блочных комментариях\:
generate.definitions.action.memberChooserTitle=Выберите функции для генерации определений
generate.definitions.action.name=Сгенерировать определения…
generate.definitions.action.noMembers=В {0} нет функций для генерации определений
generate.definitions.action.noParent=Нет функций для генерации определений
generate.definitions.action.title=Сгенерировать определения
generate.definitions.intention.familyName=Сгенерировать определения
generate.definitions.intention.inlineText=Сгенерировать определение на месте
generate.definitions.intention.outsideText=Сгенерировать определение
generate.definitions.progress.text=Поиск существующих определений…
generate.definitions.quickfix.inlineText=Сгенерировать определение для {0} на месте
generate.definitions.quickfix.outsideText=Сгенерировать определение для {0}
generate.getter.add.prefix=Добавлять префиксы get/is к геттерам
generate.setter.add.prefix=Добавлять префикс set к сеттерам
generate.stream.output.action.title=Сгенерировать оператор потокового вывода
generate.stream.output.member.chooser.title=Выберите поля для использования
generate.stream.output.usages.all.defined=Оператор потокового вывода уже определен
generate.stream.output.usages.existing.text=Существующий оператор
goto.overridden=Перейти к переопределённому {0}...
goto.overridden.functions=Перейти к переопределённым функциям...
goto.overridden.functions.title=Перейти к переопределённым функциям
goto.overridden.methods=Перейти к переопределённым методам...
goto.overridden.methods.title=Перейти к переопределённым методам
goto.overridden.title=Перейти к переопределённому {0}
goto.related.symbol.name1=Перейти к определению(ям)
goto.related.symbol.name1.tooltip=Перейти к определению(ям)
goto.related.symbol.name2=Перейти к {0} ''{1}''
goto.related.symbol.name2.tooltip=Перейти к {0} ''{1}''
goto.related.symbol.name3=Перейти к предварительному определению {0}
goto.related.symbol.name3.tooltip=Перейти к предварительному определению {0}
goto.related.symbol.name4=Перейти к определению {0}
goto.related.symbol.name4.tooltip=Перейти к определению {0}
goto.related.symbol.name5=Перейти к объявлению {0}
goto.related.symbol.name5.tooltip=Перейти к объявлению {0}
goto.related.symbol.name6=Перейти к связанному {0}
goto.related.symbol.name6.tooltip=Перейти к связанному {0}
goto.subclass=Перейти к подклассу
goto.subclass.title=Перейти к подклассу
goto.super.type.name1=Перейти к родительскому {0} в {1}
goto.super.type.name2=Перейти к базовой функции в {0}
goto.super.type.name3=Перейти к родительскому типу
goto.symbol=Перейти к
goto.symbol.ellipsis=Перейти к…
group.option.import=Импортовать в .h
group.option.predefine=Предварительно объявить в .h/Импортовать в .m
header.search.root.custom.headers=Пользовательские заголовки
header.search.root.explicit.frameworks=Явные фреймворки
header.search.root.frameworks=Фреймворки
header.source.looking.for.the.best.file=Поиск связанных файлов
highlighter.change.file.length.limit=Изменить максимальную длину файла
highlighter.change.file.length.limit.input=Введите новую максимальную длину для файлов {0} в символах
highlighter.max.file.length.title=Максимальная длина файла
hmap.description={0} карта заголовков
icon.tooltip.const.decl=Константа {0}
if.responds.to.surround.error.hint=В выбранном коде нет выражений отправки сообщений
implement.cpp.action.memberChooserTitle=Выберите функции для реализации
implement.cpp.action.name=Реализовать функции…
implement.cpp.action.noMember=В {0} нет функций для реализации
implement.cpp.action.noParent=Нет функций для реализации
include.cpp.intention.text=Узнать больше
include.cpp.message=''\#include <C++>'' - это глобальное, инклюзивное и разнообразное сообщество для разработчиков, интересующихся C++
include.cpp.url=https\://www.includecpp.org/
indent.block=Отступ в лямбдах
indent.block.oc=Отступ в блоках и лямбдах
indent.c.struct=Отступ для элементов простых структур и перечислений
indent.class=Отступ для элементов классов
indent.class.oc=Отступ для элементов классов C++
indent.implementation=Отступ для элементов '@implementation'
indent.interface.protocol=Отступ для элементов '@interface' и '@protocol'
indent.namespace=Отступ для элементов пространства имён
indent.not.ivar=За исключением списка переменных экземпляра
indent.preprocessor.directive=Отступ для директив препроцессора
indent.preprocessor.directive.as.code=Следовать отступам кода
indent.visibility.keywords=Отступ для ключевых слов видимости в классе/структуре
inlay.oc.type.hints.lambdas=Показывать подсказки для сигнатуры оператора вызова лямбды
inlay.oc.type.hints.obvious.types=Показывать подсказки для очевидных типов. Включает конструкторо-подобные выражения, явные приведения типов, литералы, new-выражения, значения enum с областью видимости, простые целочисленные типы
inlay.oc.type.hints.parameter.types=Показывать подсказки для выведенных типов параметров
inlay.oc.type.hints.return.types=Показывать подсказки для выведенных типов возврата функций. Также влияет на пропущенные типы возврата лямбд
inlay.oc.type.hints.variables=Показывать подсказки для переменных с выведенным типом
inlay.parameters.oc.clangd.namehints.array.indices=Показывать индекс массива. Designated инициализаторы не подсказываются.
inlay.parameters.oc.clangd.namehints.construct.expr=Показывать подсказки для конструкторных выражений различных форм инициализации (...)、{...} ...
inlay.parameters.oc.clangd.namehints.enums=Показывать подсказки для констант перечислений
inlay.parameters.oc.clangd.namehints.non.const.references=Показывать '\\&' вместо имени параметра. Эта опция переключает между ними, но '\\&' отображается всегда, тогда как имя параметра может быть скрыто, например, из-за предшествующего комментария.
inline.handler.check.for.validness=Проверка…
inspection.message.function.not.implemented={0} не реализован
inspection.name.is.never.used={0} никогда не используется
inspections.duplicate.explicitInstantiation=Дублирующаяся явная инстанциация
inspections.fileChecks.allContextsUnloaded=Индексация отключена для всех доступных контекстов разрешения этой цели; функции анализа кода могут работать некорректно.
inspections.fileChecks.headerTooLarge=Файл содержит встроенный заголовок ({3}) с длиной ({0}), превышающей настроенный лимит для {1} ({2}). Заголовок не разобран.
inspections.fileChecks.headerTooLargePlatform=Файл содержит встроенный заголовок ({2}) с длиной ({0}), превышающей настроенный лимит ({1}). Заголовок не разобран.
inspections.fileChecks.sourceTooLarge=Размер файла ({0}) превышает настроенный лимит для {1} ({2}). Функции анализа кода недоступны.
inspections.templateArguments.tooFew=Слишком мало аргументов шаблона, ожидается {0}
inspections.templateArguments.tooFewAtLeast=Слишком мало аргументов шаблона, ожидается как минимум {0}
inspections.templateArguments.tooMany=Слишком много аргументов шаблона, ожидается {0}
inspections.templateArguments.tooManyAtMost=Слишком много аргументов шаблона, ожидается не более {0}
inspections.templateArguments.typeInsteadOfValue=Ожидается тип вместо значения
inspections.templateArguments.valueInsteadOfType=Ожидается значение вместо типа
inspections.typeChecks.neitherNumericNorPointer=Выражение типа ''{0}'' не является ни числовым, ни указателем
inspections.typeChecks.notNumeric=Выражение типа ''{0}'' не является числовым
inspections.typeChecks.volatileConflict=Присваивание не-volatile структуры volatile структуре
label.copy.depth=Глубина
lambda=Lambda
livetemplate.description.for=Индексированный цикл for(;;)
livetemplate.description.iter=Итерация по диапазону (C++11)
livetemplate.description.itit=Итерация с использованием функций-членов begin/end
loading.headers.search.roots=Загрузка корней поиска заголовков…
loading.module.maps=Загрузка карт модулей…
method=Метод
move.dialog.create.new.class=Создать новый класс
move.dialog.create.new.file=Создать новый файл
move.dialog.destination=Назначение\:
move.dialog.move.declarations=Переместить объявления
move.dialog.move.declarations.to.file=Переместить объявления в файл (существующий или новый)\:
move.dialog.move.members.to.class=Переместить члены в класс (существующий или новый)\:
move.dialog.put.to.namespace=Поместить в пространство имён (существующее или новое)\:
move.dialog.target.file.does.not.exist=Целевой файл ''{0}'' еще не существует.
move.processor.skip=Пропустить
naming.convention.entity.any=Любой
naming.convention.entity.class=Класс
naming.convention.entity.class.member.field=Поле класса
naming.convention.entity.class.member.function=Метод класса
naming.convention.entity.enumeration=Перечисление
naming.convention.entity.enumerator=Перечислитель
naming.convention.entity.global.function=Глобальная функция
naming.convention.entity.global.variable=Глобальная переменная
naming.convention.entity.kind=Тип сущности
naming.convention.entity.local.variable=Локальная переменная
naming.convention.entity.macro=Макрос
naming.convention.entity.namespace=Пространство имён
naming.convention.entity.parameter=Параметр
naming.convention.entity.struct=Структура
naming.convention.entity.struct.member.field=Поле структуры
naming.convention.entity.struct.member.function=Метод структуры
naming.convention.entity.typedef=Typedef
naming.convention.entity.union=Объединение
naming.convention.header.guard.style.help=Вы можете использовать предопределённые переменные, такие как\:<br><b>${PROJECT_NAME}</b>, <b>${PROJECT_REL_PATH}</b>, <b>${FILE_NAME}</b>, <b>${EXT}</b> и <b>${UUID}</b>.<br>Также доступны все предопределённые переменные из <i>Редактор/Файлы и шаблоны кода</i> (<i>вкладка Файлы</i>)<br>(например, <b>${USER}</b>, <b>${DATE}</b> и т.д.)
naming.convention.prefix=Префикс
naming.convention.specifier=Спецификатор
naming.convention.suffix=Суффикс
naming.convention.title=Соглашение об именовании
naming.convention.visibility=Видимость
navigation.goto.please.wait=Пожалуйста, подождите…
navigation.goto.resolving.target=Определение цели…
navigation.import.hierarchy.included.action=Иерархия включенных файлов
navigation.import.hierarchy.included.action.description=Переключиться на иерархию включенных файлов
navigation.import.hierarchy.included.title=Файлы, включенные в {0}
navigation.import.hierarchy.including.action=Иерархия включений
navigation.import.hierarchy.including.action.description=Переключиться на иерархию включений
navigation.import.hierarchy.including.title=Файлы, включающие {0}
navigation.import.hierarchy.next.occurence=Перейти к следующему файлу
navigation.import.hierarchy.previous.occurence=Перейти к предыдущему файлу
new.definition.button.create=Создать
new.definition.dialog.title.create.new.constructor=Создать новый конструктор
new.definition.dialog.title.create.new.function=Создать новую функцию
new.definition.dialog.title.create.new.method=Создать новый метод
oc.declare.members.implementation.undeclared=Реализация (не объявлено)
oc.inlay.hints.blacklist.pattern.explanation=Чтобы отключить подсказки для метода, используйте соответствующий шаблон\: <p> <code><b>(*info)<b></code> - методы с одним параметром, имя которого заканчивается на info<br> <code><b>(key, value)<b></code> - методы с параметрами key и value<br> <code><b>*\:\:put(key, value)<b></code> - методы put с параметрами key и value<br> </p>
oc.inlay.hints.disable.function=Отключить подсказки для {0, choice, 0\#метода|1\#функции|2\#конструктора} ''{1}''
oc.inlay.hints.show.amp.nonconst.references=Показывать '\\&' для неконстантных ссылок
oc.inlay.hints.show.array.indices=Показывать подсказки для индексов массива
oc.inlay.hints.show.hints.for.constructors=Показывать подсказки для выражений конструктора
oc.inlay.hints.show.hints.for.enum.constants=Показывать подсказки для констант перечислений
oc.inlay.hints.show.settings=Настройки подсказок…
oc.inlay.hints.type.deduced.parameter.types=Выведенные типы параметров
oc.inlay.hints.type.deduced.parameter.types.description=Выведенные типы параметров
oc.inlay.hints.type.deduced.return.types=Выведенные типы возврата
oc.inlay.hints.type.deduced.return.types.description=Выведенные типы возврата
oc.inlay.hints.type.for.lambdas=Лямбды
oc.inlay.hints.type.for.lambdas.description=Лямбды
oc.inlay.hints.type.for.variables=Переменные
oc.inlay.hints.type.for.variables.description=Переменные
oc.inlay.hints.type.main.checkbox=Показывать подсказки типов для\:
oc.inlay.hints.type.name=Типы
oc.inlay.hints.type.obvious.types=Очевидные типы
oc.inlay.hints.type.obvious.types.description=Очевидные типы
oc.resolve.widget.display.name=Панель контекста разрешения OC
other.categories.and.inherited.members=Другие категории и унаследованные члены
override.implement.cpp.action.insertOverride=&Вставить атрибут "override"
override.implement.cpp.action.insertVirtualWithOverride=Вставить атрибут "virtual" вместе с "override"
override.implement.cpp.action.memberChooserTitle=Выберите функции для переопределения/реализации
override.implement.cpp.action.name=Переопределить функции…
override.implement.cpp.action.noMember=В {0} нет функций для переопределения/реализации
override.implement.cpp.action.noParent=Нет функций для переопределения/реализации
override.implement.cpp.action.showNonVirtual=Показать &невиртуальные функции
override.implement.cpp.action.title=Переопределить/реализовать функции
override.implement.show.no.optional.members=Показать опциональные члены (без опциональных)
override.implement.show.no.synthesized.accessors=Показать сгенерированные аксессоры (без аксессоров)
override.implement.show.only.optional.members=Показать опциональные члены (только опциональные)
override.implement.show.only.synthesized.accessors=Показать сгенерированные аксессоры (только аксессоры)
polymorphic.call=(полиморфный вызов)
popup.title.element.found.singular={0} (Найден {1} элемент)
popup.title.element.found.so.far.singular={0} (Пока найден {1} элемент)
popup.title.elements.found.plural={0} (Найдено {1} элементов)
popup.title.elements.found.so.far.plural={0} (Пока найдено {1} элементов)
processing.module.maps=Обработка карт модулей…
progress.text.updating.symbols=Обновление символов…
progressbar.long.resolve.description=Операция разрешения требует больше времени...\nЕсли вы отмените, действия редактора, зависящие от разрешения, будут недоступны
push.down.dialog.searching.inheritors=Поиск наследников
push.down.members.dialog=Переместить члены {0} вниз в\:
qdoc.assignment=присваивание
qdoc.byte.0={0, choice, 1\#байт|2\#байта|5\#байтов}
qdoc.construction=конструирование
qdoc.copy=Копировать
qdoc.declared.in=Объявлено в\:
qdoc.definition=Определение\:
qdoc.description.copied.from=Описание скопировано из\:
qdoc.move=Переместить
qdoc.offset=Смещение
qdoc.on.cppreference="{0}" на cppreference.com
qdoc.padding=Заполнение
qdoc.possible.values=Возможные значения
qdoc.replacement=Замена\:
qdoc.size=Размер
qdoc.value=Значение
qdoc.value.range=Диапазон значений
quickfixes.import.symbol=Импортовать символ
quickfixes.make.function.virtual=Сделать функцию виртуальной
quickfixes.make.property.dynamic=Сделать {0} @dynamic
quickfixes.synthesize=Синтезировать {0}
refactoring.ambiguous=Неоднозначные функции нельзя рефакторить
refactoring.category.not.in.project=Выбранный элемент является категорией класса, который не расположен внутри проекта
refactoring.categoryElement.not.in.project=Выбранный элемент находится в категории класса, который не расположен внутри проекта
refactoring.changeSignature.destructor=Деструкторы нельзя рефакторить
refactoring.convertIvarUsagesToProperties=Преобразовать использование ivar в свойства [&C]
refactoring.dialog.can.t.move.to.itself=Невозможно переместить {0} в самого себя
refactoring.dialog.file.name.invalid=Недопустимое имя файла
refactoring.dialog.file.not.located.inside.project=Файл "{0}" не находится внутри проекта
refactoring.dialog.no.target.file.selected=Целевой файл не выбран
refactoring.dialog.source.and.target.should.be.different=Источник и цель должны различаться
refactoring.dialog.target.namespace.name.invalid=Недопустимое имя целевого пространства имён
refactoring.dialog.target.ns.is.part.of.qualified.ns=Целевое пространство имён является частью квалифицированного пространства имён
rename.renameAssociatedClass=Переименовать также связанный класс/структуру
rename.renameAssociatedFiles=Переименовать также связанные файлы?
rename.renameContainingFile=Переименовать также содержащий файл?
rename.searchForMacros=Искать использования макроса ''{0}'' (содержащего переименованный элемент) в глобальной области видимости?
resolve.contexts.all.contexts=Перечислены все контексты проекта
resolve.contexts.available=Доступные контексты разрешения
resolve.contexts.create.json.config=Создать 'c_cpp_properties.json'
resolve.contexts.create.json.hint=Текущая система сборки не поддерживается. Настройте зависимости в 'c_cpp_properties.json' или настройте CMake.
resolve.contexts.current.file=Текущий файл {0} разрешается в контексте ''{1}''
resolve.contexts.edit.json.config=Редактировать ''{0}''
resolve.contexts.file.resolved.in=Файл будет разрешен в выбранном контексте
resolve.contexts.loading=Загрузка контекстов разрешения…
resolve.contexts.name=Контекст разрешения
resolve.contexts.no.context=<нет контекста>
resolve.contexts.prefix=Контекст
resolve.contexts.prefix.no.context=Нет контекста разрешения для текущего файла
resolve.contexts.prefix.unsupported.build.system.context=Текущая система сборки не поддерживается. Код разрешается с зависимостями из ''{0}''
resolve.contexts.prefix.unsupported.build.system.no.json.context=Текущая система сборки не поддерживается. Настройте зависимости в 'c_cpp_properties.json' или настройте CMake.
resolve.contexts.select.automatically=Выбрать автоматически
resolve.contexts.unindexed.contexts=Неиндексированные контексты
resolve.contexts.unsupported.build.system.no.json.context=Нет
resolve.show.all.contexts=Показать все контексты…
resolve.show.related.contexts=Показать только связанные контексты
resource.language.unknown=неизвестно
saving.module.maps=Сохранение карт модулей…
saving.symbols=Сохранение символов…
search.scope.project.non.source.files=Неисходные файлы проекта
search.scope.project.source.files=Исходные файлы проекта
settings.hint.choice.prefix.suffix.must.contain.only.letters.or.digits.or.symbols={0, choice, 0\#Префикс|1\#Суффикс} должен содержать только буквы, цифры или символы '_'
settings.naming.convention=Соглашение об именовании
settings.prefix.must.start.with.letter.or.symbol=Префикс должен начинаться с буквы или символа '_'
settings.title.naming.convention=Соглашение об именовании
settings.title.objective.c.class.order=Порядок классов Objective-C
space.after.colon.in.foreach=После двоеточия 'for'
space.after.colon.in.selector.oc=После двоеточия в селекторах
space.after.cup.in.blocks.oc=После '^' в блоках
space.after.dictionary.literal.colon=После двоеточия в битовом поле
space.after.dictionary.literal.colon.oc=После двоеточия в литерале словаря 'key\:value' и битовом поле
space.after.initialization.lists.colon=После двоеточия списка инициализации конструктора
space.after.method.parameter.type.parentheses.oc=После скобок типа параметра метода
space.after.method.return.type.parentheses.oc=После скобок возвращаемого типа метода
space.after.pointer.in.declaration=После '*' в объявлениях
space.after.reference.in.declaration=После '\\&' в объявлениях
space.after.reference.in.rvalue=После разыменования и взятия адреса
space.after.structures.rbrace=После правой фигурной скобки в структурах
space.after.superclass.colon=После двоеточия базового класса
space.after.visibility.sign.in.method.declaration.oc=После +/- в объявлениях методов
space.around.lambda.arrow='->' в возвращаемом типе
space.around.pm.operators=Операторы указателя на член (->、 .、->*、.*)
space.around.relational.operators=Операторы отношения (<, >, <\=, >\=, <\=>)
space.around.shift.operators=Операторы сдвига (<<, >>)
space.before.autorelease.pool.lbrace.oc=Левая фигурная скобка '@autoreleasepool'
space.before.catch.keyword.oc=Ключевое слово '@catch'
space.before.catch.lbrace.oc=Левая фигурная скобка '@catch'
space.before.catch.parentheses.oc=Круглые скобки '@catch'
space.before.category.parentheses.oc=Перед скобками категории
space.before.chained.send.message.oc=Перед цепочкой отправки сообщений
space.before.class.lbrace=Левая фигурная скобка класса/структуры
space.before.colon.in.foreach=Перед двоеточием 'for'
space.before.dictionary.literal.colon=Перед двоеточием в битовом поле
space.before.dictionary.literal.colon.oc=Перед двоеточием в литерале словаря 'key\:value' и битовом поле
space.before.export.lbrace=Левая фигурная скобка экспорта
space.before.finally.keyword.oc=Ключевое слово '@finally'
space.before.finally.lbrace.oc=Левая фигурная скобка '@finally'
space.before.function.call.parentheses=Круглые скобки вызова функции
space.before.function.parentheses=Круглые скобки объявления функции
space.before.init.list.lbrace=Левая фигурная скобка списка инициализации
space.before.initialization.lists.colon=Перед двоеточием списка инициализации конструктора
space.before.lt.template=Перед '<'
space.before.method.lbrace=Левая фигурная скобка функции
space.before.method.lbrace.oc=Левая фигурная скобка метода/функции
space.before.namespace.lbrace=Левая фигурная скобка пространства имён
space.before.pointer.in.declaration=Перед '*' в объявлениях
space.before.property.attributes.parentheses.oc=Круглые скобки атрибутов '@property'
space.before.protocols.brackets.oc=Перед квадратными скобками списка протоколов
space.before.reference.in.declaration=Перед '\\&' в объявлениях
space.before.superclass.colon=Перед двоеточием базового класса
space.before.synchronized.lbrace.oc=Левая фигурная скобка '@synchronized'
space.before.synchronized.parentheses.oc=Скобки '@synchronized'
space.before.try.lbrace.oc=Левая фигурная скобка '@try'
space.between.adjacent.brackets=Сохранять пробел между скобками одного типа
space.between.operator.punctuator=Между ключевым словом 'operator' и знаком пунктуации
space.discharged.short.ternary.operator=Пробел между '?' и '\:' в 'a ? \: b'
space.within.array.empty.initializer.braces=Пустые фигурные скобки списков инициализации
space.within.array.empty.initializer.braces.oc=Пустые фигурные скобки литералов коллекций и списков инициализации
space.within.array.initializer.braces=Фигурные скобки списков инициализации
space.within.array.initializer.braces.oc=Фигурные скобки литералов коллекций и списков инициализации
space.within.bracket=Квадратные скобки массива
space.within.catch.parentheses.oc=Круглые скобки '@catch'
space.within.class=В классе/структуре
space.within.empty.code.blocks=Пустые фигурные скобки
space.within.empty.diamond=Внутри пустых <>
space.within.empty.function.call.parentheses=Пустые круглые скобки вызова функции
space.within.empty.function.declaration.parentheses=Пустые круглые скобки объявления функции
space.within.empty.lambda.capture.list.brackets=Пустые квадратные скобки списка захвата lambda
space.within.function.call.parentheses=Круглые скобки вызова функции
space.within.function.declaration.parentheses=Круглые скобки объявления функции
space.within.lambda.capture.list.brackets=Квадратные скобки списка захвата lambda
space.within.method.parameter.type.parentheses.oc=Скобки типа параметра метода
space.within.method.return.type.parentheses.oc=Скобки возвращаемого типа метода
space.within.property.attributes.parentheses.oc=Круглые скобки атрибутов '@property'
space.within.protocols.brackets.oc=Квадратные скобки списка протоколов
space.within.send.message.brackets.oc=Квадратные скобки отправки сообщения
space.within.structured.binding.list.brackets=Квадратные скобки списка структурного связывания
space.within.synchronized.parentheses.oc=Скобки '@synchronized'
space.within.template=Внутри <...>
space.within.template.declaration=В объявлении шаблона
space.within.template.double.gt=Предотвращение конкатенации >> в шаблоне
space.within.template.inst=В инстанцировании шаблона
statement.name=Оператор
surround.with.block.expression.template=^{ return expr; }
surround.with.do.while.template=do / while
surround.with.for.template=for
surround.with.if.else.template=if / else
surround.with.if.respondsToSelector.template=if respondsToSelector
surround.with.if.template=if
surround.with.not.expr.template=\!(expr)
surround.with.parenthesis.template=(expr)
surround.with.while.template=while
switch.header.source.no.results=Нет связанных файлов
switch.header.source.popup.title=Перейти к заголовку/исходному файлу
switch.header.source.separator.headers=Заголовки
switch.header.source.separator.sources=Исходные файлы
symbol.kind.name.lowercase.block=блок
symbol.kind.name.lowercase.built.in.symbol=встроенный символ
symbol.kind.name.lowercase.class=класс
symbol.kind.name.lowercase.compatibility.alias=псевдоним совместимости
symbol.kind.name.lowercase.concept=концепт
symbol.kind.name.lowercase.constructor=конструктор
symbol.kind.name.lowercase.default=символ
symbol.kind.name.lowercase.destructor=деструктор
symbol.kind.name.lowercase.enum=enum
symbol.kind.name.lowercase.enum.constant=константа перечисления
symbol.kind.name.lowercase.exception.variable=переменная исключения
symbol.kind.name.lowercase.expression=выражение
symbol.kind.name.lowercase.field=поле
symbol.kind.name.lowercase.file=файл
symbol.kind.name.lowercase.folder=папка
symbol.kind.name.lowercase.function=функция
symbol.kind.name.lowercase.generic.parameter=параметр обобщения
symbol.kind.name.lowercase.global.variable=глобальная переменная
symbol.kind.name.lowercase.implementation=реализация
symbol.kind.name.lowercase.import=импорт
symbol.kind.name.lowercase.instance.variable=переменная экземпляра
symbol.kind.name.lowercase.interface=интерфейс
symbol.kind.name.lowercase.keyword=ключевое слово
symbol.kind.name.lowercase.label=метка
symbol.kind.name.lowercase.lambda=lambda
symbol.kind.name.lowercase.local.variable=локальная переменная
symbol.kind.name.lowercase.localized.string=локализованная строка
symbol.kind.name.lowercase.macro=макрос
symbol.kind.name.lowercase.macro.parameter=параметр макроса
symbol.kind.name.lowercase.method1=метод
symbol.kind.name.lowercase.namespace=пространство имён
symbol.kind.name.lowercase.parameter=параметр
symbol.kind.name.lowercase.property=свойство
symbol.kind.name.lowercase.protocol=протокол
symbol.kind.name.lowercase.struct=struct
symbol.kind.name.lowercase.synthesize.statement=оператор синтеза
symbol.kind.name.lowercase.template.parameter=параметр шаблона
symbol.kind.name.lowercase.type=тип
symbol.kind.name.lowercase.type.parameter=параметр типа
symbol.kind.name.lowercase.union=union
symbol.kind.name.lowercase.using=using
symbol.kind.name.uppercase.block=Блок
symbol.kind.name.uppercase.built.in.symbol=Встроенный символ
symbol.kind.name.uppercase.class=Класс
symbol.kind.name.uppercase.compatibility.alias=Псевдоним совместимости
symbol.kind.name.uppercase.concept=Концепт
symbol.kind.name.uppercase.constructor=Конструктор
symbol.kind.name.uppercase.default=Символ
symbol.kind.name.uppercase.destructor=Деструктор
symbol.kind.name.uppercase.enum=Перечисление
symbol.kind.name.uppercase.enum.constant=Константа перечисления
symbol.kind.name.uppercase.exception.variable=Переменная исключения
symbol.kind.name.uppercase.expression=Выражение
symbol.kind.name.uppercase.field=Поле
symbol.kind.name.uppercase.file=Файл
symbol.kind.name.uppercase.folder=Папка
symbol.kind.name.uppercase.function=Функция
symbol.kind.name.uppercase.generic.parameter=Параметр обобщения
symbol.kind.name.uppercase.global.variable=Глобальная переменная
symbol.kind.name.uppercase.implementation=Реализация
symbol.kind.name.uppercase.import=Импорт
symbol.kind.name.uppercase.instance.variable=Переменная экземпляра
symbol.kind.name.uppercase.interface=Интерфейс
symbol.kind.name.uppercase.keyword=Ключевое слово
symbol.kind.name.uppercase.label=Метка
symbol.kind.name.uppercase.lambda=Лямбда
symbol.kind.name.uppercase.local.variable=Локальная переменная
symbol.kind.name.uppercase.localized.string=Локализованная строка
symbol.kind.name.uppercase.macro=Макрос
symbol.kind.name.uppercase.macro.parameter=Параметр макроса
symbol.kind.name.uppercase.method1=Метод
symbol.kind.name.uppercase.namespace=Пространство имён
symbol.kind.name.uppercase.parameter=Параметр
symbol.kind.name.uppercase.property=Свойство
symbol.kind.name.uppercase.protocol=Протокол
symbol.kind.name.uppercase.struct=Структура
symbol.kind.name.uppercase.synthesize.statement=Оператор синтеза
symbol.kind.name.uppercase.template.parameter=Параметр шаблона
symbol.kind.name.uppercase.type=Тип
symbol.kind.name.uppercase.type.parameter=Параметр типа
symbol.kind.name.uppercase.union=Объединение
symbol.kind.name.uppercase.using=Using
symbol.table.activity.building.symbols=Создание символов…
symbol.table.activity.collecting.files=Сбор файлов…
symbol.table.activity.loading.header.maps=Загрузка карт заголовков…
symbol.table.activity.loading.symbols=Загрузка символов…
symbol.table.activity.updating.symbols=Обновление символов…
symbol.table.dump.stats.action=Статистика записана в {0}
tab.title.existing=Существующие
title.capture.list.group=Список захвата лямбды
title.ctor.init.list.group=Список инициализации конструктора
title.function.call.arguments.group=Аргументы вызова функции
title.function.nontop.return.type=В области видимости класса
title.function.parameters.group=Параметры объявления функции
title.function.return.type.group=После типа возвращаемого значения функции
title.function.top.return.type=В глобальной области и пространствах имен
title.shift.operators.group=Операторы '<<', '>>'
title.structured.binding.list.group=Список структурного связывания
title.superclass.list.group=Список базовых классов
title.template.call.arguments.group=Аргументы инстанцирования шаблона
title.template.decl.class.group=Объявление шаблонного класса
title.template.decl.func.group=Объявление шаблонной функции
title.template.parameters.group=Параметры объявления шаблона
usage.delete.out.of.project.message={0} Продолжить рефакторинг?
usage.delete.out.of.project.title=Предупреждение
usage.include.derived.classes.checkbox.text=Включить производные классы
usage.include.ivar.checkbox.text=Включить {0}
usage.include.property.checkbox.text=Включить {0}
usage.instance.variables.search.message.delete=Вы хотите также удалить {0}?
usage.instance.variables.search.message.find.usages=Вы хотите также найти использования {0}?
usage.instance.variables.search.title=Поиск переменных экземпляра
usage.method.search.message.delete={0}\n\nВы хотите удалить базовый {1}?
usage.method.search.message.find.usages={0}\n\nВы хотите найти использования базового {1}?
usage.method.search.title=Поиск метода
usage.overrides.message={0} переопределяет {1} в {2}.
usage.overrides.out.of.project.message={0} переопределяет {1} в {2}, который находится вне проекта.
usage.properties.search.message.delete=Вы хотите также удалить {0}?
usage.properties.search.message.find.usages=Вы хотите также найти использования {0}?
usage.properties.search.title=Поиск свойств
wrapping.align.in.columns=Выравнивать по колонкам
wrapping.align.multiline.brackets=Выравнивать многострочные квадратные скобки
wrapping.align.multiline.fields.groups=Группы переменных
wrapping.align.multiline.lt.gt=Выравнивать многострочные '<','>'
wrapping.align.multiline.parentheses=Выравнивать многострочные круглые скобки
wrapping.array.initializer=Списки инициализации
wrapping.array.initializer.lbrace.on.next.line.oc=Новая строка после '{', '['
wrapping.array.initializer.oc=Литералы коллекций и списки инициализации
wrapping.array.initializer.rbrace.on.next.line.oc=Размещать '}', ']' на новой строке
wrapping.before.brace.namespace=В пространствах имен
wrapping.block.brace.placement=В лямбдах
wrapping.block.brace.placement.oc=В блоках и лямбдах
wrapping.brace.placement.class.declaration=В классах и структурах
wrapping.catch.on.new.line='catch' на новой строке
wrapping.catch.on.new.line.oc='@catch' на новой строке
wrapping.finally.on.new.line.oc='@finally' на новой строке
wrapping.function.brace.placement=В функциях
wrapping.gt.on.new.line=Размещать '>' на новой строке
wrapping.indent.template.body.if.wrapped=Отступ для тела шаблона при переносе
wrapping.keep.directive.at.first.column=Директива в первой колонке
wrapping.keep.nested.namespaces.in.one.line=Вложенные пространства имён в одной строке
wrapping.keep.simple.blocks.in.one.line=Простые лямбды в одной строке
wrapping.keep.simple.blocks.in.one.line.oc=Простые блоки и лямбды в одной строке
wrapping.keep.simple.case.inline=Простые case в одной строке
wrapping.keep.simple.methods.in.one.line=Простые функции в одной строке
wrapping.keep.simple.methods.in.one.line.oc=Простые методы и функции в одной строке
wrapping.method.brace.placement=В методах
wrapping.method.call.arguments.special.dictionary.pairs.treatment=Специальная обработка инициализации NSDictionary
wrapping.method.parameters.align.by.colons=Выравнивать по двоеточиям
wrapping.new.line.after.colon=Новая строка после '\:'
wrapping.new.line.after.lt=Новая строка после '<'
wrapping.new.line.always=Всегда
wrapping.new.line.before.colon=Размещать '\:' на новой строке
wrapping.new.line.if.long=Если длинная строка
wrapping.new.line.never=Никогда
wrapping.property.declaration.oc=Объявление @property
wrapping.structures.in.one.line=Классы и структуры в одной строке
wrapping.ternary.short.inline=Не разрывать '?\:' в 'a ?\: b'
wrapping.try.statement=Оператор 'try'
wrapping.try.statement.oc=Оператор '@try'