0.is.not.an.identifier=''{0}'' не является идентификатором.
annotation.name.is.missing=Атрибут аннотации должен иметь формат 'name\=value'
anonymous.class.context.display=Анонимный в {0}
anonymous.class.derived.display=Анонимный класс, производный от {0}
aux.context.display=из {0}
bad.return.type.in.lambda.expression=Неверный тип возвращаемого значения в лямбда-выражении\: {0} невозможно преобразовать в {1}
bad.return.type.in.lambda.expression1=Неверный тип возвращаемого значения в лямбда-выражении\: {0} невозможно преобразовать в void
bad.return.type.in.method.reference=Неверный тип возвращаемого значения в method reference\: невозможно преобразовать {0} в {1}
bound.not.expected=Неожиданная граница
catch.without.try='catch' без 'try'
class.context.display={0} в {1}
class.file.version=Версия {0}
class.literal.expected=Ожидается .class
command.name.insert.block.statement=Вставить блок операторов
conflicting.conjuncts={0} и {1}
context.type.java.comment=Комментарий
context.type.string=Строка
default.language.level.description=По умолчанию SDK
diamond.error.anonymous.inner.classes=Нельзя использовать '<>' с анонимными внутренними классами
diamond.error.anonymous.inner.classes.non.private=Нельзя использовать '<>' из-за non-private метода, который не переопределяет и не реализует метод из супертипа
diamond.error.cannot.infer.arguments=Невозможно вывести аргументы
diamond.error.cannot.infer.arguments.unable.to.resolve.constructor=Невозможно вывести аргументы (не удаётся разрешить конструктор)
diamond.error.cannot.infer.type.arguments=Невозможно вывести аргументы типа для {0}
diamond.error.explicit.type.parameters.for.constructor=Нельзя использовать diamond с явными параметрами типа для конструктора
element.abstract_method=абстрактный метод
element.annotation=аннотация
element.anonymous_class=анонимный класс
element.class=класс
element.constant=константное поле
element.constructor=конструктор
element.enum=enum
element.enum_constant=константа enum
element.expression=выражение
element.extends.list=список extends
element.field=поле
element.initializer=инициализатор
element.interface=интерфейс
element.kind.and.name={0} {1}
element.label=метка
element.local_variable=локальная переменная
element.method=метод
element.method.call=вызов метода
element.module=модуль
element.package=пакет
element.package.statement=Оператор package
element.parameter=параметр
element.pattern_variable=переменная паттерна
element.permits.list=Список permits
element.receiver.parameter=параметр-приёмник
element.record=record
element.record_component=компонент record
element.snippet_body=тело сниппета
element.statement=оператор
element.throws.list=список throws
element.type.arguments=аргументы типа
element.type.parameter=параметр типа
element.type.parameters=Параметры типа
element.type.semicolon=точка с запятой
element.unknown=элемент
element.variable=переменная
else.without.if='else' без 'if'
enum.constant.context=Константа enum ''{0}'' в ''{1}''
error.incompatible.type={0} несовместим с {1}
error.incompatible.type.bad.lambda.return.type=Неверный тип возвращаемого значения в лямбда-выражении\: {0} невозможно преобразовать в {1}
error.incompatible.type.declaration.for.the.method.reference.not.found=Не найдено объявление времени компиляции для method reference
error.incompatible.type.expected.non.void.got.void.method.reference=Несовместимые типы\: ожидается не void, но объявление времени компиляции для method reference имеет тип возвращаемого значения void
error.incompatible.type.expected.value.lambda=Несовместимые типы\: ожидается не void, но тело лямбды является блоком, несовместимым со значением
error.incompatible.type.failed.to.resolve.argument=Не удалось разрешить аргумент
error.incompatible.type.incompatible.equality.constraint=Несовместимое ограничение равенства\: {0} и {1}
error.incompatible.type.incompatible.parameter.types.in.lambda=Неверное количество параметров лямбды\: ожидалось {0}, но найдено {1}
error.incompatible.type.incompatible.parameter.types.in.method.reference=Несовместимые типы параметров в выражении method reference
error.incompatible.type.incompatible.types.expected.not.void.got.void.method.reference=Несовместимые типы\: ожидается не void, но объявление времени компиляции для method reference имеет тип возвращаемого значения void
error.incompatible.type.incompatible.types.expected.void.lambda=Несовместимые типы\: ожидается void, но тело лямбды не является ни выражением-оператором, ни void-совместимым блоком
error.incompatible.type.no.type.variable=не существует экземпляров переменной(ых) типа, чтобы {0}
error.incompatible.type.no.type.variable.0=не существует экземпляров переменной(ых) типа {0}, чтобы {1}
error.incompatible.type.no.valid.function.type.found=Не найден допустимый тип функции для {0}
error.incompatible.type.not.a.functional.interface={0} не является функциональным интерфейсом
error.incompatible.type.not.convertible=Несовместимые типы\: {0} невозможно преобразовать в {1}
error.incompatible.type.parameter.type.is.not.yet.inferred=Тип параметра еще не выведен\: {0}
error.incompatible.type.return.type.is.not.yet.inferred=Тип возвращаемого значения еще не выведен\: {0}
error.incompatible.type.unhandled.exception=Необработанное исключение\: {0}
error.incompatible.upper.bounds=Несовместимые верхние границы\: {0}
error.inference.variable.has.incompatible.bounds=Выводимая переменная {0} имеет несовместимые границы\:\n {1}\: {2}\n{3}\: {4}
error.message.wildcard.not.expected=Неожиданный wildcard
error.type.parameter.has.incompatible.upper.bounds=Параметр типа {0} имеет несовместимые верхние границы\: {1}
expected.array.initializer=Ожидается инициализатор массива
expected.boolean.expression=Ожидается логическое выражение
expected.case.label.element=Ожидается выражение, паттерн, 'default' или 'null'
expected.catch.or.finally=Ожидается 'catch' или 'finally'
expected.class.or.interface=Ожидается 'class' или 'interface'
expected.class.reference=Ожидается ссылка на класс
expected.colon=Ожидается '\:'
expected.colon.or.arrow=Ожидается '\:' или '->'
expected.comma=Ожидается ','
expected.comma.or.rparen=Ожидается ',' или ')'
expected.comma.or.semicolon=Ожидается ',' или ';'
expected.dot=Ожидается '.'
expected.eq=Ожидается '\='
expected.expression=Ожидается выражение
expected.gt=Ожидается '>'
expected.gt.or.comma=Ожидается '>' или ','
expected.identifier=Ожидается идентификатор
expected.identifier.or.semicolon=Ожидается идентификатор или ';'
expected.identifier.or.type=Ожидается идентификатор или тип
expected.lbrace=Ожидается '{'
expected.lbrace.or.semicolon=Ожидается '{' или ';'
expected.lbracket=Ожидается '['
expected.lparen=Ожидается '('
expected.lparen.or.lbracket=Ожидается '(' или '['
expected.lt.or.lparen=Ожидается '<' или '('
expected.module.declaration=Ожидается объявление модуля
expected.module.statement=Ожидается директива модуля
expected.package.reference=Ожидается ссылка на пакет
expected.parameter=Ожидается параметр
expected.parameter.or.rparen=Ожидается параметр аннотации или ')'
expected.pattern=Ожидается паттерн
expected.rbrace=Ожидается '}'
expected.rbracket=Ожидается ']'
expected.resource=Ожидается определение ресурса
expected.rparen=Ожидается ')'
expected.semicolon=Ожидается ';'
expected.statement=Ожидается оператор
expected.string=Ожидается строковый литерал
expected.switch.label=Ожидается 'case', 'default' или '}'
expected.switch.rule=Ожидается выражение, блок или оператор throw
expected.template.fragment=Ожидается фрагмент шаблона
expected.type=Ожидается тип
expected.type.parameter=Ожидается параметр типа
expected.value=Ожидается значение
expected.while=Ожидается 'while'
expected.with=Ожидается 'with'
feature.advanced.collection.api=Lambda-методы в коллекциях
feature.annotations=Аннотации
feature.assertions=Assertions
feature.binary.literals=Двоичные литералы
feature.classfile.api=ClassFile API
feature.collection.factories=Фабричные методы коллекций
feature.diamond.types=Diamond-типы
feature.effectively.final=Effectively final переменные
feature.enhanced.switch=Расширенный 'switch'
feature.enum.qualified.name.in.switch=Qualified enum константы в switch
feature.enums=Enum
feature.extension.methods=Методы-расширения
feature.for.each=For-each циклы
feature.foreign.functions=Foreign Functions и Memory API
feature.generics=Generics
feature.hex.fp.literals=Шестнадцатеричные литералы с плавающей точкой
feature.implicit.classes=Неявно объявленные классы
feature.implicit.import.in.implicit.classes=Неявный import в неявно объявленных классах
feature.inherited.static.main.method=Унаследованный static main метод
feature.inner.statics=Static в inner классах
feature.instance.main.method=Instance main метод
feature.intersections.in.casts=Пересечения типов в приведениях
feature.javadoc.snippets=@snippet в Javadoc
feature.lambda.expressions=Lambda-выражения
feature.local.enums=Локальные enum
feature.local.interfaces=Локальные интерфейсы
feature.lvti=Вывод типов локальных переменных
feature.method.references=Ссылки на методы
feature.module.import.declarations=Объявления импорта модулей
feature.modules=Модули
feature.multi.catch=Мульти-catch
feature.nestmates=Nestmate контроль доступа
feature.no.this.capture=Без захвата 'this' во внутренних классах
feature.objects.class=java.util.Objects API
feature.override.interface=@Override в интерфейсах
feature.pattern.guard.and.record.patterns=Pattern guards и record patterns
feature.patterns.in.switch=Patterns в switch
feature.patterns.instanceof=Patterns в 'instanceof'
feature.primitive.types.in.patterns=Примитивные типы в patterns, instanceof и switch
feature.private.interface.methods=Private методы интерфейсов
feature.record.patterns.in.for.each=Record patterns в for-each циклах
feature.records=Records
feature.scoped.values=Scoped values
feature.sealed.classes=Sealed классы
feature.sequenced.collections=Упорядоченные коллекции
feature.serial.annotation=@Serial аннотация
feature.statements.before.super=Операторы перед super()
feature.static.imports=Static import
feature.static.interface.calls=Вызовы static методов интерфейса
feature.stream.and.optional.api=Stream и Optional API
feature.stream.gatherers=Stream Gatherer
feature.strictfp=Строгая семантика чисел с плавающей точкой
feature.string.switch=Строки в 'switch'
feature.string.templates=Строковые шаблоны
feature.structured.concurrency=Структурированная конкурентность
feature.switch.expressions='Switch' выражения
feature.text.block.escape.sequences=Escape-последовательности '\\s'
feature.text.blocks=Text block литералы
feature.try.with.resources=Try-with-resources
feature.try.with.resources.refs=Ссылки на ресурсы
feature.type.annotations=Аннотации типов
feature.type.receivers=Параметры-приёмники
feature.underscores.in.literals=Подчёркивания в литералах
feature.unnamed.vars=Безымянные patterns и переменные
feature.utf8.property.files=Properties-файлы в кодовании UTF-8
feature.var.lambda.parameter='var' в параметрах lambda
feature.varargs=Методы с переменным числом аргументов
feature.virtual.threads=Виртуальные потоки
feature.with.initial=ThreadLocal.withInitial()
filetype.class.description=Java класс
filetype.class.display.name=Java класс
filetype.java.description=Java
filetype.java.module.description=Java модуль
filetype.java.module.display.name=Java модуль
filetype.jshell.description=Сниппет JShell
finally.without.try='finally' без 'try'
implicit.class.context.display=Неявный класс
import.statement.identifier.or.asterisk.expected.=Ожидается идентификатор или '*'
java.terms.anonymous.class.base.ref=анонимный {0}
javadoc.exception.tag.class.is.not.throwable=Класс {0} не является наследником Throwable
javadoc.exception.tag.exception.is.not.thrown={0} не объявлен как выбрасываемый методом {1}
javadoc.exception.tag.wrong.tag.value=Неверное значение тега
javadoc.param.tag.parameter.name.expected=Ожидается имя параметра
javadoc.param.tag.type.parameter.gt.expected=Ожидается '>'
javadoc.param.tag.type.parameter.name.expected=Ожидается имя параметра типа
javadoc.ref.tag.class.ref.expected=Ожидается ссылка на класс
javadoc.value.field.required=Тег @value должен ссылаться на поле
javadoc.value.field.with.initializer.required=Тег @value должен ссылаться на поле с константным инициализатором
javadoc.value.static.field.required=Тег @value должен ссылаться на статическое поле
javadoc.value.tag.jdk15.required=Тег @value не может иметь аргументов при использовании JDK 1.4 или более ранней версии
jdk.1.3.language.level.description=1.3 - Обычная старая Java
jdk.1.4.language.level.description=1.4 - Ключевое слово 'assert'
jdk.1.5.language.level.description=5 - Ключевое слово 'enum', дженерики, автоупаковка и т.д.
jdk.1.6.language.level.description=6 - @Override в интерфейсах
jdk.1.7.language.level.description=7 - Даймонд-оператор, ARM, мульти-catch и т.д.
jdk.1.8.language.level.description=8 - Лямбды, аннотации типов и т.д.
jdk.1.9.language.level.description=9 - Модули, private методы в интерфейсах и т.д.
jdk.10.language.level.description=10 - Вывод типов локальных переменных
jdk.11.language.level.description=11 - Синтаксис локальных переменных для параметров лямбда
jdk.12.language.level.description=12 - Нет новых языковых возможностей
jdk.13.language.level.description=13 - Нет новых языковых возможностей
jdk.14.language.level.description=14 - Switch-выражения
jdk.15.language.level.description=15 - Текстовые блоки
jdk.16.language.level.description=16 - Records, паттерны, локальные enum и интерфейсы
jdk.17.language.level.description=17 - Sealed типы, строгая семантика чисел с плавающей точкой
jdk.18.language.level.description=18 - JavaDoc сниппеты
jdk.19.language.level.description=19 - Нет новых языковых возможностей
jdk.20.language.level.description=20 - Нет новых языковых возможностей
jdk.21.language.level.description=21 - Record паттерны, паттерн-матчинг для switch
jdk.21.preview.language.level.description=21 (Preview) - Строковые шаблоны, безымянные классы и методы instance main и т.д.
jdk.22.language.level.description=22 - Безымянные переменные и patterns
jdk.22.preview.language.level.description=22 (Preview) - Операторы перед super(), строковые шаблоны (второй preview) и др.
jdk.23.language.level.description=23 - Markdown документация
jdk.23.preview.language.level.description=23 (Preview) - Примитивные типы в patterns, неявно объявленные классы и др.
jdk.X.language.level.description=X - Экспериментальные возможности
jdk.unsupported.preview.language.level.description={0} (Preview) - не поддерживается
lambda.body.must.be.a.statement.expression=Тело лямбды должно быть выражением-оператором
list.item.no.module=<нет модуля>
local.class.preposition=локальный
method.context.display={0}() в {1}
missing.return.value.lambda=Отсутствует возвращаемое значение
node.abstract.flag.tooltip=abstract
node.annotation.tooltip=Аннотация
node.anonymous.class.tooltip=Анонимный класс
node.class.tooltip=Класс
node.enum.tooltip=Enum
node.exception.tooltip=Исключение
node.field.tooltip=Поле
node.final.flag.tooltip=Final
node.interface.tooltip=Интерфейс
node.junit.test.tooltip=JUnit тест
node.method.tooltip=Метод
node.record.tooltip=Record
node.runnable.class.tooltip=Runnable класс
node.static.flag.tooltip=static
psi.error.attempt.to.edit.class.file=Невозможно изменить скомпилированный элемент в файле ''{0}''
task.background.title.maven=Maven
type.can.be.converted={0} может быть преобразован в {1}
type.conforms.to.constraint={0} соответствует {1}
unexpected.identifier=Неожиданный идентификатор
unexpected.return.value=Неожиданное возвращаемое значение
unexpected.token=Неожиданный токен
unexpected.tokens=Неожиданные токены