action.ReactClassToFunctionComponentAction.description=Преобразовать в функциональный компонент
action.ReactClassToFunctionComponentAction.text=Преобразовать в функциональный компонент
action.ReactExtractComponentAction.description=Извлечь компонент
action.ReactExtractComponentAction.text=Извлечь компонент…
action.ReactFunctionToClassComponentAction.description=Преобразовать в классовый компонент
action.ReactFunctionToClassComponentAction.text=Преобразовать в классовый компонент
create.react.app.description=<a href\="https\://github.com/facebookincubator/create-react-app">Create React App</a> - это новый официально поддерживаемый способ создания одностраничных React-приложений. Он предлагает современную настройку сборки без конфигурации.
create.react.app.name=React
create.react.app.scripts.version=Версия скриптов  [&V]
create.react.app.typescript.checkbox=Создать проект TypeScript [&T]
javascript.fix.create.class.component.jsx.family=Создать классовый компонент
javascript.fix.create.class.component.jsx.name=Создать классовый компонент ''{0}''
javascript.fix.create.function.component.jsx.family=Создать функциональный компонент
javascript.fix.create.function.component.jsx.name=Создать функциональный компонент ''{0}''
react.class.component.type.class=Класс
react.class.component.type.function=Функция
react.class.to.function.caret.at.class=Курсор должен быть установлен на класс для преобразования
react.filter.display.name=React
react.function.to.class.caret.at.function=Курсор должен быть установлен на функцию для преобразования
react.inspection.unresolved.component.prop=Неразрешённый prop компонента ''{0}''
react.inspection.unresolved.prop.action.name=Создать Prop компонента
react.inspection.unresolved.prop.quick.fix.family.name=Создать prop компонента
react.inspection.unresolved.prop.quick.fix.text=Создать prop компонента ''{0}''
react.inspection.unresolved.prop.validation.message.component.source.not.found=Исходный код компонента не найден
react.inspection.unresolved.prop.validation.message.writable.props.not.found=Не найден объект типа доступных для записи свойств
react.inspection.unresolved.prop.validation.message.writable.source.not.found=Не найден доступный для записи исходный код компонента
react.inspection.unresolved.ref.to.prop.fix.text=Создать prop ''{0}'' в компоненте ''{1}''
react.inspection.unresolved.ref.to.state.fix.family.name=Создать состояние компонента
react.inspection.unresolved.ref.to.state.fix.text=Создать состояние ''{0}'' в компоненте ''{1}''
refactoring.create.react.component.title=Создать компонент
refactoring.extract.react.component.invalid.identifier=Недопустимый идентификатор\: ''{0}''
refactoring.extract.react.component.label.name=Имя\:
refactoring.extract.react.component.label.type=Тип\:
refactoring.extract.react.component.no.expression=Выделенный фрагмент не образует JSX-выражение
refactoring.extract.react.component.no.scope=Не удалось найти область для размещения созданного компонента
refactoring.extract.react.component.title=Извлечь компонент
refactoring.react.class.to.function.conflict.used.with.ref={0} используется с атрибутом ''ref''. Функциональным компонентам без состояния нельзя передавать refs
refactoring.react.class.to.function.dialog.message=Имя компонента\:
refactoring.react.class.to.function.intention.title=Преобразовать в функциональный компонент
refactoring.react.class.to.function.refactoring.title=Преобразовать в функциональный компонент
refactoring.react.could.not.find.in.template=Не удалось выполнить рефакторинг. Не найден элемент с именем {0}. Возможно, шаблон кода {1} недействителен?
refactoring.react.function.to.class.intention.title=Преобразовать в классовый компонент
refactoring.react.function.to.class.refactoring.title=Преобразовать в классовый компонент
refactoring.react.function.to.class.used.in.call.conflict={0} используется в выражении вызова
refactoring.react.function.to.class.used.in.new.conflict={0} используется в выражении ''new''