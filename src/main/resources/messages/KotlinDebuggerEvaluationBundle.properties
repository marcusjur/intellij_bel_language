backing.field=Backing field
error.bad.context=Невозможно вычислить Kotlin-выражение в данном контексте
error.cant.evaluate=Невозможно вычислить выражение
error.cant.find.backing.field=Не удаётся найти backing field ''{0}''
error.cant.find.class=Не удаётся найти класс ''{0}'' в текущем ClassLoader
error.cant.find.variable=Не удаётся найти локальную переменную ''{0}'' типа {1}
error.class.definition=Ошибка при определении классов\: {0}
error.coroutine.context.unavailable='coroutineContext' недоступен
error.creating.class.loader=Ошибка создания загрузчика классов для вычисления\: {0}
error.crossinline.lambda.evaluation=Вычисление 'crossinline' лямбд не поддерживается
error.dumb.mode=Вычисление невозможно во время индексации
error.exception.occurred=Произошло исключение
error.failed.to.wrap.suspend.function=Не удалось обернуть suspend-функцию в kotlinx.coroutines.runBlocking, проверьте наличие пакета kotlinx.coroutines в classpath
error.not.captured=''{0}'' не захвачен
error.nothing.initialization='Nothing' не может быть инстанциирован
error.parameter.evaluation.default.methods=Вычисление параметров не поддерживается для методов '$default'
error.thread.not.suspended=Вычисление доступно только для приостановленных потоков
error.thread.unavailable=Невозможно вычислить фрагмент кода\: поток недоступен
error.variable.was.optimised=Эта переменная недоступна, так как не используется после последней точки приостановки
j2k.expression=Преобразовать Java-выражение в Kotlin в окне "Вычислить выражение"
java.field=Java-поле
surround.with.runtime.type.cast.template=(expr as RuntimeType)
wrap.expression=Обернуть выражение