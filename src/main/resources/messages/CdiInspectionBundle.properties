CdiDecoratorInspection.annotation.not.allowed.for.decorator=Аннотация ''{0}'' не разрешена для класса декоратора
CdiDecoratorInspection.cannot.find.decorates=Декоратор должен иметь делегируемый атрибут с аннотацией @Delegate
CdiDecoratorInspection.class.cannot.be.final=Класс декоратора не может быть final
CdiDecoratorInspection.class.must.be.decorator=Класс bean, не являющийся декоратором, не может иметь точку внедрения с аннотацией @Delegate
CdiDecoratorInspection.decorates.type.must.implements.all.decorator.interfaces=Делегируемый тип декоратора должен реализовывать или расширять каждый декорируемый тип. Не поддерживается\: {0}
CdiDecoratorInspection.delegate.injection.point.expected=Поле с @Delegate должно быть аннотировано @Injected
CdiDecoratorInspection.injection.point.must.be.constructor.or.initializer=Метод с параметром @Delegate должен быть конструктором или методом инициализации (@Injected)
CdiDecoratorInspection.too.many.decorates.in.decorator=Декоратор должен иметь ровно один делегируемый атрибут с аннотацией @Delegate
CdiDisposerMethodInspection.non.abstract.disposer.method=Disposer-метод не может быть abstract
CdiDisposerMethodInspection.too.many.dispose.parameters=Метод не может иметь более одного параметра с аннотацией @Disposes
CdiDomBeansInspection.add.annotation=Добавить @{0}
CdiDomBeansInspection.add.annotation.family=Добавить аннотацию
CdiDomBeansInspection.class.must.be=Здесь ожидается класс {0}
CdiDomBeansInspection.duplicated.alternative.classes=Класс уже определен в <alternatives>
CdiDomBeansInspection.duplicated.stereotype.classes=Стереотип уже определен в <alternatives>
CdiInjectInspection.field.cannot.be.annotated.produces=Внедряемое поле не может быть аннотировано @Produces
CdiInjectInspection.field.should.not.be.initialized=Внедряемое поле не должно быть инициализовано
CdiInjectInspection.injected.method.cannot.be.abstract=Метод с @Inject не может быть abstract
CdiInjectInspection.injected.method.cannot.be.static=Метод с @Inject не может быть static
CdiInjectInspection.injected.with.disposes.parameters=Метод с @Inject не может иметь параметры с аннотацией ''{0}''
CdiInjectInspection.more.than.one.injected.constructor=Управляемый bean должен иметь только один конструктор с аннотацией @Inject
CdiInjectInspection.wrong.injected.method.annotation=Метод с @Inject не может быть аннотирован ''{0}''
CdiInjectionInspection.field.cannot.be.final=Аннотация @Inject не разрешена для final полей
CdiInjectionInspection.field.cannot.be.static=Аннотация @Inject не разрешена для статических полей
CdiInspectionPointsInspection.ambiguous.dependency=Неоднозначная зависимость\: несколько bean соответствуют точке внедрения
CdiInspectionPointsInspection.new.annotation.with.other.qualifiers=@New нельзя комбинировать с другими квалификаторами
CdiInspectionPointsInspection.unsatisfied.dependency=Неудовлетворенная зависимость\: нет bean, соответствующего точке внедрения
CdiInterceptorInspection.no.binding.type=@Interceptor должен указывать как минимум одну привязку перехватчика
CdiManagedBeanInconsistencyInspection.no.appropriate.constructor=Управляемый bean должен иметь конструктор без параметров или конструктор с аннотацией @Inject
CdiManagedBeanInconsistencyInspection.not.concrete.class=Управляемый bean должен быть конкретным классом или @Decorator
CdiManagedBeanInconsistencyInspection.parameterized.class=Управляемый bean не должен быть параметризованным типом
CdiManagedBeanInconsistencyInspection.static.inner.class=Управляемый bean не должен быть нестатическим внутренним классом
CdiManagedBeanInconsistencyInspection.unallowed.ancestor=Управляемый bean не должен наследовать ''{0}''
CdiNormalScopeInspection.public.field.in.normal.scoped.beans=Bean с нестандартной областью видимости не должен иметь public полей
CdiObservesInspection.multiple.observes.parameters.not.allowed=Метод должен иметь только один параметр с @Observes
CdiObservesInspection.observer.method.with.wrong.parameters=Observer-метод не может иметь параметры с аннотацией ''{0}''
CdiObservesInspection.wrong.observe.method.annotation=Observer-метод не может быть аннотирован ''{0}''
CdiScopeInspection.session.stateless.bean.incorrect.scopes=Сессионный stateless bean должен иметь область видимости @Dependent
CdiScopeInspection.singleton.bean.incorrect.scopes=Singleton bean должен быть @ApplicationScoped или @Dependent
CdiSpecializesInspection.specialized.class.has.duplicated.named.anno=Аннотация @Named не может использоваться на специализующем и специализуемом классе
CdiSpecializesInspection.specialized.class.has.multiple.specializes=Несколько классов специализуют один и тот же суперкласс\: {0}
CdiSpecializesInspection.specialized.class.not.defined=Специализующий bean должен расширять другой bean
CdiSpecializesInspection.specializes.method.must.be.non.static=Специализующий метод не может быть static
CdiSpecializesInspection.specializes.method.must.be.producer=Специализующий метод должен быть аннотирован @Produces
CdiSpecializesInspection.specializes.method.must.override.producer.of.superclass=Специализующий метод должен переопределять метод с @Produces в прямом суперклассе
CdiStereotypeInspection.non.empty.named.annotations.not.allowed=Непустая аннотация @Named не разрешена для стереотипов
CdiStereotypeInspection.not.allowed.for.stereotypes=Не разрешено для стереотипов
CdiStereotypeInspection.qualified.annotations.not.allowed=Аннотации-квалификаторы не разрешены для стереотипов
CdiStereotypeRestrictionsInspection.different.scopes.in.stereotypes=Все стереотипы должны указывать одинаковую область видимости ИЛИ область видимости должна быть указана на bean
CdiTypedAnnotationInspection.incorrect.bean.type=Тип bean не соответствует типам аннотации @Typed
CdiTypedAnnotationInspection.non.producer=Должно применяться к producer'ам
CdiUnknownProducersForDisposerMethodInspection.cannot.find.corresponding.producers=Не удаётся найти соответствующие producer'ы
CdiUnproxyableBeanTypesInspection.injected.in.passivating.scoped.bean.must.be.serializable=Невозможно внедрить bean несериализуемого типа в bean с пассивируемой областью видимости
CdiUnproxyableBeanTypesInspection.passivating.scoped.bean.must.be.serializable=Управляемый bean с пассивируемой областью видимости должен реализовывать java.io.Serializable
CdiUnproxyableBeanTypesInspection.unproxyable.type.detected=Внедренный bean с нормальной областью видимости не может быть проксирован
alternative.bean.should.not.be.vetoed=Альтернативный bean не должен быть отклонен
inspection.name.alternative.errors=Отклоненный @Alternative bean
inspection.name.ambiguous.dependencies=Точка внедрения с неоднозначными зависимостями
inspection.name.bean.normal.scope.inconsistency=Bean с нестандартной областью видимости объявляет public поля
inspection.name.bean.scope.inconsistency=Некорректная область видимости bean
inspection.name.beans.configuration.errors=Некорректные определения bean в beans.xml
inspection.name.decorator.errors=Некорректный класс @Decorator
inspection.name.disposer.method.errors=Некорректный disposer-метод
inspection.name.disposer.method.to.produces.errors=Параметр disposer-метода без producer'ов
inspection.name.injected.errors=Некорректное место внедрения зависимости
inspection.name.interceptor.errors=Класс @Interceptor без типов привязки
inspection.name.managed.bean.inconsistency.errors=Некорректное определение управляемого bean
inspection.name.observer.method.errors=Некорректный observer-метод
inspection.name.specialize.errors=Некорректное использование @Specializes
inspection.name.stereotype.errors=Некорректный класс аннотации @Stereotype
inspection.name.stereotype.restriction.errors=Bean имеет конфликт области видимости в стереотипах
inspection.name.typed.annotation=Некорректное использование аннотации @Typed
inspection.name.unproxyable.bean.types.inconsistency.errors=Некорректное использование типа bean, который не может быть проксирован
model.inspection.group.name=CDI (Контексты и внедрение зависимостей)