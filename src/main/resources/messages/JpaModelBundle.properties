AddAttributeItem.attributeAlreadyExist.description=Атрибут {0} уже определен в сущности {1}
AddAttributeItem.attributeAlreadyExist.title=Атрибут {0} уже определен
AddAttributeItem.idAlreadyExist=Первичный ключ уже существует
AddAttributeItem.idAlreadyExistDescr=Атрибут Id уже определен в сущности {0}
AssociationType.JoinColumnMappedBy=Двунаправленный JoinColumn
AssociationType.JoinColumnUnidirectional=Однонаправленный JoinColumn
AssociationType.JoinTableMappedBy=Двунаправленный JoinTable
AssociationType.JoinTableMtM=Однонаправленный JoinTable
AssociationType.MappedByJoinColumn=Двунаправленный mappedBy
AssociationType.MappedByJoinTable=Двунаправленный mappedBy
AssociationType.WithoutJoinColumnOtM=Однонаправленный JoinTable
AttributeDeleteDialog.safeDeleteField=Поиск использований
AttributeOverridesValidator.emptyName.errorMessage=Укажите имя атрибута для генерации переопределений атрибутов.
AttributeOverridesValidator.errorMessage=Имя столбца {0} дублируется в сущности {1}.
AttributePropertiesPanel.TableGeneratorName=Таблица генератора
AttributePropertiesPanel.allocationSize=Размер выделения
AttributePropertiesPanel.asc=ASC
AttributePropertiesPanel.associationType=Тип отображения
AttributePropertiesPanel.associationType.hint.joinColumnMappedByUpdater=@JoinColumn на {0}\#{1} и @{2}(mappedBy\={3}) на {4}\#{5}
AttributePropertiesPanel.associationType.hint.joinColumnUpdater=@JoinColumn на {0}\#{1}
AttributePropertiesPanel.associationType.hint.joinTableMappedByUpdater=@JoinTable на {0}\#{1} и @{2}(mappedBy\={3}) на {4}\#{5}
AttributePropertiesPanel.associationType.hint.joinTableUpdater=@JoinTable на {0}\#{1}
AttributePropertiesPanel.associationType.hint.mappedByJoinColumnUpdater=@{2}(mappedBy\={3}) на {0}\#{1} и @JoinColumn на {4}\#{3}
AttributePropertiesPanel.associationType.hint.mappedByJoinTableUpdater=@{2}(mappedBy\={3}) на {0}\#{1} и @JoinTable на {4}\#{3}
AttributePropertiesPanel.associationType.hint.oneToManyWithoutJoinColumnUpdater=@JoinTable на {0}\#{1}
AttributePropertiesPanel.attributeExists=Существует унаследованный атрибут с именем "{0}"
AttributePropertiesPanel.attributeOverrides=Переопределения атрибутов
AttributePropertiesPanel.cardinality=Кардинальность
AttributePropertiesPanel.cardinality.empty=Выберите кардинальность
AttributePropertiesPanel.cardinality.manyToMany=Многие ко многим
AttributePropertiesPanel.cardinality.manyToMany.hint=Несколько объектов ''{0}'' связаны с несколькими объектами {1}
AttributePropertiesPanel.cardinality.manyToOne=Многие к одному
AttributePropertiesPanel.cardinality.manyToOne.mandatoryHint=Несколько объектов ''{0}'' связаны с одним объектом {1}
AttributePropertiesPanel.cardinality.manyToOne.nonMandatoryHint=Несколько объектов ''{0}'' связаны с нулем или одним объектом {1}
AttributePropertiesPanel.cardinality.oneToMany=Один ко многим
AttributePropertiesPanel.cardinality.oneToMany.hint=Один объект ''{0}'' связан с несколькими объектами {1}
AttributePropertiesPanel.cardinality.oneToOne=Один к одному
AttributePropertiesPanel.cardinality.oneToOne.mandatoryHint=Один объект ''{0}'' связан с одним объектом {1}
AttributePropertiesPanel.cardinality.oneToOne.nonMandatoryHint=Один объект ''{0}'' связан с нулем или одним объектом {1}
AttributePropertiesPanel.cardinality.singleValue=Единичное значение
AttributePropertiesPanel.cascade=Тип каскадирования
AttributePropertiesPanel.collection=Коллекция
AttributePropertiesPanel.collectionTable=Таблица коллекции
AttributePropertiesPanel.collectionTableJoinColumn=Столбец связи
AttributePropertiesPanel.collectionType=Тип коллекции
AttributePropertiesPanel.column=Столбец
AttributePropertiesPanel.columnDefinition=Определение столбца
AttributePropertiesPanel.conversionType=Преобразование регистра
AttributePropertiesPanel.converter=Конвертер
AttributePropertiesPanel.createField=Создать поле
AttributePropertiesPanel.createMappedAttribute=Создать отображаемый атрибут
AttributePropertiesPanel.currencyValue=Валюта
AttributePropertiesPanel.ddl=DDL столбца
AttributePropertiesPanel.decimalSep=Десятичный разд.
AttributePropertiesPanel.dependsOnProperties=Связанные атрибуты
AttributePropertiesPanel.desc=DESC
AttributePropertiesPanel.disableUniqueField=Невозможно создать уникальные ограничения, так как сущность помечена для мягкого удаления, но в таблице сущности отсутствует столбец 'delete_ts'
AttributePropertiesPanel.elementCollection=Коллекция элементов
AttributePropertiesPanel.enterAttributeName=Введите имя атрибута
AttributePropertiesPanel.enumType=Тип перечисления
AttributePropertiesPanel.errorIntPositive={0} должно быть > 0
AttributePropertiesPanel.errorPrecision=Создать свойство
AttributePropertiesPanel.errorPrecisionBiggerScale=Точность должна быть больше или равна масштабу
AttributePropertiesPanel.errorScaleZero=Масштаб должен быть >\= 0
AttributePropertiesPanel.fetchMode=Режим выборки
AttributePropertiesPanel.fetchType=Тип выборки
AttributePropertiesPanel.fkConstraintAction=Действие FK-ограничения
AttributePropertiesPanel.generateAttributeOverrides=Сгенерировать переопределения атрибутов
AttributePropertiesPanel.generateEqualsAndHashCode=Сгенерировать Equals и HashCode
AttributePropertiesPanel.generatedStrategy=Генерация ID
AttributePropertiesPanel.generatorName=Имя генератора
AttributePropertiesPanel.goTo=Перейти к
AttributePropertiesPanel.groupSep=Групповой разд.
AttributePropertiesPanel.id=Id
AttributePropertiesPanel.idAttribute=Id атрибут
AttributePropertiesPanel.indexColumns=Столбцы
AttributePropertiesPanel.indexName=Имя
AttributePropertiesPanel.indexUnique=Уникальный
AttributePropertiesPanel.initialValue=Начальное значение
AttributePropertiesPanel.insertable=Вставляемый
AttributePropertiesPanel.inverseAttribute.msg=Подходящий обратный атрибут не найден. Хотите создать его?
AttributePropertiesPanel.inverseAttribute.title=Обратный атрибут
AttributePropertiesPanel.inverseAttributeCreated=Обратный атрибут создан, связанная сущность сохранена
AttributePropertiesPanel.inverseJoinColumnLengthError=Имя <b>обратного столбца связи</b> для {0} должно быть не длиннее {1} символов
AttributePropertiesPanel.inverseJoinColumnName=Обратный столбец связи
AttributePropertiesPanel.inverseJoinColumnReferencedColumnName=Обратный ссылочный столбец
AttributePropertiesPanel.jdbcTypeCode=Код типа JDBC
AttributePropertiesPanel.joinColumnLengthError=Имя <b>столбца связи</b> для {0} должно быть не длиннее {1} символов
AttributePropertiesPanel.joinColumnName=Столбец связи
AttributePropertiesPanel.joinColumnReferencedColumnName=Ссылочный столбец
AttributePropertiesPanel.joinTable=Таблица связи
AttributePropertiesPanel.joinTableLengthError=Имя <b>таблицы связи</b> для {0} должно быть не длиннее {1} символов
AttributePropertiesPanel.joinTableName=Таблица связи
AttributePropertiesPanel.length=Длина
AttributePropertiesPanel.lengthFieldUnlimited=Без ограничений
AttributePropertiesPanel.lob=Большой объект
AttributePropertiesPanel.lookupActions=Действия поиска
AttributePropertiesPanel.lookupType=Тип поиска
AttributePropertiesPanel.mandatory=Обязательный
AttributePropertiesPanel.mappedBy=Отображается через
AttributePropertiesPanel.mappingType=Тип атрибута
AttributePropertiesPanel.mutable=Изменяемый
AttributePropertiesPanel.name=Имя
AttributePropertiesPanel.newType=Тип
AttributePropertiesPanel.numberFormat=Формат числа
AttributePropertiesPanel.numberFormatExample=Например\: \#,\#\#\#,\#\#\#,\#\#\#.\#\#
AttributePropertiesPanel.numberFormatIsRequired=Поле 'Формат числа' обязательно для атрибута ''{0}''
AttributePropertiesPanel.numberFormatStyle=Стиль формата числа
AttributePropertiesPanel.onDelete=При удалении
AttributePropertiesPanel.onDelete.cascade.hint=При удалении объекта ''{0}'', автоматически удалять связанные {1}объект(ы)
AttributePropertiesPanel.onDelete.cascade.hintInverse=Автоматически удалять объект(ы) ''{0}'' при удалении связанного {1}объекта
AttributePropertiesPanel.onDelete.default.hint=При удалении объекта ''{0}'', связанные {1}объект(ы) остаются без изменений
AttributePropertiesPanel.onDelete.default.hintInverse=Оставить объект(ы) ''{0}'' без изменений при удалении связанного {1}объекта
AttributePropertiesPanel.onDelete.deny.hint=Запретить удаление объекта ''{0}'', если он связан с {1}объектом(ами)
AttributePropertiesPanel.onDelete.deny.hintInverse=Запретить удаление {1}объекта(ов), связанных с объектом(ами) ''{0}''
AttributePropertiesPanel.onDelete.unlink.hint=При удалении объекта ''{0}'', очищать связь из {1}объекта(ов)
AttributePropertiesPanel.onDelete.unlink.hintInverse=Очищать связь из объекта(ов) ''{0}'' при удалении связанного {1}объекта
AttributePropertiesPanel.onDeleteInverse=При обратном удалении
AttributePropertiesPanel.orderBy=Сортировка по
AttributePropertiesPanel.orderByExample=Пример\: order.date DESC, name, age DESC
AttributePropertiesPanel.orphanRemoval=Удаление сирот
AttributePropertiesPanel.owner=Владеющая сторона
AttributePropertiesPanel.persistAttrCreated=ID-атрибут связанной сущности создан
AttributePropertiesPanel.persistRelatedId.msg=Вы создали ссылку на сущность из другого хранилища данных.\nХотите создать персистентный атрибут для хранения ID связанной сущности?
AttributePropertiesPanel.persistRelatedId.title=ID-атрибут связанной сущности
AttributePropertiesPanel.precision=Точность
AttributePropertiesPanel.readOnly=Только для чтения
AttributePropertiesPanel.renameAttribute=Переименовать атрибут
AttributePropertiesPanel.scale=Масштаб
AttributePropertiesPanel.sequenceGeneratorName=Имя последовательности
AttributePropertiesPanel.sequenceOrTableGeneratorName=Имя последовательности
AttributePropertiesPanel.sequenceType=Тип генерации
AttributePropertiesPanel.smartRefactoring=Умный рефакторинг
AttributePropertiesPanel.sort=Сортировка
AttributePropertiesPanel.targetEntity=Целевая сущность
AttributePropertiesPanel.temporalType=Temporal
AttributePropertiesPanel.timeZoneColumn=Тип столбца часового пояса
AttributePropertiesPanel.timeZoneStorageType=Хранение часового пояса
AttributePropertiesPanel.transient=Transient
AttributePropertiesPanel.transientCardinality=Кардинальность
AttributePropertiesPanel.transientWarning=Атрибут будет преобразован в transient, все несовместимые аннотации будут удалены.
AttributePropertiesPanel.type=Тип
AttributePropertiesPanel.unique=Уникальный
AttributePropertiesPanel.updatable=Обновляемый
AttributePropertiesPanel.version=Версия
AttributePropertiesPanel.warning.caption=Предупреждение
AttributePropertiesPanel.warningMappedBy=Ни один из атрибутов ассоциации "MANY_TO_MANY" не является владеющей стороной. Атрибут {0}
AttributePropertiesPanel.warningOwningSide=Ни один из атрибутов ассоциации не является владеющей стороной.\nХотите сделать противоположную сторону владельцем?
AttributePropertiesPanel.warningRemovePropertyFromView=Если вы сохраните сущность после изменения типа атрибута, атрибут будет удален из следующих представлений\:
BasicRepositoryAttribute.Nullability.NonNull=NonNull
BasicRepositoryAttribute.Nullability.NotSet=-
BasicRepositoryAttribute.Nullability.Nullable=Nullable
CollectionDatatype.Collection=Collection
CollectionDatatype.LinkedHashSet=LinkedHashSet
CollectionDatatype.Map=Map
CollectionDatatype.Set=Set
CreateAttributeWindow.addColumnToExistConstraintOrIndex=Добавить столбец "{0}" в существующий индекс/ограничение
CreateAttributeWindow.chooseExistingIndex=Выбрать существующий индекс/ограничение
CreateAttributeWindow.createConstraintByAttribute=Создать ограничение по атрибуту "{0}"
CreateAttributeWindow.createIndexByAttribute=Создать индекс по атрибуту "{0}"
CreateAttributeWindow.createIndexOrConstraintByAttribute=Индекс/ограничение по атрибуту "{0}"
CreateAttributeWindow.createInverseAttribute=Создать обратный атрибут
CreateAttributeWindow.createInverseAttributeWithParams=Создать обратный атрибут {0}
CreateAttributeWindow.createPersistRelatedIdAttribute=Создать персистентный связанный ID-атрибут
CreateAttributeWindow.indexesAndConstraints=Индексы и ограничения
CustomTypeEditorDialog.parametrized=Параметризованный
DataSourceEditor.caption=Подключение к БД
DataSourceEditor.database.properties=Свойства базы данных
DataStoreEditor.name=Имя подключения к БД\:
DataStoreEditor.nameEmpty=Пожалуйста, введите имя подключения к БД
Datastore.notification.provideCredentials=Пожалуйста, укажите учетные данные базы данных
EntityCreator.write.command.create=Создать
EntityPropertiesPanel.EmbeddedField=Встроенный класс
EntityPropertiesPanel.IdField=Id
EntityPropertiesPanel.SequenceField=Тип генерации
EntityPropertiesPanel.addPersistenceUnit=Добавить в Persistence
EntityPropertiesPanel.catalog=Каталог
EntityPropertiesPanel.changePackage=Изменить пакет
EntityPropertiesPanel.className=Имя
EntityPropertiesPanel.createAttributeCaption=Новый атрибут
EntityPropertiesPanel.createAttributeWithParametersCaption=Новый атрибут {0}
EntityPropertiesPanel.discriminator=Значение дискриминатора
EntityPropertiesPanel.discriminatorColumnName=Столбец дискриминатора
EntityPropertiesPanel.discriminatorLength=Длина дискриминатора
EntityPropertiesPanel.discriminatorType=Тип дискриминатора
EntityPropertiesPanel.entityType=Тип сущности
EntityPropertiesPanel.inheritanceType=Наследование
EntityPropertiesPanel.learnMore=Подробнее…
EntityPropertiesPanel.name=Имя сущности
EntityPropertiesPanel.optimizations=Предлагаемые оптимизации
EntityPropertiesPanel.optimizations.fix.generateEqualsAndHashCodeFix=Сгенерировать equals() и hashCode()
EntityPropertiesPanel.optimizations.fix.makeAttributeNotOwnerFix=Использовать mappedBy с OneToMany на другой стороне
EntityPropertiesPanel.optimizations.fix.setWithoutEqualsAndHashCodeInfo=Тип коллекции - 'Set\\&lt;{0}\\&gt;', но сущность '{0}' не реализует методы equals()/hashCode().\nSet использует эти методы в своей работе, и реализации по умолчанию могут вызвать проблемы при сравнении сущностей.\nНапример, две сущности с одинаковым id, полученные через разные сессии Hibernate, не будут равны.
EntityPropertiesPanel.optimizations.fix.useJoinColumnTypeFix=Добавить аннотацию @JoinColumn
EntityPropertiesPanel.optimizations.fix.useSetCollectionTypeFix=Использовать Set<> вместо
EntityPropertiesPanel.package=Пакет
EntityPropertiesPanel.packageName=Пакет
EntityPropertiesPanel.packageSelector.title=Выбрать пакет сущности
EntityPropertiesPanel.parent=Родитель
EntityPropertiesPanel.performance.manyToManyCollectionInfo=Когда Collection используется для маппинга ассоциации ManyToMany, Hibernate не может эффективно удалять такую ассоциацию из таблицы связей.\nВместо этого он удаляет все записи, связанные с владеющей сущностью, и заново вставляет оставшиеся. Изменение типа коллекции на Set уменьшает количество запросов, необходимых для удаления.
EntityPropertiesPanel.performance.manyToManyListInfo=Когда List используется для маппинга ассоциации ManyToMany, Hibernate не может эффективно удалять такую ассоциацию из таблицы соединения.
EntityPropertiesPanel.performance.oneToManyJoinColumnInfo=Однонаправленный OneToMany с @JoinColumn может вызывать дополнительные запросы.\nПоскольку столбец соединения отсутствует в referenced JPA-сущности и присутствует только в БД, Hibernate обновляет его в отдельном запросе.\nПреобразование ассоциации в двунаправленную решает эту проблему.
EntityPropertiesPanel.performance.oneToManyJoinTableListInfo=Однонаправленный OneToMany с @JoinTable создает новую таблицу, которая требует дополнительных insert/delete запросов и занимает место.\nТа же ассоциация может быть выражена с помощью одного @JoinColumn.
EntityPropertiesPanel.performanceWarning=Это объявление маппинга неэффективно и может вызвать проблемы с производительностью.
EntityPropertiesPanel.persistenceUnit=Persistence unit
EntityPropertiesPanel.primaryKeyJoinColumnDefinition=Определение PK столбца соединения
EntityPropertiesPanel.primaryKeyJoinColumnName=PK столбец соединения
EntityPropertiesPanel.referenceType=Тип ссылки
EntityPropertiesPanel.renameClass=Переименовать имя класса
EntityPropertiesPanel.schema=Схема
EntityPropertiesPanel.table=Таблица
EntityPropertyPathReference.inspection.unresolvedMessagePattern=Путь свойства "{0}" недействителен для класса сущности "{1}"
EntitySettingsWindow.jpb.title=Новая сущность
EntityType.EMBEDDABLE=Встраиваемый
EntityType.MAPPED_SUPERCLASS=Mapped Superclass
EntityType.PERSISTENT=Сущность
ExistingAttributeNameValidator.errorMessage=Атрибут с таким именем уже существует
ExistingColumnNameValidator.attributeNameEqualsDiscriminatorColumn=Атрибут с именем столбца {0} совпадает с именем столбца-дискриминатора для класса {1}
ExistingColumnNameValidator.discriminatorNameNotUnique=Имя столбца-дискриминатора ''{0}'' не уникально для сущности ''{1}''
ExistingColumnNameValidator.errorMessageEmbedded=Для сущности {1} существует встроенный атрибут с именем столбца {0}
ExistingColumnNameValidator.errorMessageInherited=Существует унаследованный атрибут с именем столбца {0}
ExistingColumnNameValidator.errorMessageNamed=Атрибут с именем столбца {0} уже существует
ExistingSequenceNameValidator.errorMessage=Последовательность с таким именем уже существует
HibernateCustomTypeDialog.title=Создать пользовательский тип
HibernateCustomTypeDialog.type=Тип
IndexesEditor.availableColumns.title=Доступные столбцы
IndexesEditor.selectedColumns.title=Выбранные столбцы
IndexesEditor.validation.makeManyToOneFix=Создать ассоциацию {0} Many to One
IndexesEditor.validation.makeOneToOneFix=Создать ассоциацию {0} One to One
JpaConverterEditorDialog.autoApply=Автоприменение
JpaConverterEditorDialog.dbType=Тип столбца базы данных
JpaConverterEditorDialog.entityType=Тип атрибута сущности
JpaPalette.createdDate=Дата создания
JpaPalette.equalsAndHashCode=equals и hashCode
JpaPalette.toString=ToString
LombokPropertiesPanel.getter=Getter
LombokPropertiesPanel.isLombokAllArgsConstructor=AllArgsConstructor
LombokPropertiesPanel.isLombokBuilder=Builder
LombokPropertiesPanel.isLombokNoArgsConstructor=NoArgsConstructor
LombokPropertiesPanel.isLombokSuperBuilder=SuperBuilder
LombokPropertiesPanel.onlyExplicitlyIncluded=Только явно включенные
LombokPropertiesPanel.setter=Setter
LombokPropertiesPanel.toString=ToString
LombokPropertiesPanel.toStringInclude=Включено в ToString
OrmStructurePanel.attributes=Атрибуты
OrmStructurePanel.persistenceUnits=Persistence units
OrmStructurePanel.referencedBy=Ссылки
OrmToolwindow.title=Persistence
PersistenceUnitEditor.create.title=Создать Persistence Unit
PersistenceUnitEditor.edit.title=Редактировать Persistence Unit
PersistenceUnitEditor.package.chooser.title=Выберите пакет Persistence Unit
PersistenceUnitEditor.select.entity=Выбрать сущность
PersistenceUnitEditor.validation.indexing=Невозможно завершить, пока выполняется индексация
PersistenceUnitEditor.validation.name.empty=Имя не должно быть пустым
PersistenceUnitEditor.validation.name.unique=Имя должно быть уникальным
PersistenceUnitValidationDialog.proceed=Продолжить
PersistenceUnitValidationDialog.title=Пустой Persistence Unit
PrimitiveTypeValidator.errorMessage=Тип не должен быть примитивным
ProjectPropertiesPage.connection=Тест соединения
ProjectPropertiesPage.connectionSuccessful=Успешно подключено к ''{0}''
ProjectPropertiesPage.connectionTestCaption=Тест
ProjectPropertiesPage.dbConnectionParams=Параметры соединения
ProjectPropertiesPage.dbPassword=Пароль
ProjectPropertiesPage.dbPassword.showCheckBox=Показать пароль
ProjectPropertiesPage.dbType=Тип базы данных
ProjectPropertiesPage.dbUrl=URL базы данных
ProjectPropertiesPage.dbUser=Пользователь базы данных
ProjectPropertiesPage.emptyUrl=Невозможно подключиться, используя пустой URL
ProjectPropertiesPage.incorrectDbHost=Недопустимое значение хоста базы данных\: ''{0}''.\nХост должен быть только в формате localhost[\:port].
ProjectPropertiesPage.integratedSecurity=Интегрированная безопасность
ProjectPropertiesPage.integratedSecurityInstruction=<html>Чтобы MSSQL Integrated Security заработал\:<ol><li>Скачайте <a href\="{0}">архив библиотеки Windows-аутентификации</a></li><li>Распакуйте скачанный jar файл в директорию "{1}"</li><li>Перезапустите ИСРA</li></ol>
ProjectPropertiesPage.testConnection.title=Устанавливается соединение
ProjectPropertiesPage.validation.empty=Пустое значение
RelatedAttributeRemover.attributeDeleted=Атрибут {0}.{1} был удален
RelatedAttributeRemover.dialogMessage=<html>Сущность <b>{0}</b> содержит связанный атрибут <b>{1}</b>. Удалить его?</html>
RelatedAttributeRemover.dialogTitle=Удаление связанного атрибута
RepositoryAttribute.OperatorType.And=And
RepositoryAttribute.OperatorType.NotSet=-
RepositoryAttribute.OperatorType.Or=Or
RepositoryConditionType.EQUALS=Equals
RepositoryConditionType.ING_POSTFIX=-ing
RepositoryConditionType.IS=Is
RepositoryConditionType.IS_ING=Is + -ing
RepositoryConditionType.NONE=Нет
RepositoryConditionType.SIMPLE=Простой
SerializableType.NoSerializable=Не Serializable
SerializableType.Serializable=Serializable
SerializableType.SerializableWithVersionUID=Serializable с версией UID
SubDtoType.EXIST_CLASS=Существующий класс
SubDtoType.FLAT=Плоский
SubDtoType.NEW_CLASS=Новый класс
SubDtoType.NEW_NESTED_CLASS=Новый вложенный класс
Validation.blankOrEmptyClassName=Имя класса пустое
Validation.converterExists={0} с таким именем уже существует в указанном пакете
Validation.dtoExists=DTO класс с таким именем уже существует в указанном пакете
Validation.embeddedRequired=Встраиваемый класс поля обязателен
Validation.entityExists=Сущность с таким именем уже существует в указанном пакете
Validation.hibernateEventListener=Hibernate Event Listener с таким именем уже существует в указанном пакете
Validation.indexColumns={0} должен включать хотя бы один столбец
Validation.indexExists={0} с таким именем уже существует
Validation.invalidRepoEntityType=Репозиторий для встроенной сущности не поддерживается
Validation.language.null=Язык не указан
Validation.mapperExists=Маппер с таким именем уже существует в указанном пакете
Validation.notQualifiedName=Недопустимое полное имя Java
Validation.notValidClassName=Недопустимое имя класса
Validation.notValidType=Недопустимый тип
Validation.package.empty=Имя пакета не может быть пустым
Validation.package.invalid=Имя пакета должно содержать только цифры, буквы или подчеркивания и не должно заканчиваться точкой
Validation.projectionExists=Проекция с таким именем уже существует в указанном пакете
Validation.repositoryExists=Репозиторий с таким именем уже существует в указанном пакете
Validation.repositoryExists.name=Репозиторий с именем "{0}" уже существует в указанном пакете
Validation.reservedName=Это зарезервированное имя JPA-аннотации
Validation.select.repository=Выберите хотя бы один репозиторий
ViewPropertiesPanel.collapseAll=Свернуть все
ViewPropertiesPanel.expandAll=Развернуть все
ViewPropertiesPanel.openInView=Выбрать в окне Persistence
ViewPropertiesPanel.selectAll=Выбрать все
ViewPropertiesPanel.selectBasicAttributes=Выбрать все базовые атрибуты
ViewPropertiesPanel.showLibrariesClasses=Показать классы из библиотек
ViewPropertiesPanel.unselectAll=Отменить выбор
action.browse.text=Обзор
action.ddl.sql.ddl=DDL
action.editor.and.preview.text=Редактор и предпросмотр
action.editor.text=Редактор
action.preview.text=Предпросмотр
action.select.action.text=Выбрать действие
action.text.open.settings=Открыть настройки
actions=Действия
add=Добавить
add.attributes.dto=Добавить атрибуты в DTO
add.entity.attribute=Добавить атрибут сущности
add.index=Добавить индекс
add.lifecycle.callback.method=Добавить метод обратного вызова жизненного цикла
add.listener=Добавить слушатель
add.log=Добавить логгер
add.named.query=Добавить именованный запрос
add.order.by.attribute=Добавить сортировку по атрибуту ({0})
add.query.condition=Добавить условие запроса ({0})
add.spring.repos.derived.method=Добавить производный метод Spring репозитория
add.spring.repos.query.method=Добавить метод запроса Spring репозитория
add.update.value.assignment=Добавить присваивание значения для обновления ({0})
addAllArgs.fix=Добавить аннотацию @AllArgsConstructor
addAllArgsAndNoArgs.fix=Добавить аннотации @NoArgsConstructor и @AllArgsConstructor
addConstructor.family=Добавить конструктор
addJpaConverterAnnotation.fix=Добавить аннотацию @Converter
addModifyingAnnotation.fix=Добавить аннотацию @Modifying
addModifyingAnnotation.fix.command=Добавить аннотацию @Modifying
addNoArgs.fix=Добавить аннотацию @NoArgsConstructor
addSimpleAllArgsConstructor.fix=Добавить конструктор со всеми аргументами {0} в {1}
addSimpleConstructors.fix=Добавить конструкторы с аргументами и без аргументов в {0}
additional.db.drivers=Дополнительные драйверы БД
additional.part.of.method.name=Инфикс метода
advanced=Дополнительно
all.args.constructor=Конструктор со всеми аргументами
all.args.constructor.and.mutable.unselect=DTO должен иметь конструктор со всеми аргументами или быть изменяемым, иначе невозможно установить его свойства
all.ignore.case=Игнорировать регистр для всех
artifact.drivers.files.unload=Не удалось загрузить информацию о драйвере. Проверьте подключение к интернету.
assignJpaConverter.fix=Назначить JPA конвертер / Hibernate тип
async=Асинхронно
attribute=Атрибут
attribute.comment.text=/*\nTODO [Reverse Engineering] создать поле для маппинга колонки ''{0}''\n Доступные действия\:
attribute.name=Имя атрибута
attribute.type=Тип атрибута
attributes.mapped.super.class=Извлечь атрибуты
audit.fields=Поля аудита
audit.type.validation=Указан некорректный тип аудитора
audited=Аудируемый
auditing.entity.listener.not.found=<html>AuditingEntityListener не обнаружен в вашем классе сущности. Если этот или подобный слушатель не указан, поля аудита не будут заполнены. <a href\='\#ADD_IT'>Добавить AuditingEntityListener</a> или <a href\='\#HИСР_IT'>игнорировать это предупреждение</a> в случае использования пользовательского слушателя аудита.</html>
auditor.aware.inheritor.not.found.info=Реализации для AuditorAware{0} не обнаружены. Вы можете вручную указать любой тип аудитора и создать соответствующую реализацию AuditAware позже.
auditor.type=Тип аудитора
blaze.persistence.entity.view=Blaze Persistence представление сущности
calculation.of.structure.section=Длительность вычисления для секции дерева {0} составляет {1} сек
cancel=Отмена
cancel.selection=Отменить выбор
cancel.selection.description=Выбор таблиц будет очищен.<br>Хотите продолжить?
caption=Заголовок
cardinality=Кардинальность
cascade.remove.warning=CascadeType.REMOVE может удалить больше данных, чем ожидается
cast.event.entity=Применить к сущности(ям)
choose.attribute=Выбрать атрибут
choose.class=Выбрать класс
choose.hibernate.entity=Выбрать сущность
choose.hibernate.event.listener=Выбрать Hibernate событие {0}
choose.table.or.view=Выбрать таблицу или представление
class=Класс
class.name=Имя класса
class.name.validation.error=Класс с таким именем уже существует в указанном пакете
column.definition.not.found=Определение колонки не найдено
column.name.name=Имя
column.name.value=Значение
columnWidth=Ширина полей
command.name.create.entity=Создать сущность
command.name.create.enum=Создать перечисление
command.name.update.entity.attribute=Обновить атрибут сущности\: {0}
comment.saving.strategy.annotation=Аннотация @Comment
comment.saving.strategy.ignore=Игнорировать
comment.saving.strategy.javaDoc=Java Doc
connecting.to.dataSource=Подключение к ''{0}''
continue=Продолжить
could.not.parse.repository.method.name=Не удалось разобрать имя метода репозитория. \nПожалуйста, проверьте, что "{0}" использует соглашения об именовании методов Spring Data.
creatable=Создаваемый
create.blaze.persistence.entity.view=Создать представление сущности Blaze Persistence
create.count.method=Создать метод Count
create.delete.method=Создать метод Delete
create.dto=Создать DTO
create.dto.action.text=Создать DTO…
create.dto.or.projection.class=Создать класс DTO или проекции
create.entities.and.attributes=Создать сущности и атрибуты…
create.entity.attributes=Создать атрибуты сущности
create.entity.indicator=Создать сущность "{0}"
create.entity.models=Создать модели сущностей
create.exists.method=Создать метод Exists
create.find.collection.method=Создать метод Find Collection
create.find.instance.method=Создать метод Find Instance
create.new.dto.class=Создать новый класс DTO
create.new.mapped.superclass=Новый MappedSuperclass
create.new.projection.class=Создать новый класс проекции
create.projection=Создать проекцию Spring Data
create.query.count.method=Создать метод @Query Count
create.query.delete.method=Создать метод @Query Delete
create.query.exists.method=Создать метод @Query Exists
create.query.find.collection.method=Создать метод @Query Find Collection
create.query.find.instance.method=Создать метод @Query Find Instance
create.query.repository.method=Создать метод репозитория Query ''{0}''
create.query.update.method=Создать метод @Query Update
create.revision.entity=Создать сущность ревизии
create.revision.listener=Создать слушатель ревизии
create.spring.data.repository=Создать репозиторий Spring Data
create.spring.data.repository.method=Создать метод репозитория Spring Data
createDbConnection=Создать подключение к БД
createJpaConverter.fix=Создать пользовательский тип
createPageableParameter.fix=Добавить параметр Pageable в сигнатуру метода
created.by=Создано
created.date=Дата создания
criteria.api.specification=Спецификация Criteria API
data.source=Источник данных
database=База данных
database.driver.not.selected=Драйвер базы данных не выбран
database.drivers=Драйверы баз данных
date.type=Тип даты
date.type.validation=Указан некорректный тип даты
db.connection=Подключение к БД
db.connection.delete=Удалить
db.connection.save=Сохранить
db.connection.updated=Подключение к БД "{0}" успешно обновлено.
db.connection.was.deleted=Подключение к БД "{0}" удалено
db.driver.column.name.path=Путь
db.driver.download.version=Скачать {0}
db.driver.switchToVersion=Переключить на {0}
db.driver.title.downloading=Загрузка {0}
db.driver.version=Версия драйвера
db.driver.version.not.set=Не задано\!
db.generated.id.description=<ul><li><b>NONE</b> - ни база данных, ни ORM не предоставляют значение ID. Id должен быть явно присвоен в исходном коде.</li><li><b>ИСРNTITY</b> - ID управляется базой данных. Работает для автоинкрементных типов и при использовании `nextval("sequence_name")` или любой другой функции как значения по умолчанию для столбца ID.</li><li><b>SEQUENCE</b> - ID управляется ORM. Стратегия требует наличия последовательности на стороне базы данных. Оптимизовано для массовой вставки.</li></ul>
db.generated.id.description.uuid=<ul><li><b>NONE</b> - ни база данных, ни ORM не предоставляют значение ID. Id должен быть явно присвоен в исходном коде.</li><li><b>UUID</b> - ID управляется клиентом. Значение может быть присвоено с помощью генератора Hibernate, инициализации поля или пользовательских фабрик. Это единственный вариант для распределенных систем с несколькими экземплярами приложений и баз данных, развернутых по всему миру.</li></ul>
db.generated.id.jpa.entity=ID, генерируемые БД в сущностях JPA
db.snapshot.help.description=Если схема БД не меняется во время обратного проектирования, рекомендуем включить кэширование схемы БД. В противном случае схема БД будет загружаться из БД при каждом использовании обратного проектирования. При включении кэширования для выбранной БД будет создан файл снимка во временной директории - <code>{0}</code>
db.view.without.id.columns=Не выбраны столбцы для использования в качестве первичного ключа
db.views.without.id.columns.msg=Не выбраны столбцы для использования в качестве первичного ключа для следующих связей.<br><ul>{0}</ul>Все сущности JPA должны иметь id. Хотите создать сущность без id?
ddl.by.entities=DDL по сущностям…
ddl.type=Тип DDL
declare.new=Объявить новый
default.db.connection=Подключение к БД по умолчанию
default.method.name.will.be.generated=Будет сгенерировано имя метода по умолчанию
define.entity.graph=Определить граф сущности
defined.target.java.type=Определить целевой Java-тип
delete.db.connection=Удалить подключение к БД "{0}"?
dialog.message.attribute.name.reserved.keyword=Имя атрибута является зарезервированным ключевым словом
dialog.message.duplicates.are.found.for.items=Найдены дубликаты для элементов\: {0}
dialog.message.entity.attribute.should.have.name.written.in.camelcase.naming.convention=Атрибут сущности должен иметь имя в стиле camelCase
dialog.message.field.required=Поле {0} обязательно
dialog.message.must.not.be.empty={0} не может быть пустым
dialog.message.parameters.with.blank.names.are.not.allowed=Параметры с пустыми именами не допускаются
dialog.message.there.inherited.attribute.with.such.name=Существует унаследованный атрибут с таким именем
dialog.title.choose.class=Выбрать класс
dialog.title.downloading.driver.files=Загрузка файлов драйвера
dialog.title.params=Параметры
dialog.title.select.item=Выбрать элемент
diff.scope.all.places=Все места
diff.scope.count=\ {0} из {1}
diff.scope.project=Проект
diff.scope.project.and.libraries=Проект и библиотеки
diff.scope.project.and.tests=Проект и тесты
diff.scope.selected.entities=Выбранные сущности
diff.scope.test=Только тесты
director.of.class.not.found=Директория класса "{0}" не найдена
directory=Директория
distinct=Distinct
domain.entity=Доменная сущность
down=Вниз
download.driver.files=Скачать файлы драйвера
download.missing.driver.files=<a href\="{0}">Скачать</a> недостающие файлы драйвера
downloading.driver.files=Загрузка файлов драйвера
driver.0.not.found=Драйвер {0} не найден\!
driver.class=Класс драйвера
driver.files.not.found=Файлы драйвера не найдены
driver.files.were.not.loaded=Файлы драйвера не были загружены
dto=DTO
dto.and.spring.data.projections=DTO и проекции Spring Data
dto.class=Класс DTO
dto.class.already.exists=<html>Такой класс уже существует.<br>Выберите тип "Существующий класс" или укажите уникальное имя для класса.
dto.class.name=Имя класса DTO
dto.class.not.exists=Выбранный класс не существует
dto.type=Тип DTO
duplicate.attribute.name=Повторяющееся имя атрибута "{0}"
duplicate.db.connection.name=Имя подключения к БД "{0}" должно быть уникальным в проекте
duplicate.query.mapping=Повторяющееся имя маппинга запроса "{0}". Сущность - "{1}"
dynamic.projection=Динамическая проекция
edit=Редактировать
elementCreationDialog.scaffoldingLanguage=Язык\:
empty.db.connection=Подключение к БД не должно быть пустым
empty.generation.type.value=Тип генерации не должен быть пустым
enable.jpa.auditing.info=<html>Аннотация @EnableJpaAuditing не обнаружена. Невозможно настроить Spring Audit. Убедитесь, что Spring Audit правильно настроен в вашем приложении. <a href\='https\://docs.spring.io/spring-data/jpa/docs/current/reference/html/\#jpa.auditing.configuration'>Подробнее о настройке здесь…</a></html>
enable.mongo.auditing.info=<html>Аннотация @EnableMongoAuditing не обнаружена. Невозможно настроить Spring Audit. Убедитесь, что Spring Audit правильно настроен в вашем приложении. <a href\='https\://docs.spring.io/spring-data/mongodb/docs/current/reference/html/\#mongo.auditing'>Подробнее о настройке здесь…</a></html>
entities=Сущности
entities.from.db={0} из БД
entity=Для сущности
entity.attribute.from.db={0} из БД
entity.class=Класс сущности
entity.graph=График сущности
entity.graph.field=График сущности
entity.graph.type.fetch=<html>При использовании свойства javax.persistence.fetchgraph для указания<br>графика сущности, атрибуты, указанные узлами атрибутов<br>графика сущности, обрабатываются как FetchType.EAGER, а атрибуты, которые не<br>указаны, обрабатываются как FetchType.LAZY<br><br></html>
entity.graph.type.load=<html>При использовании свойства javax.persistence.loadgraph для указания<br>графика сущности, атрибуты, указанные узлами атрибутов<br>графика сущности, обрабатываются как FetchType.EAGER, а атрибуты, которые не<br>указаны, обрабатываются согласно их указанному или стандартному FetchType.<br><br></html>
entity.listener.class=Класс слушателя сущности
entity.package=Целевой пакет
entity.projection.or.dto.return.type=Класс сущности, Spring проекции или DTO
entity.view.class.name=Имя класса представления сущности
entity.view.type=Тип представления сущности
equals.hash.code=equals() и hashCode()
error=Ошибка
excludeLazyField.fix=Исключить это поле из @ToString.
excludeLazyFields.fix=Исключить все поля с отложенной загрузкой с помощью @ToString.Exclude.
excludeLazyFieldsFromHeader.fix=Исключить все поля с отложенной загрузкой.
existing.db.upgrade=Обновление существующей БД (Diff)
existing.parent.class=Существующий родительский класс
extract.and.configure.jpql.query=Извлечь JPQL запрос и настроить…
extract.jpql.query=Извлечь JPQL запрос
extract.mapped.super.class=Извлечь в MappedSuperclass
extract.mapped.super.class.from=Извлечь из
extract.mapped.super.class.to=Извлечь в
extracting.jpql.using.limit.query=Невозможно извлечь JPQL запрос из метода, использующего опции "Top" или "First"
extracting.jpql.using.updateOrDelete.query=Невозможно извлечь JPQL запрос из запроса "Update" или "Delete"
extracting.warning=Предупреждение извлечения
extracting.warning.msg=Некоторые атрибуты/методы, используемые в одном из извлеченных методов, не будут извлечены в родительский класс, так как вы их не выбрали. Это может привести к некомпилируемому коду. Хотите продолжить?
field.name=Имя поля
field.required=Поле ''{0}'' является обязательным
file.name=Имя файла
find=Найти
find.first=Найти первый
fixes.create.jpa.projection=Создать Spring проекцию
fluent.help.description=Сгенерированные сеттеры будут возвращать `this` вместо `void`. Такие сеттеры могут быть полезны, если вы хотите объединить несколько вызовов методов в цепочку.
fluent.setters=Fluent сеттеры
found.override.properties=Хотите переопределить эти свойства?
from.existing.attributes=Из существующих атрибутов
from.parent=из родителя
generate.columns.from.db=сгенерировать колонки из БД
generate.ddl.by.entities=Сгенерировать DDL по сущностям…
generate.equals.and.hashcode.already.defined.warning=Методы ''boolean equals(Object)'' или ''int hashCode()'' уже определены\nдля класса {0}. Хотите удалить их и продолжить?
generate.equals.and.hashcode.already.defined.warning.anonymous=Методы 'boolean equals(Object)' или 'int hashCode()' уже определены\nдля этого анонимного класса. Хотите удалить их и продолжить?
generate.equals.and.hashcode.composite.warning={0} {1} должен реализовать методы equals и hashcode. Хотите сгенерировать их?
generate.equals.and.hashcode.several.warning=Найдено несколько ключей. Что вы хотите использовать в методах equals() и hashCode()?
generate.equals.and.hashcode.several.warning.title=Выберите стратегию генерации
generate.tostring.already.defined.title=Сгенерировать toString()
generate.tostring.already.defined.warning=Метод уже определен для класса {0} ''String toString()''. Хотите удалить его и продолжить?
generate.tostring.composite.warning=Хотите реализовать метод toString() внутри класса {0}?
generateEqualsAndHashCode.fix=Сгенерировать equals(), hashCode() и toString()
generateNoArgsConstructor.fix=Добавить конструктор без аргументов в класс
generated.ddl=Сгенерированный DDL
go.to.domain.entity=Перейти к доменной сущности "{0}"
graph=График
graph.fetch.type=Тип выборки
graph.fields.load=Поля для загрузки
group.com.intellij.orm.structure.popup.new.text=Создать
group.names.jpa.issues=JPA
hibernate=Hibernate
hibernate.ddl.auto=DDL авто
hibernate.entity.field.tooltip=Имя сущности(ей). Разделяйте запятыми при множественном выборе
hibernate.event=Событие Hibernate
hibernate.event.listener=Событие Hibernate {0}
hibernate.events.field.tooltip=Имя события(й) Hibernate. Разделяйте запятыми при множественном выборе
hibernate.format.sql=Форматовать SQL
hibernate.show.sql=Показать SQL
id=ID
id.generated.strategy=Генерация ID
idea.data.source.refresh.exception=Ошибка обновления источника данных ИСРA
incorrect.attribute.value=Имя атрибута сущности должно быть написано в стиле camelCase
incorrect.length.value=Некорректное значение длины\: {0}
inspection.LombokAllArgsInspection=Использование @AllArgsConstructor для сущностей JPA без определённого конструктора без аргументов нарушает спецификацию JPA.
inspection.LombokBuilderAllArgsInspection=Lombok @Builder требует правильного конструктора для этого класса
inspection.LombokBuilderInspection=Использование @Builder для сущностей JPA без определённого конструктора без аргументов нарушает спецификацию JPA.
inspection.ManyToManyCascadeRemove=Для ассоциаций @ManyToMany каскадный переход состояния REMOVE не имеет смысла, так как он будет распространяться за пределы связующей таблицы.
inspection.OneToOneWithLazyFetchType=Указание FetchType.LAZY для не владеющей стороны ассоциации @OneToOne не повлияет на загрузку. Связанная сущность все равно будет загружена, как если бы был определен FetchType.EAGER.
inspection.associationFieldHasColumnAnnotation.name=Поле ассоциации помечено @Column
inspection.associationFieldHasColumnAnnotation.replaceFix=Заменить @Column на @JoinColumn
inspection.associationFieldHasColumnAnnotation.warning=@Column не разрешена для свойства {0}
inspection.associationNotMarkedInspection=Атрибут сущности не помечен аннотацией ассоциации
inspection.converterNotAnnotated=JPA конвертер должен быть аннотирован с помощью @Converter
inspection.message.unknown.column=Неизвестная колонка {0}
inspection.moreThanOneId=Сущность имеет более одного атрибута id.
inspections.replaceAnnotation=Заменить на {0}
invalid.attribute.name=Колонка\: "{0}". Недопустимый или зарезервированный java-идентификатор для имени атрибута\: "{1}"
invalid.class.name=Недопустимое имя класса
invalid.domain.entity.class=Недопустимый класс доменной сущности "{0}"
invalid.field.name=Недопустимое имя поля атрибута сущности "{0}"
invalid.field.name.changed=<html>Невозможно изменить имя свойства для атрибута типа Collection<br/>при генерации MapStruct маппера. Имена таких свойств были сброшены.</html>
invalid.or.empty.domain.entity.class=Класс доменной сущности недопустим или пуст
invalid.or.empty.dto.class=Значение класса DTO недопустимо или пусто
invalid.package.name=Недопустимое имя пакета
invalid.parent.class=Недопустимый родительский класс
invalid.subDto.type=<html>Недопустимый атрибут типа subDto "{0}".<br/>Не поддерживается создание маппера с плоскими<br/>коллекционными атрибутами с уровнем вложенности больше 1.</html>
invalid.subEntityView.type=<html>Недопустимый атрибут типа представления подсущности "{0}".<br/>Не поддерживается создание представления сущности с плоскими<br/>коллекционными атрибутами с уровнем вложенности больше 1.</html>
java.record=Java record
java.type.is.empty=Столбец\: "{0}". Требуется указать тип Java
jpa.buddy.common.notifications=Общие уведомления JPA Buddy
jpa.buddy.logs=Логи JPA Buddy
jpa.buddy.template.group=JPA Buddy
jpa.converter.or.hibernate.type=JPA конвертер/Hibernate тип
jpa.converters=JPA конвертеры
jpa.entities=JPA сущности
jpa.entity=JPA сущность
jpa.entity.attributes=Атрибуты сущности
json.ignore.unknown.properties=Игнорировать неизвестные свойства при JSON-десериализации
last.modified.by=Кем изменено
last.modified.date=Дата последнего изменения
last.update=(Текущее состояние БД зафиксировано\: {0})
learn.more=Подробнее
limit=Лимит
limit.prefix=Префикс лимита
limit.size=Размер лимита
listener.class.not.selected=Класс Entity Listener не выбран. Пожалуйста, выберите класс.
loading.database.model=Загрузка модели базы данных…
loading.time=Время загрузки - {0}с
lock.mode=Режим блокировки
logical.orm.attribute.column.mappings=Маппинги столбцов
logical.orm.attribute.maps=отображает
logical.orm.embedded.usages=Использования
logical.orm.superclass.implementations=Реализации
makeCompositeClassSerializable.fix=Реализовать интерфейс Serializable в классе {0}
makeTransient.fix=Отметить как @Transient
mandatory.attribute.not.added=Обязательный атрибут не будет добавлен в сущность
mapStruct.collectionMappingCollection=Создать метод маппера для коллекции
mapStruct.collectionMappingStream=Использовать stream().map(…)
mapStruct.createMapStructClassCaption=Создать интерфейс MapStruct
mapStruct.mapper=Интерфейс MapStruct
mapStruct.mapperClassName=Имя класса маппера
mapStruct.mapperParentInterface=Родительский интерфейс
mapStruct.packageChooserDialogCaption=Выберите пакет MapStruct маппера
mapped.columns=Отображенные столбцы
mapped.relations=Отображенные связи
mapped.super.class.extract.generator=Извлечь объявление @SequenceGenerator в {0}
mapped.super.class.generator.name=Имя генератора
mapped.super.class.name=Имя MappedSuperclass
mapper.methodName=Имя метода
mapper.methods=Методы маппера
mapper.naming.options.collection=Использовать суффикс типа коллекции
mapper.naming.options.plural=Использовать множественное число
mapper.naming.options.singular=Использовать единственное число
mapping.java.type=Маппинг типа Java
mapping.settings=Настройки маппинга
mapping.types=Типы маппинга
menuItem=Меню
method=Метод
method.infix.help=Это сегмент имени метода между префиксом "{0}" и условием "By". Он позволяет использовать лаконичные имена методов и может применяться для возврата различных типов данных для одного условия запроса.
method.name=Имя метода
method.prefix=Префикс метода
methods.mapped.super.class=Извлечь методы
microsoft.sql.server=Microsoft SQL Server
microsoft.sql.server.jtds=Microsoft SQL Server (jtds)
migrate.default.values=Перенести значения по умолчанию
migrate.indexes.and.constraints=Перенести индексы и ограничения
migrate.other.columns=Перенести остальные столбцы в сущность
missing.primary.key.columns=Отсутствуют столбцы первичного ключа
modifying=Модифицирующий
module=В модуле
mutable=Изменяемый
name=Имя
named.parameters=Именованные параметры
named.query=Именованный запрос
named.query.attr.name.empty=Требуется указать имя атрибута. Строка таблицы\: {0}
named.query.creation.error=Ошибка создания именованного запроса
new.attribute=новый атрибут
new.dto=Новый DTO
new.mapper.class=Новый интерфейс MapStruct
no.attributes=Нет атрибутов
no.attributes.detected=Атрибуты не обнаружены
no.attributes.selected=Атрибуты не выбраны
no.auditor.aware.classes.info=<html>Реализации интерфейса AuditorAware не обнаружены. Вы можете вручную указать тип аудитора и создать соответствующую реализацию AuditAware позже.</html>
no.columns.for.reverse.engineering=Нет столбцов для обратного проектирования
no.driver.files.configured=Файлы драйвера не настроены. <a href\="{0}">Переключиться</a> на {1}
no.entities=Нет сущностей
notification.content.exception.during.create.directory=Исключение при создании директории\: {0}
notification.content.please.select.directory.for.create.action=Пожалуйста, выберите директорию для действия создания
notification.title.exception.during.creation.projection=Исключение при создании проекции
notification.title.exception.when.entity.column.name.calculating.column.name.template=Исключение при вычислении имени столбца сущности. Шаблон имени столбца\: {0}
notification.title.exception.when.entity.name.calculating.entity.name.template=Исключение при вычислении имени сущности. Шаблон имени сущности\: {0}
notification.title.exception.when.entity.table.name.calculating.table.name.template=Исключение при вычислении имени таблицы сущности. Шаблон имени таблицы\: {0}
notification.title.project.not.contains.modules=Проект не содержит модулей
nullability=Допустимость null
nullable=Допускает null
open.db.connection=Открыть подключение к БД
order.by.attributes=Атрибуты сортировки
other=Другое
other.settings=Другие настройки
override.properties=Переопределить свойства
packageName=Пакет
pageable=Pageable
parent=Родитель
persistence.unit.file=Файл persistence.xml
persistence.unit.manuallyAdded=добавлено вручную
persistence.unit.scanAllPackages=Сканировать все пакеты
please.check.internet.connection=Пожалуйста, проверьте подключение к интернету
pojo.class=POJO класс
presentation=Представление
progress.details.extracting=Извлечение {0}
progress.loadDriversTitle=Загрузка списка драйверов базы данных…
progress.text.choice.downloading.resolving={0, choice, 0\#Загрузка |1\#Разрешение }{1}
project.jdk.select.title=Выберите JDK проекта
project.sdk.not.defined=JDK проекта не определен
projection=Проекция
projection.class.name=Имя класса проекции
projection.type=Тип проекции
property.name=Имя свойства
pu.without.entities.error=Выбранная persistence unit не содержит сущностей. Это могло произойти из-за недавнего рефакторинга имени пакета или изменений в persistence.xml. Отредактируйте persistence unit, если она должна включать сущности, или продолжите для генерации операторов drop. Нажмите отмена для выбора другой persistence unit.
query=Запрос
query.conditions=Условия запроса
query.options=Параметры запроса
query.string=Строка запроса
radio.hibernate.custom.type=Пользовательский тип Hibernate
radio.jpa.converter=JPA конвертер
references=Ссылки
refers.to.entities=Ссылается на сущности
refresh.idea.data.source=Обновить источник данных ИСРA
relation.panel.loadParents=Загрузка родительских сущностей
remove=Удалить
remove.column.mapping=Удалить маппинг столбца
remove.listener=Удалить слушатель
removeAnnotation.fix=Удалить аннотацию @{0}
removeCascadeType.fix=Удалить аргумент CascadeType.REMOVE
removeLazyForOneToOneAnnotation.fix=Удалить аргумент FetchType.LAZY
replaceCascadeTypeAll.fix=Заменить CascadeType.ALL на все типы каскадирования кроме CascadeType.REMOVE
replaceData.fix=Заменить @Data безопасными аннотациями и автогенерируемыми equals() и hashCode()
replaceEqualsAndHashCode.fix=Заменить @EqualsAndHashCode рекомендуемыми реализациями equals() и hashCode()
replacePageToList.fix=Заменить {0} на {1}
replaceToString.fix=Заменить @ToString рекомендуемой реализацией toString()
repositories=Репозитории
repository.creation.dialog.entity=Сущность
repository.method.overridden=В базовом классе найден метод с таким же именем "{0}"\! Метод был переопределен.
repository.name=Имя репозитория
repository.query.method=Метод запроса репозитория
result=Результат
return.type=Возвращаемый тип
revision.listener=Слушатель ревизии
revision.number=Номер ревизии
revision.repository=Репозиторий ревизий
revision.timestamp=Временная метка ревизии
run.action=Выполнить действие
save.entity.indicator=Сохранить сущность "{0}"
scan.packages=Сканировать пакеты
scratch.db.initialization=Инициализация схемы БД
select.any.dto.type=Выберите любой тип DTO
select.any.entity.attribute.type=Выберите любой тип атрибута сущности
select.any.entity.view.type=Выберите любой тип представления сущности
select.any.projection.type=Выберите любой тип проекции
select.at.least.one.entity=Выберите хотя бы одну сущность для создания пользовательской области
select.columns.for.id.attribute=Выберите столбцы для использования в качестве первичного ключа
select.entities=Выберите сущности для пользовательской области
select.id.attributes=Выберите атрибуты первичного ключа
select.id.columns=Выбрать столбцы первичного ключа
select.repository=Выбрать репозиторий
select.repository.method.type=Выбрать тип метода репозитория
sequence=Последовательность
sequence.field.required=Поле последовательности обязательно
serializable=Serializable
settings=Настройки
several.auditor.aware.classes.info=<html>Обнаружено несколько реализаций интерфейса AuditorAware. Убедитесь, что выбранный тип аудитора соответствует используемому в конфигурации Spring Audit.</html>
shorten.method.name=Сократить имя метода
show.basic.attributes=Показать базовые атрибуты
signature=Сигнатура
snapshot.file.not.exists=Файл снапшота не существует
snapshot.incorrect.message=Не удаётся прочитать данные из кэша схемы БД. Попробуйте обновить его или отключить.
snapshot.incorrect.title=Ошибка чтения снапшота
sort.table.unavailable=Таблица <b>сортировки</b> недоступна. Сначала выберите опцию <b>Найти первый</b>.
sortable=Sortable
source.class=Исходный тип
source.root=Корневой источник
source.scope=Область видимости источника
specification=Спецификация
spring.data.repositories=Репозитории Spring Data
start.text.todo.reverse.engineering=TODO [Реверс-инжиниринг]
start.text.todo.reverse.engineering.odd=TODO Реверс-инжиниринг
success=Стандартные экраны успешно созданы
table=таблица
table.name=Имя таблицы
table.view=Таблица/Представление
tables=Таблицы
target.class=Целевой тип
to.string=toString()
todo.comment=TODO
todo.java.type.render=Это поле будет сгенерировано позже
todo.reverse.engineering=//TODO [Реверс-инжиниринг] сгенерировать столбцы из БД
transactional.read.only=Transactional readOnly
tree.persistence.units.missing.package.tooltip=Модуль персистентности ссылается на отсутствующий пакет
type.migration.label=Мигрировать {0} "{1}" в
uncomment.as.is=Раскомментировать как есть
unselect.columns=Отменить выбор столбцов
unselect.table.has.usages=<html>Таблица <b>{0}</b> имеет использования, которые небезопасно отменять\: <ul>{1}</ul>
up=Вверх
updatable=Обновляемый
update.re.mappings=Обновление маппинга
update.re.mappings.message=Вы только что изменили правила именования и/или маппинг столбцов в атрибуты. Хотите применить новые настройки сейчас? Учтите, что все сделанные настройки маппинга будут сброшены.
update.values=Обновляемые значения
update.values.attribute.is.empty=Атрибут в таблице "Обновляемые значения" пуст
update.values.is.empty=Укажите хотя бы одно обновляемое значение
usages.detected=Обнаружены использования
use.named.parameters=Использовать именованные параметры
use.table.schema=Использовать схему таблицы
used.by=используется\:
validation.attributes.and.order.by.empty=Условия запроса и атрибуты сортировки пусты
validation.attributes.empty=Условия запроса пусты
validation.delete.update.join=Метод не должен содержать атрибуты связанной сущности в условии
validation.delete.void.id=Void является единственным возможным возвращаемым типом для метода deleteById().
validation.duplicate.repository.method.name=<html>Метод с таким именем "{0}" уже существует.</html>
validation.duplicate.repository.method.name.action=<html><a href\=''\#ADD_IT''>Применить имя возвращаемого типа как инфикс и использовать "{0}" как имя метода</a></html>
validation.incorrect.pageable.return.type=Методы, возвращающие постраничные данные, должны иметь один из следующих возвращаемых типов\: Page<T>, Slice<T>, List<T>
validation.incorrect.repository.return.type=Некорректный возвращаемый тип репозитория
validation.repository.method.have.pageable.and.sort=Метод не может быть одновременно Pageable и Sortable. Используйте возможности сортировки в Pageable.
validation.repository.not.selected=Репозиторий не выбран
validation.update.only.basic=Метод не должен обновлять атрибуты связанной сущности
value=Значение
value.type=Тип значения
velocity.template=Шаблон Velocity
view=Просмотр
views=Представления
wrap.type=Тип обертки