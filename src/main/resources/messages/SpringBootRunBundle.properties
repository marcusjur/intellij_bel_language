action.Spring.Boot.Environment.Endpoint.Hide.Values.text=Скрыть значения (требуется перезапуск)
action.Spring.Boot.Environment.Endpoint.Show.Values.text=Показать значения (требуется перезапуск)
action.Spring.Boot.Generate.Starters.Action.text=Добавить стартеры…
action.SpringBootApplicationUrlPathEditAction.text=Изменить путь по умолчанию
advanced.setting.spring.boot.run.using.gradle=Запускать через Gradle
advanced.setting.spring.boot.run.using.gradle.description=По умолчанию ИСР использует Gradle для сборки проекта и запуска задач. Если отключено, Spring Boot конфигурации запускаются через ИСР.
advanced.settings.spring.boot=Фреймворки. Spring Boot
notification.group.endpoints=Конечные точки Spring Boot приложения
spring.boot.application.endpoints.application.ready.check.failed=Не удалось проверить состояние готовности приложения\: {0}
spring.boot.application.endpoints.application.ready.check.refresh=Нажмите кнопку Обновить для перезапуска проверки состояния готовности
spring.boot.application.endpoints.application.ready.check.timeout.exceeded=Превышено время ожидания
spring.boot.application.endpoints.bean.auto.configuration=Автоконфигурация
spring.boot.application.endpoints.bean.class.not.found=Класс бина не найден
spring.boot.application.endpoints.bean.definition.not.found=Определение бина не найдено
spring.boot.application.endpoints.bean.depends.on=Зависит от
spring.boot.application.endpoints.bean.gutter.tooltip=Runtime бины
spring.boot.application.endpoints.bean.injected.into=Внедрен в
spring.boot.application.endpoints.bean.item.group.dependent=Зависимые Runtime бины
spring.boot.application.endpoints.bean.item.group.injected=Внедренные Runtime бины
spring.boot.application.endpoints.bean.not.injected=Бин нигде не внедрен
spring.boot.application.endpoints.bean.popup.title=Runtime бины
spring.boot.application.endpoints.beans.diagram.provider=Spring Runtime бины
spring.boot.application.endpoints.beans.tab.title=Бины
spring.boot.application.endpoints.conditions.copied=Скопировано в буфер обмена
spring.boot.application.endpoints.config.file.not.found=Конфигурационный файл не найден
spring.boot.application.endpoints.configure.health.tab.action.name=Настроить параметры вкладки состояния
spring.boot.application.endpoints.diagram.mode.action.name=Режим диаграммы
spring.boot.application.endpoints.env.active.profiles=Активные профили\:
spring.boot.application.endpoints.env.hidden.value.tooltip=Значения по умолчанию скрыты.<br>Используйте действие 'Показать значения' или настройте 'management.endpoint.env.show-values'
spring.boot.application.endpoints.env.tab.title=Окружение
spring.boot.application.endpoints.error.bean.not.initialized=Бин ''{0}'' не инициализован
spring.boot.application.endpoints.error.excluded=Конечная точка исключена через свойство ''{0}''
spring.boot.application.endpoints.error.failed.to.retrieve.application.beans.snapshot=Не удалось получить снимок бинов приложения\:
spring.boot.application.endpoints.error.failed.to.retrieve.application.port=Не удалось получить порт приложения\:<br> {0}
spring.boot.application.endpoints.error.failed.to.retrieve.endpoint.data=Не удалось получить данные конечной точки ''{0}''
spring.boot.application.endpoints.error.failed.to.retrieve.jmx.service.url=Не удалось получить URL JMX-сервиса приложения
spring.boot.application.endpoints.error.jmx.agent.not.loaded=JMX агент не загружен
spring.boot.application.endpoints.error.not.exposed=Конечная точка не опубликована через свойство ''{0}''
spring.boot.application.endpoints.error.process.not.found=Не удалось найти процесс приложения для подключения
spring.boot.application.endpoints.error.property.is.set.to.false=Свойство ''{0}'' установлено в false
spring.boot.application.endpoints.health.check=Обновлять состояние во вкладке Actuator каждые
spring.boot.application.endpoints.health.check.tooltip=Автоматически обновлять дерево состояния
spring.boot.application.endpoints.health.check.unit=сек.
spring.boot.application.endpoints.health.indicators.disabled=Все индикаторы состояния отключены. Доступен только общий статус.
spring.boot.application.endpoints.health.status=Статус\: {0}
spring.boot.application.endpoints.health.tab.configurable.name=Состояние
spring.boot.application.endpoints.health.tab.refresh.action.name=Обновить (автообновление включено с задержкой {0} сек.)
spring.boot.application.endpoints.health.tab.title=Состояние
spring.boot.application.endpoints.navigate.to.bean.class.action.description=Перейти к выбранному классу бина
spring.boot.application.endpoints.navigate.to.bean.class.action.name=Перейти к классу бина
spring.boot.application.endpoints.parent.context=Родительский контекст\: {0}
spring.boot.application.endpoints.refresh.action.description=Обновить данные конечных точек приложения
spring.boot.application.endpoints.refresh.action.name=Обновить
spring.boot.application.endpoints.root.context=Корневой контекст
spring.boot.application.endpoints.show.context.action.name=Показать контексты
spring.boot.application.run.configuration.active.profiles=Активные профили
spring.boot.application.run.configuration.active.profiles.tooltip=Список профилей через запятую
spring.boot.application.run.configuration.class.not.specified=Не указан класс приложения Spring Boot
spring.boot.application.run.configuration.debug.output=Включить вывод отладки [&D]
spring.boot.application.run.configuration.debug.output.tooltip=<html>Включает вывод отладки, добавляя опцию VM <code>-Ddebug</code></html>
spring.boot.application.run.configuration.do.nothing=Ничего не делать
spring.boot.application.run.configuration.enable.scheduled.debugger=Включить Scheduled дебаггер [&S]
spring.boot.application.run.configuration.enable.scheduled.debugger.tooltip=<html>Загружает агент Scheduled дебаггера <code>-agentpath\:.../libschedule.so</code></html>
spring.boot.application.run.configuration.environment.section=Окружение [&M]
spring.boot.application.run.configuration.framework.section=Spring Boot [&G]
spring.boot.application.run.configuration.hide.banner=Скрыть баннер [&H]
spring.boot.application.run.configuration.hide.banner.tooltip=<html>Скрывает баннер, добавляя опцию VM <code>-Dspring.main.banner-mode\=OFF</code><br>(<code>-Dspring.main.show-banner\=false</code> для Spring Boot 1.4.x или ранее)</html>
spring.boot.application.run.configuration.invalid.class=Недопустимый класс приложения Spring Boot
spring.boot.application.run.configuration.invalid.parameter=Пустое имя свойства в строке {0}
spring.boot.application.run.configuration.jmx.agent=Включить JMX эндпоинты [&X]
spring.boot.application.run.configuration.jmx.agent.tooltip=<html>При включении активирует JMX агент для отображения данных эндпоинтов приложения, добавляя опции VM\: <code><br>-Dcom.sun.management.jmxremote <br>-Dspring.jmx.enabled\=true <br>-Dspring.liveBeansView.mbeanDomain <br>-Dspring.application.admin.enabled\=true <br>-Dmanagement.endpoints.jmx.exposure.include\=*</code><p>Включение этой опции может замедлить запуск.<p>Требуется Spring Boot 1.3.0 или выше.</html>
spring.boot.application.run.configuration.launch.optimization=Включить оптимизацию запуска [&Z]
spring.boot.application.run.configuration.launch.optimization.tooltip=<html>При включении добавляет опции VM <code>-XX\:TieredStopAtLevel\=1</code> и <code>-noverify</code> (только для версий JDK ниже 13) для ускорения запуска.<br>Убедитесь, что эти опции не оказывают негативного влияния на ваш проект.</html>
spring.boot.application.run.configuration.main.class=Главный класс
spring.boot.application.run.configuration.on.frame.deactivation=При переключении из ИСР [&F]
spring.boot.application.run.configuration.on.update.action=При действии '&Обновить' [&U]
spring.boot.application.run.configuration.override.parameters=Переопределить свойства конфигурации [&P]\:
spring.boot.application.run.configuration.policy.not.available.on.frame.deactivation=''{0}'' недоступно при переключении из ИСР
spring.boot.application.run.configuration.policy.not.available.on.update.action=''{0}'' недоступно при действии "Обновить"
spring.boot.application.url.path.dialog.title=Настройка пути по умолчанию
spring.boot.application.url.path.label=Путь по умолчанию\:
spring.boot.choose.class.dialog.title=Выбор класса Spring Boot
spring.boot.generate.starters.add.managed.dependency.command=Добавить управляемую зависимость
spring.boot.generate.starters.dialog.title=Добавить стартеры
spring.boot.generate.starters.fail.to.retrieve.versions=Не удалось получить список версий
spring.boot.generate.starters.inlay.provider.description=Нажмите, чтобы добавить стартер Spring Boot.
spring.boot.generate.starters.inlay.provider.name=Добавить стартеры Spring Boot
spring.boot.generate.starters.loading.text=Загрузка зависимостей
spring.boot.generate.starters.version.not.supported=Версия Spring Boot ''{0}'' не поддерживается
spring.boot.jmx.setup.cant.parse.jmx.port=Не удаётся разобрать удалённый порт JMX {0}
spring.boot.jmx.setup.for.remote.case.two.ports.should.match=Для удалённой цели порт реестра JMX {0} и порт сервера JMX RMI {1} должны иметь одинаковое значение
spring.boot.run.config.fragment.framework.group=Spring
spring.boot.run.config.fragment.jmx.agent=Отключить JMX эндпоинты [&X]
spring.boot.run.config.fragment.launch.optimization=Отключить оптимизацию запуска [&Z]
spring.boot.run.config.fragment.override.properties=Переопределить свойства конфигурации [&P]
spring.boot.run.config.settings.background.compilation.enabled=Фоновая компиляция включена
spring.boot.run.config.settings.on.frame.deactivation=При переключении из ИСР
spring.boot.run.config.settings.on.update.action=При выполнении действия "Обновить"
spring.boot.run.config.settings.running.application.update.policies=Политики обновления запущенного приложения
spring.boot.run.config.type.description=Приложение Spring Boot
spring.boot.run.config.type.name=Spring Boot
spring.boot.run.config.update.application=Обновить приложение ''{0}''
spring.boot.update.policy.classes.resources.description=<nobr>Компилирует все измененные и зависимые файлы.</nobr>
spring.boot.update.policy.classes.resources.name=Обновить классы и ресурсы
spring.boot.update.policy.classes.trigger.description=<i>В режиме отладки\:</i> <br>компилирует все измененные и зависимые файлы, выполняет hot swap классов, <br>обновляет триггер-файл при неудаче hot swap. <br><i>В противном случае\:</i> <br>компилирует все измененные и зависимые файлы и обновляет триггер-файл. <br>Указывает имя триггер-файла, добавляя опцию VM <code>-Dspring.devtools.restart.trigger-file\=.restartTriggerFile</code>
spring.boot.update.policy.classes.trigger.name=Hot swap классов и обновление триггер-файла при неудаче
spring.boot.update.policy.resources.description=<nobr>Компилирует все измененные и зависимые файлы ресурсов.</nobr>
spring.boot.update.policy.resources.name=Обновить ресурсы
spring.boot.update.policy.trigger.description=Обновляет триггер-файл. <br>Указывает имя триггер-файла, добавляя опцию VM <code>-Dspring.devtools.restart.trigger-file\=.restartTriggerFile</code>
spring.boot.update.policy.trigger.name=Обновить триггер-файл