action.AnalyzeUnloadablePlugins.progress.title=Анализ плагинов ({0})
action.AnalyzeUnloadablePlugins.text=Анализовать выгружаемые плагины
action.DevKit.NewMessageBundle.action.name.create.new.message.bundle=Создать новый message bundle ''{0}''
action.DevKit.NewMessageBundle.description=Создать новый класс message bundle и соответствующий properties файл
action.DevKit.NewMessageBundle.error.message.do.not.put.bundle.to.impl.module=Не рекомендуется создавать отдельные bundle для .impl модулей, используйте bundle из соответствующего API модуля
action.DevKit.NewMessageBundle.error.message.folder.already.exists=Папка ''{0}'' уже существует в {1}
action.DevKit.NewMessageBundle.error.message.multiple.content.roots.for.module=Несколько корневых папок для {0}
action.DevKit.NewMessageBundle.error.message.under.sources.root={0} находится под корнем исходников
action.DevKit.NewMessageBundle.error.title.cannot.create.new.message.bundle=Невозможно создать новый message bundle
action.DevKit.NewMessageBundle.label.bundle.name=Имя bundle\:
action.DevKit.NewMessageBundle.notification.content.cannot.create.resources.root.for.properties.file=Невозможно создать корень ресурсов для properties файла {0}
action.DevKit.NewMessageBundle.notification.title.cannot.create.resources.root.for.properties.file=Невозможно создать новый message bundle
action.DevKit.NewMessageBundle.text=Message Bundle
action.DevKit.NewMessageBundle.title.create.new.message.bundle=Создать новый message bundle
action.DumpCleanTestData.error.source.destination.must.differ=Исходный и целевой корни должны различаться
action.DumpCleanTestData.file.chooser.destination.description=Директория для размещения копии без маркеров подсветки
action.DumpCleanTestData.file.chooser.source.description=Директория с тестовыми данными подсветки
action.DumpCleanTestData.file.chooser.title=Выберите директорию
action.DumpCleanTestData.text=Дамп данных подсветки без маркеров
action.GenerateExternalization.text=Сгенерировать externalization
action.MakeAllJarsAction.text=Подготовить все плагины к деплою
action.MakeJarAction.text=Подготовить к деплою
action.NewAction.description=Создать новое действие
action.NewAction.text=Действие
action.ShowHelpPageById.dialog.enter.help.id=Введите ID справки\:
action.ShowHelpPageById.dialog.title=Показать страницу справки
action.ShowHelpPageById.text=Показать страницу справки по ID
action.ShowSerializedXml.dialog.title=Сериализованный XML для ''{0}''
action.ShowSerializedXml.message.cannot.find.class=Не удаётся найти класс ''{0}''
action.ShowSerializedXml.message.cannot.generate.class=Не удаётся сгенерировать класс ''{0}''\: {1}
action.ShowSerializedXml.message.caret.must.be.at.class.identifier=Курсор должен находиться на идентификаторе класса
action.ShowSerializedXml.text=Показать сериализованный XML класса
action.ShuffleNamesAction.text=Перемешать/обфусцировать/анонимизовать/переставить имена
action.TestData.Navigate.text=Перейти к тестовым данным
action.ToggleHighlightingMarkup.text=Переключить ожидаемые маркеры подсветки
action.UpdateIdeFromSources.description=Собрать установку IntelliJ ИСРA из текущих открытых исходников и обновить текущую (или другую) установку результатом.
action.UpdateIdeFromSources.text=Обновить ИСР из исходников…
action.UpdateIdeFromSourcesAction.copy.copy.new.files.text=Копирование новых файлов
action.UpdateIdeFromSourcesAction.copy.delete.old.files.text=Удаление старых файлов
action.UpdateIdeFromSourcesAction.copy.progress.text=Копирование файлов в дистрибутив ИСР…
action.UpdateIdeFromSourcesAction.dialog.message.directory.not.writable=Директория {0} недоступна для записи
action.UpdateIdeFromSourcesAction.error.config.or.system.directory.under.home=Невозможно обновить установку {0}, так как свойство ''{1}'' указывает на\nдиректорию под ней, которая будет очищена при обновлении.
action.UpdateIdeFromSourcesAction.error.empty.dir=Директория сборки ''{0}'' пуста.
action.UpdateIdeFromSourcesAction.error.ide.cannot.restart=Эта ИСР не может перезапуститься самостоятельно, поэтому обновление из исходников не поддерживается
action.UpdateIdeFromSourcesAction.error.no.module=Модуль скрипта сборки ''{0}'' не найден в проекте.
action.UpdateIdeFromSourcesAction.error.no.sdk=SDK проекта не определен.
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home={0} не является корректным корнем ИСР\: {1}
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home.not.directory=это не директория
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home.not.exists=некорректная директория установки\: ''{0}'' не существует
action.UpdateIdeFromSourcesAction.notification.action.view.debug.log=Показать отладочный лог
action.UpdateIdeFromSourcesAction.notification.action.view.output=Показать вывод
action.UpdateIdeFromSourcesAction.notification.content=Новая установка готова в {0}.
action.UpdateIdeFromSourcesAction.notification.title=Обновление из исходников
action.UpdateIdeFromSourcesAction.settings.do.not.show.description=Вы можете вызвать действие "Настройки обновления ИСР из исходников" для изменения настроек
action.UpdateIdeFromSourcesAction.settings.enabled.plugins.only=Собирать только включенные плагины
action.UpdateIdeFromSourcesAction.settings.installation.choose.ide.directory.title=Выберите директорию установки ИСР
action.UpdateIdeFromSourcesAction.settings.ok.button=Обновить
action.UpdateIdeFromSourcesAction.settings.restart.automatically=Перезапустить автоматически
action.UpdateIdeFromSourcesAction.settings.row.ide.installation=Установка ИСР\:
action.UpdateIdeFromSourcesAction.settings.title=Обновить ИСР из исходников
action.UpdateIdeFromSourcesAction.task.failed.content=Скрипт сборки завершился с кодом ошибки {0}
action.UpdateIdeFromSourcesAction.task.failed.title=Ошибка обновления из исходников
action.UpdateIdeFromSourcesAction.task.title=Обновление из исходников
action.UpdateIdeFromSourcesAction.update.progress.delete=Удаление {0}
action.UpdateIdeFromSourcesAction.update.progress.start.script=Запуск скрипта сборки дистрибутива
action.UpdateIdeFromSourcesAction.update.progress.text=Обновление ИСР из исходников…
action.UpdateIdeFromSourcesSettings.text=Настройки обновления ИСР из исходников…
api.dump.generated.sources.filter.notification=Не изменяйте вручную, содержимое должно быть взято из ApiCheckTest.
code.convert.experimental.feature.id.cannot.resolve=Не удаётся разрешить функцию ''{0}''
code.convert.experimental.feature.no.description=Нет описания
code.convert.extension.point.declaration=Не удаётся разрешить extension point ''{0}''
code.convert.notification.group.cannot.resolve=Не удаётся разрешить id группы уведомлений ''{0}''
code.convert.registry.key.cannot.resolve=Не удаётся разрешить ключ реестра ''{0}''
code.convert.registry.key.no.default.value=Нет значения по умолчанию
code.convert.registry.key.no.description=Нет описания
command.implement.externalizable=Реализовать Externalizable
create.description.file=Создать файл описания{0}
create.description.file.family.name=Создать файл описания
deployment.cleanup=Очистка директории {0}
deployment.directory.location=Выберите расположение директории {0}
deployment.title=Деплой плагина
deployment.view.delete=Удалить {0}?
deployment.view.meta-inf.label=Путь к {0}
deployment.view.select=Выберите {0}
devkit.unstable.api.usage.ignore.declared.inside.this.project=Игнорировать нестабильные API, объявленные в этом проекте
error.cannot.resolve.extension.point=Не удаётся разрешить extension point ''{0}'' в зависимостях
error.cannot.resolve.extension.point.missing.dependency=Отсутствует объявление зависимости для использования extension point ''{0}''
error.cannot.resolve.extension.point.missing.dependency.fix.family.name=Добавить отсутствующий <depends>
error.cannot.resolve.plugin=Не удаётся разрешить плагин ''{0}'' в зависимостях
error.cannot.resolve.plugin.reference.link.title=(справка\: зависимости плагинов)
error.file.not.found=Файл не найден
error.file.not.found.message=Файл ''{0}'' не существует
error.message.cannot.find.module=Не удаётся найти модуль ''{0}''
error.message.cannot.find.resource.file=Не удаётся найти файл ''{0}'' в модуле ''{1}''
error.no.plugin.xml=Файл plugin.xml не найден
error.occurred=Произошла ошибка
error.plugin.xml.readonly=Невозможно обработать файл plugin.xml только для чтения\: {0}
error.plugin.xml.tag.invalid=<Invalid>
extension.point.documentation.field.required.can.be.empty.suffix=(обязательно, может быть пустым)
extension.point.documentation.field.required.suffix=(обязательно)
extension.point.documentation.implementation.section=Реализация extension point
extension.point.documentation.link.platform.explorer=Показать использование в IntelliJ Platform Explorer
file.templates=Шаблоны
file.templates.new.plugin=Новый плагин
group.DevkitNewActions.text=Plugin DevKit
group.Internal.DevKit.text=DevKit
group.PluginDeployActions.text=Действия деплоя плагина
gutter.name.test.data.line.marker=Тестовые данные
gutter.related.extension.declaration=Объявление
gutter.related.navigation.choose.action=Выберите действие
gutter.related.navigation.choose.action.group=Выберите группу действий
gutter.related.navigation.choose.component=Выберите компонент
gutter.related.navigation.choose.extension=Выберите расширение
gutter.related.navigation.choose.extension.point=Выберите extension point
gutter.related.navigation.choose.listener=Выберите слушатель
gutter.related.navigation.popup.description.tooltip=Описание
gutter.related.navigation.popup.template.title=Выберите шаблон
gutter.related.navigation.popup.template.tooltip=До/после шаблона
gutter.related.option.before.after.templates=До/после шаблонов
gutter.related.option.description=Описание
gutter.related.option.name=Описание/До|После шаблонов
implemented.at.runtime.dom=DOM элемент, реализуемый во время выполнения
info.message=Информация
inlay.threading.description=Аннотации для работы с потоками и блокировками чтения/записи IntelliJ Platform, например <code>@RequiresEdt</code>, <code>@RequiresReadLock</code>.<br><br>Экспериментально, включено только в проектах ИСРA.
inlay.threading.name=Работа с потоками IJ Platform
inspection.action.is.not.preview.friendly.display.name=Поле блокирует предпросмотр intention
inspection.action.presentation.instantiated.in.ctor.display.name=Предварительное создание презентации действия
inspection.action.presentation.instantiated.in.ctor.message=Презентация действия инстанцирована в конструкторе
inspection.cancellation.check.in.loops.display.name=Проверка отмены в циклах
inspection.cancellation.check.in.loops.message=Проверка отмены ''{0}'' должна быть первым оператором в теле цикла
inspection.extension.class.should.be.final.and.non.public.display.name=Класс расширения должен быть final и non-public
inspection.extension.class.should.be.final.text=Класс расширения должен быть final
inspection.extension.class.should.not.be.public.service=Реализация сервиса не должна быть public. Если сервис должен использоваться за пределами своего модуля, выделите из него интерфейс и укажите его как serviceInterface в plugin.xml.
inspection.extension.class.should.not.be.public.text=Класс расширения не должен быть public
inspection.extension.registered.as.component.message=Класс не может быть зарегистрирован одновременно как расширение и компонент
inspection.extension.registered.as.service.message=Класс не может быть зарегистрирован одновременно как расширение и сервис
inspection.extension.registered.as.service.or.component.display.name=Расширение зарегистрировано как сервис/компонент
inspection.file.equals.usage.display.name=Использование File.equals()
inspection.incorrect.parent.disposable.display.name=Некорректный параметр parentDisposable
inspection.incorrect.service.retrieving.display.name=Некорректное получение сервиса
inspection.incorrect.service.retrieving.mismatch.for.app.level=Сервис уровня приложения получен как сервис уровня проекта
inspection.incorrect.service.retrieving.mismatch.for.project.level=Сервис уровня проекта получен как сервис уровня приложения
inspection.incorrect.service.retrieving.not.registered=Класс ''{0}'' не зарегистрирован как сервис
inspection.insert.cancellation.check.fix.message=Вставить проверку отмены
inspection.inspection.description.not.found.inspection.display.name=Проверка описания инспекции
inspection.inspection.unspecified.actions.place.display.name=Неуказанное место действия
inspection.inspection.using.gray.colors.display.name=Использование new Color(a,a,a)
inspection.intention.description.not.found.inspection.display.name=Проверка описания intention
inspection.light.service.migration.already.annotated.message=Класс сервиса с аннотацией '@Service' не должен регистрироваться в plugin.xml
inspection.light.service.migration.app.level.fix=Аннотировать класс сервиса '@Service' и удалить его регистрацию из файла 'plugin.xml'
inspection.light.service.migration.display.name=Сервис может быть преобразован в легковесный сервис
inspection.light.service.migration.family.name=Преобразовать в легковесный сервис
inspection.light.service.migration.message=Сервис может быть преобразован в легковесный сервис
inspection.light.service.migration.project.level.fix=Аннотировать класс сервиса '@Service(Service.Level.PROJECT)' и удалить его регистрацию из файла 'plugin.xml'
inspection.light.service.must.be.concrete.class.message=Легковесный сервис должен быть конкретным классом, а не абстрактным классом или интерфейсом.\nIntelliJ Platform полагается на конкретные классы реализации для создания и управления экземплярами сервисов. Без конкретной реализации платформа не сможет создать экземпляр сервиса, и сервис не будет доступен для использования плагином.\nДля исправления определите конкретный класс реализации для сервиса и аннотируйте его с помощью '@Service'.
inspection.light.service.must.be.final.display.name=Легковесный сервис должен быть final
inspection.light.service.must.be.final.message=Легковесный сервис должен быть final
inspection.message.accessible.context.not.defined.for.jpanel=Не определен accessible context для JPanel
inspection.message.field.may.prevent.intention.preview.to.work.properly=Поле может препятствовать корректной работе предпросмотра intention
inspection.message.unnecessary.safe.field.annotation=Ненужная аннотация @SafeFieldForPreview\: тип поля уже считается безопасным
inspection.migrate.to.opt.control.display.name=Миграция на getOptionPane()
inspection.migrate.to.opt.control.fix=Преобразовать в OptPane
inspection.migrate.to.opt.control.message=Может быть автоматически преобразовано в OptPane
inspection.mismatched.light.service.level.and.ctor.app.level.ctor.required=Сервис уровня приложения требует конструктор без параметров или с одним параметром типа 'kotlinx.coroutines.CoroutineScope'
inspection.mismatched.light.service.level.and.ctor.display.name=Несоответствие между уровнем легковесного сервиса и конструктором
inspection.mismatched.light.service.level.and.ctor.project.level.required=Легковесный сервис с конструктором, принимающим параметр типа 'Project', должен указывать '@Service(Service.Level.PROJECT)'
inspection.mismatched.light.service.level.and.ctor.specify.project.level.fix=Указать параметр 'Service.Level.PROJECT' в аннотации '@Service'
inspection.missing.accessible.context.display.name=Отсутствует accessible context
inspection.missing.recent.api.display.name=IntelliJ API недоступно в старых ИСР
inspection.non.default.constructor.display.name=Нестандартный конструктор для сервисов и классов расширений
inspection.plugin.xml.dynamic.plugin.display.name=Валидация динамических плагинов в Plugin.xml
inspection.plugin.xml.extension.registration.configurable.should.define.displayName.or.key.attribute=Определите атрибут 'displayName' или 'key', соответствующий реализации 'Configurable.getDisplayName()'
inspection.plugin.xml.extension.registration.display.name=Регистрация расширений в Plugin.xml
inspection.plugin.xml.extension.registration.should.define.externalidprefix.attribute=<html>Определите атрибут externalIdPrefix, см. <a href\='https\://plugins.jetbrains.com/docs/intellij/stub-indexes.html?from\=PluginXmlExtensionRegistrationInspection'>Stub Indexes</a></html>
inspection.plugin.xml.extension.registration.should.define.id.attribute=Определите атрибут 'id', соответствующий реализации 'StatusBarWidgetFactory.getId()'
inspection.plugin.xml.extension.registration.should.define.language.attribute=Расширение ''{0}'' должно определять атрибут ''language''
inspection.plugin.xml.extension.registration.should.define.language.tag=Расширение ''{0}'' должно определять тег ''language''
inspection.plugin.xml.extension.registration.should.define.language.tag.family.name=Добавить тег language
inspection.plugin.xml.plugin.logo.display.name=Проверка логотипа плагина
inspection.plugin.xml.registration.check.display.name=Проверка регистрации в plugin.xml
inspection.plugin.xml.validity.display.name=Валидность Plugin.xml
inspection.potential.deadlock.during.service.init.display.name=Потенциальный deadlock при инициализации сервиса
inspection.potential.deadlock.during.service.init.message.context=({0} вызван в {1})
inspection.potential.deadlock.during.service.init.message.context.constructor=конструктор ''{0}'' или блок init
inspection.potential.deadlock.during.service.init.message.context.field=инициализатор поля ''{0}''
inspection.potential.deadlock.during.service.init.message.context.instance.initializer=блок инициализации экземпляра
inspection.potential.deadlock.during.service.init.message.context.method=метод ''{0}''
inspection.potential.deadlock.during.service.init.message.context.static.initializer=статический блок инициализации
inspection.potential.deadlock.during.service.init.message.invoke.and.wait=Не выполняйте ''invokeAndWait'' во время инициализации сервиса {0}
inspection.potential.deadlock.during.service.init.message.read=Не выполняйте операции чтения во время инициализации сервиса {0}
inspection.potential.deadlock.during.service.init.message.write=Не выполняйте операции записи во время инициализации сервиса {0}
inspection.presentation.annotation.display.name=Некорректный путь к иконке в @Presentation
inspection.product.modules.xml.display.name=Валидность Product-modules.xml
inspection.psi.element.concatenation.display.name=Некорректное использование строкового представления PsiElement для создания нового выражения
inspection.quick.fix.get.family.name.violation.display.name=Реализация getFamilyName() в QuickFix не должна зависеть от конкретного контекста
inspection.renamer.dialog.description=<html>Переименовать также файл описания инспекции и изменить короткое имя?<br/><b>Внимание\: это может нарушить существующие файлы конфигурации инспекций и комментарии подавления.</b></html>
inspection.renamer.dialog.title=Переименовать файл описания инспекции и изменить короткое имя
inspection.renamer.entity.name=элемент
inspection.renamer.option.name=Переименовать файл описания инспекции и изменить короткое имя
inspection.serializable.constructor.message=Нестандартный конструктор должен быть аннотирован @PropertyMapping
inspection.serializable.ctor.display.name=Нестандартный конструктор в сериализуемом классе
inspection.simplifiable.service.retrieving.can.be.replaced.with=Может быть заменено вызовом ''{0}.{1}()''
inspection.simplifiable.service.retrieving.display.name=Упрощаемое получение сервиса
inspection.simplifiable.service.retrieving.replace.with=Заменить на вызов ''{0}.{1}()''
inspection.stateful.ep.display.name=Stateful расширение
inspection.threading.concurrency.display.name=Проблемы с потоками и параллельным выполнением
inspection.threading.concurrency.option.check.missing.annotations.methods=Проверять отсутствующие аннотации для public методов
inspection.threading.concurrency.option.group.inside.requires.edt=Проверки внутри @RequiresEdt\:
inspection.threading.concurrency.option.group.inside.requires.edt.check.requires.read.lock=@RequiresReadLock
inspection.threading.concurrency.option.group.inside.requires.edt.check.requires.write.lock=@RequiresWriteLock
inspection.threading.concurrency.violation.call.inside.method=Метод с аннотацией ''@{0}'' не должен вызываться из метода с аннотацией ''@{1}''
inspection.threading.concurrency.violation.unannotated.method.contains.call=Неаннотированный метод вызывает метод с аннотацией ''@{0}''
inspection.threading.concurrency.violation.unannotated.method.contains.call.multiple.annotations=Неаннотированный метод вызывает метод с многопоточными аннотациями
inspection.token.set.in.parser.definition=TokenSet в ParserDefinition ссылается на неплатформенный класс
inspection.token.set.in.parser.definition.display.name=Неплатформенный TokenSet объявлен в ParserDefinition
inspection.u.element.as.psi.display.name=Использование UElement как PsiElement
inspection.uast.hinted.visitor.adapter.hints.missing.hint=''{0}'' не используется, так как ''{1}'' не предоставлен в подсказках адаптера
inspection.uast.hinted.visitor.adapter.hints.problem.display.name=Проблемы с подсказками 'UastHintedVisitorAdapter'
inspection.uast.hinted.visitor.adapter.hints.redundant.hint=''{0}'' предоставлен в подсказках, но visitor его не посещает
inspection.undesirable.class.usage.display.name=Использование нежелательного класса
inspection.unknown.id.in.meta.information.name=Неизвестный ID проверки в метаинформации
inspection.unsafe.return.statement.visitor.display.name=Небезопасный visitor оператора return
inspection.unsafe.vfs.recursion.display.name=Небезопасная рекурсия VFS
inspection.use.DPI.aware.borders.display.name=Использовать DPI-aware границы
inspection.use.DPI.aware.insets.display.name=Использовать DPI-aware отступы
inspection.use.JB.color.display.name=Использовать Darcula-aware JBColor
inspection.use.plugin.id.equals.display.name=Использовать 'PluginId\#equals(Object)'
inspection.use.primitive.types.equals.display.name=Использование 'PsiType\#equals(Object)' с примитивными типами
inspection.use.virtual.file.equals.display.name=Использовать 'VirtualFile\#equals(Object)'
inspections.IncorrectParentDisposableInspection.do.not.use.as.disposable=Не используйте {0} как disposable объект в коде плагина
inspections.IncorrectParentDisposableInspection.documentation.link.title=Выбор родительского disposable
inspections.action.update.thread.display.name=Отсутствует ActionUpdateThread
inspections.action.update.thread.message=Переопределите 'getActionUpdateThread' и выберите 'EDT' или 'BGT'
inspections.application.service.as.static.final.field.message=Сервис приложения не должен присваиваться static final полю
inspections.application.service.as.static.final.field.or.property.display.name=Сервис приложения присвоен static final полю или неизменяемому свойству
inspections.awt.color.used=Используется 'java.awt.Color' вместо 'JBColor'
inspections.awt.color.used.fix.use.jb.color.constant.family.name=Преобразовать в константу 'JBColor'
inspections.awt.color.used.fix.use.jb.color.fix.family.name=Преобразовать в 'JBColor'
inspections.calling.method.should.be.rbc.annotated=Вызывающий метод должен быть аннотирован @RequiresBlockingContext
inspections.calling.method.should.be.rbc.annotated.annotate.fix=Аннотировать вызывающий метод '@RequiresBlockingContext'
inspections.calling.method.should.be.rbc.annotated.message=Вызывающий метод должен быть аннотирован '@RequiresBlockingContext'
inspections.component.not.registered.message={0} не зарегистрирован в plugin.xml
inspections.component.not.registered.name=Компонент/действие не зарегистрировано
inspections.component.not.registered.option.check.actions=Проверять действия
inspections.component.not.registered.option.ignore.non.public=Игнорировать не public классы
inspections.component.not.registered.quickfix.error=Невозможно зарегистрировать {0}
inspections.component.not.registered.quickfix.family=Зарегистрировать {0}
inspections.component.not.registered.quickfix.name=Зарегистрировать {0}
inspections.component.postfix.template.not.found.description.name=Проверка описания постфиксного шаблона
inspections.file.equals.method=Не используйте File.equals/hashCode/compareTo, так как они регистронезависимы на macOS. Используйте FileUtil.filesEquals/fileHashCode/compareFiles.
inspections.group.code=Код
inspections.group.description.file=Файл описания
inspections.group.descriptor=Дескриптор плагина
inspections.group.name=Plugin DevKit
inspections.group.path=Plugin DevKit
inspections.incorrect.cancellation.exception.handling.display.name=Некорректная обработка исключения отмены
inspections.incorrect.cancellation.exception.handling.name.logged=''{0}'' не должно логоваться
inspections.incorrect.cancellation.exception.handling.name.not.rethrown=''{0}'' должно быть переброшено
inspections.incorrect.cancellation.exception.inheritor.handling.name.logged=Наследник ''{0}'' не должен логоваться
inspections.incorrect.cancellation.exception.inheritor.handling.name.not.rethrown=Наследник ''{0}'' должен быть переброшен
inspections.incorrect.implicit.cancellation.exception.handling.name.logged=''{0}'' не должно логоваться. Оно выбрасывается ''{1}()''
inspections.incorrect.implicit.cancellation.exception.handling.name.not.rethrown=''{0}'' должно быть переброшено. Оно выбрасывается ''{1}()''
inspections.incorrect.implicit.cancellation.exception.inheritor.handling.name.logged=Наследник ''{0}'' не должен логоваться. Он выбрасывается ''{1}()''
inspections.incorrect.implicit.cancellation.exception.inheritor.handling.name.not.rethrown=Наследник ''{0}'' должен быть переброшен. Он выбрасывается ''{1}()''
inspections.inspection.description.optional.short.name=Проверка отсутствия описания{0}
inspections.inspection.mapping.consistency.specify.bundle=Должен быть указан bundle
inspections.inspection.mapping.consistency.specify.displayName.or.key=Должен быть указан displayName или key
inspections.inspection.mapping.consistency.specify.groupName.or.groupKey=Должен быть указан groupName или groupKey
inspections.intention.description.no.before.after.template=Intention должен иметь 'before.*.template' и 'after.*.template' рядом с 'description.html'
inspections.intention.description.not.found=Intention не имеет описания
inspections.jcomponent.data.provider.display.name=JComponent должен использовать UiDataProvider
inspections.jcomponent.data.provider.use.uidataprovider.instead.of.dataprovider=Используйте UiDataProvider вместо DataProvider
inspections.leakable.map.key.name=Ключ Map может привести к утечке памяти
inspections.leakable.map.key.quick.fix.name=Использовать ''{0}'' для параметризации
inspections.leakable.map.key.text=Рассмотрите использование ''String'' вместо ''{0}'' в качестве ключа Map
inspections.listener.implementation.must.not.be.disposable.name=Реализация слушателя реализует 'Disposable'
inspections.listener.implementation.must.not.implement.disposable=Реализация слушателя не должна реализовывать 'Disposable'
inspections.meta.information.json.schema.display.name=Метаинформация IntelliJ инспекций
inspections.meta.information.unknown.inspection.id=Неизвестный ID инспекции ''{0}''
inspections.missing.recent.api.class.message=''{0}'' доступен только с {1}, но модуль нацелен на {2}. Это может вызвать проблемы совместимости с ИСР до {1}. Обратите внимание, что в предыдущих версиях ИСР этот тип мог иметь другое полное имя.
inspections.missing.recent.api.common.message=''{0}'' доступен только с {1}, но модуль нацелен на {2}. Это может вызвать проблемы совместимости с ИСР до {1}.
inspections.missing.recent.api.default.constructor.message=Конструктор по умолчанию для ''{0}'' доступен только с {1}, но модуль нацелен на {2}. Это может вызвать проблемы совместимости с ИСР до {1}.
inspections.missing.recent.api.field.message=''{0}'' доступен только с {1}, но модуль нацелен на {2}. Это может вызвать проблемы совместимости с ИСР до {1}. Обратите внимание, что в предыдущих версиях ИСР это поле могло иметь другую полную сигнатуру.
inspections.missing.recent.api.method.message=''{0}'' доступен только с {1}, но модуль нацелен на {2}. Это может вызвать проблемы совместимости с ИСР до {1}. Обратите внимание, что в предыдущих версиях ИСР этот метод мог иметь другую полную сигнатуру.
inspections.missing.recent.api.overriding=Переопределение ''{0}'' доступно только с {1}, но модуль нацелен на {2}. Это может вызвать проблемы совместимости с ИСР до {1}. Обратите внимание, что в предыдущих версиях ИСР это переопределение могло иметь другую сигнатуру.
inspections.missing.recent.api.settings.invalid.build.number=Неверный номер сборки\: {0}
inspections.missing.recent.api.settings.range=Диапазон совместимости плагина
inspections.missing.recent.api.settings.since=С
inspections.missing.recent.api.settings.until=До
inspections.missing.recent.api.since.until.range.all.builds=Все сборки
inspections.non.default.warning.and.suffix.message={0} не должен иметь конструктор с параметром {1}
inspections.non.default.warning.suffix.module=(кроме модуля)
inspections.non.default.warning.suffix.project=(кроме проекта)
inspections.non.default.warning.suffix.project.or.module=(кроме проекта или модуля, если запрошено на соответствующем уровне)
inspections.non.default.warning.type.extension=расширение
inspections.non.default.warning.type.service=сервис
inspections.plugin.xml.ComponentModuleRegistrationChecker.element.registered.wrong.module=Элемент должен быть зарегистрирован в модуле ''{0}'', где определен его класс ''{1}''
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.family.name=Переместить регистрацию в правильный модуль
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.name=Переместить регистрацию в {0}
inspections.plugin.xml.action.class.required.with.use.shortcut.of='class' должен быть указан с 'use-shortcut-of'
inspections.plugin.xml.action.group.id.required=Должен быть указан 'id'
inspections.plugin.xml.action.must.override.method.with.use.shortcut.of=Должен переопределять {0} с ''use-shortcut-of''
inspections.plugin.xml.add.ignored.class.title=Укажите класс для игнорирования
inspections.plugin.xml.add.vendor.tag=Добавить <vendor>
inspections.plugin.xml.add.version.tag=Добавить <version>
inspections.plugin.xml.anchor.must.have.relative-to-action='anchor' должен быть указан с 'relative-to-action'
inspections.plugin.xml.attribute.not.used.anymore=Атрибут ''{0}'' больше не используется
inspections.plugin.xml.change.until.build.family.name=Исправить атрибут 'until-build'
inspections.plugin.xml.change.until.build.name=Изменить ''until-build'' на ''{0}''
inspections.plugin.xml.component.interface.class.redundant=Избыточный атрибут 'interface-class'
inspections.plugin.xml.dependency.class.located.in.wrong.package=Класс ''{0}'' должен находиться в пакете ''{1}''
inspections.plugin.xml.dependency.descriptor.at.least.one.dependency=Должна быть определена хотя бы одна зависимость <module> или <plugin>
inspections.plugin.xml.dependency.descriptor.cannot.use.depends=Нельзя использовать <depends> вместе с <dependencies>
inspections.plugin.xml.dependency.specify.config.file=Должен быть указан 'config-file'
inspections.plugin.xml.dependency.superfluous.optional=Избыточное объявление
inspections.plugin.xml.deprecated=Устарело
inspections.plugin.xml.deprecated.attribute=Устаревший атрибут ''{0}''
inspections.plugin.xml.deprecated.ep=Устаревшая точка расширения ''{0}''
inspections.plugin.xml.deprecated.ep.marked.for.removal=Точка расширения ''{0}'' помечена к удалению
inspections.plugin.xml.deprecated.ep.marked.for.removal.in.version=Точка расширения ''{0}'' помечена к удалению в версии ''{1}''
inspections.plugin.xml.deprecated.ep.use.replacement=Устаревшая точка расширения ''{0}'', используйте ''{1}''
inspections.plugin.xml.deprecated.helpset=Helpset больше не используется, используйте 'com.intellij.openapi.help.WebHelpProvider'
inspections.plugin.xml.do.not.use.template.text=Не используйте шаблонный текст ''{0}''
inspections.plugin.xml.duplicated.dependency=Дублирующийся файл конфигурации зависимости ''{0}''
inspections.plugin.xml.dynamic.plugin.analyze.extension.point={0} для ''{1}''
inspections.plugin.xml.dynamic.plugin.component.usage=Плагин стал не динамическим из-за использования компонентов
inspections.plugin.xml.dynamic.plugin.component.usage.docs.link.title=Руководство по миграции
inspections.plugin.xml.dynamic.plugin.explicit.non.dynamic.extension.point=Явно не динамическая точка расширения ''{0}''
inspections.plugin.xml.dynamic.plugin.extension.point=Не динамическая точка расширения ''{0}''
inspections.plugin.xml.dynamic.plugin.id.required.for.group=Должен быть указан 'id' для <group>
inspections.plugin.xml.dynamic.plugin.option.highlight.usages.ep=Подсвечивать использование не динамических точек расширения
inspections.plugin.xml.dynamic.plugin.usage.of.non.dynamic.extension.point=Использование не динамической точки расширения ''{0}''
inspections.plugin.xml.ep.both.beanClass.and.interface='<extensionPoint>' не должен одновременно указывать атрибуты 'interface' и 'beanClass'
inspections.plugin.xml.ep.both.name.and.qualifiedName='<extensionPoint>' не должен одновременно указывать атрибуты 'name' и 'qualifiedName'
inspections.plugin.xml.ep.doesnt.have.with='<extensionPoint>' не имеет тег '<with>' для указания типов полей класса
inspections.plugin.xml.ep.missing.beanClass.and.interface='<extensionPoint>' должен указывать атрибут 'interface' или 'beanClass'
inspections.plugin.xml.ep.missing.name.and.qualifiedName='<extensionPoint>' должен указывать атрибут 'name' или 'qualifiedName'
inspections.plugin.xml.ep.qualifiedName.superfluous=Избыточное объявление через 'qualifiedName'
inspections.plugin.xml.ep.qualifiedName.superfluous.fix=Объявить через 'name'
inspections.plugin.xml.fix.extension.point.add.with.tag=Добавить тег <with>
inspections.plugin.xml.ignore.classes.title=Список игнорируемых классов для проверки регистрации\:
inspections.plugin.xml.inner.class.must.be.separated.with.dollar=Внутренние классы должны разделяться '$'
inspections.plugin.xml.invalid.build.number=<html>Неверный номер сборки ''{0}'' (<a href\="https\://plugins.jetbrains.com/docs/intellij/build-number-ranges.html?from\=DevkitPluginXmlInspection">документация</a>)</html>
inspections.plugin.xml.invalid.ep.name=имя
inspections.plugin.xml.invalid.ep.name.description=Неверное {0} точки расширения ''{1}'', может содержать только латинские буквы, цифры и точки, не может начинаться/заканчиваться точкой, каждый сегмент должен начинаться с маленькой буквы, последний сегмент не должен повторять предыдущие
inspections.plugin.xml.invalid.ep.qualifiedName=полное имя
inspections.plugin.xml.invalid.order.attribute=Неверное значение атрибута 'order'
inspections.plugin.xml.jetbrains.only.api=Использование API, зарезервированного для внутреннего использования JetBrains
inspections.plugin.xml.listener.does.not.inherit=''{0}'' не наследуется от ''{1}''
inspections.plugin.xml.marked.for.removal.attribute=Атрибут ''{0}'' помечен к удалению
inspections.plugin.xml.module.descriptor.at.least.one.dependency=Должна быть определена хотя бы одна запись <module>
inspections.plugin.xml.must.not.contain.template.text=Не должен содержать шаблонный текст ''{0}''
inspections.plugin.xml.must.use.after.before.with.relative-to-action=''{0}''|''{1}'' должны использоваться с ''relative-to-action''
inspections.plugin.xml.no.need.to.specify.itnReporter=Исключения в плагинах, разработанных JetBrains, автоматически отправляются через ITNReporter, нет необходимости указывать явно
inspections.plugin.xml.no.plugin.icon.svg.file=<html>Плагин должен предоставить ''{0}'' (<a href\="https\://plugins.jetbrains.com/docs/intellij/plugin-icon-file.html?from\=PluginXmlPluginLogoInspection">документация</a>)</html>
inspections.plugin.xml.plugin.jetbrains.no.change.notes=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, не должны указывать change-notes
inspections.plugin.xml.plugin.jetbrains.no.generic.plugin.url=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, не должны указывать общий url плагина
inspections.plugin.xml.plugin.jetbrains.no.idea.version=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, не должны указывать idea-version, так как он генерируется автоматически скриптом сборки
inspections.plugin.xml.plugin.jetbrains.no.version=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, не должны указывать версию
inspections.plugin.xml.plugin.jetbrains.vendor.no.email=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, не должны указывать email
inspections.plugin.xml.plugin.jetbrains.vendor.no.url=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, не должны указывать ''{0}'' как url
inspections.plugin.xml.plugin.modules.description=Каждая строка - это список модулей через запятую, включенных в один плагин
inspections.plugin.xml.plugin.modules.label=Модули для мультимодульных плагинов\:
inspections.plugin.xml.plugin.should.have.jetbrains.vendor=Плагины, разрабатываемые как часть проекта IntelliJ ИСРA, должны указывать 'JetBrains' как vendor
inspections.plugin.xml.product.descriptor.invalid.date=Дата должна быть целым числом YYYYMMDD или плейсхолдером (например, __DATE__)
inspections.plugin.xml.product.descriptor.invalid.version=Версия должна быть целым числом или плейсхолдером (например, __VERSION__)
inspections.plugin.xml.service.interface.class.redundant=Избыточный атрибут 'serviceInterface'
inspections.plugin.xml.since.build.could.not.determine.platform.version=Не удалось определить целевую версию платформы, проверьте настройки проекта
inspections.plugin.xml.since.build.could.not.locate.main.descriptor=Не удалось найти основной файл plugin.xml для определения требуемого <idea-version> 'since-build'
inspections.plugin.xml.since.build.listeners.not.available=Функциональность доступна только в версии платформы {0} или выше, но указанная платформа ''since-build'' - ''{1}''
inspections.plugin.xml.since.build.listeners.os.attribute=Атрибут ''os'' доступен только в версии платформы {0} или выше, но указанная платформа ''since-build'' - ''{1}''
inspections.plugin.xml.since.build.must.be.specified=Должен быть указан <idea-version> 'since-build'
inspections.plugin.xml.skipForDefaultProject.deprecated='skipForDefaultProject' устарел; по умолчанию компоненты проекта не загружаются в default project
inspections.plugin.xml.specify.defaultExtensionNs.explicitly=Явно укажите defaultExtensionNs\="{0}"
inspections.plugin.xml.synonym.both.key.and.text='<synonym>' не должен одновременно указывать атрибуты 'key' и 'text'
inspections.plugin.xml.synonym.missing.key.and.text='<synonym>' должен указывать атрибут 'key' или 'text'
inspections.plugin.xml.third.party.plugins.must.not.use.itnReporter='com.intellij.diagnostic.ITNReporter' сообщает о внутренних ошибках обработки JetBrains и не должен использоваться в сторонних плагинах
inspections.plugin.xml.until.build.misleading.plain.number=Простое число в атрибуте ''until-build'' может вводить в заблуждение. ''{0}'' означает то же самое, что и ''{0}.0'', поэтому плагин не совместим со сборками {0}.*. Лучше указать ''{1}''.
inspections.plugin.xml.until.build.must.be.greater.than.since.build="until-build" должен быть больше чем "since-build"
inspections.plugin.xml.until.build.use.asterisk.instead.of.big.number=Не используйте ''{0}'' в ''until-build'', используйте ''*''
inspections.plugin.xml.usage.of.experimental.api=Использование API, помеченного @{0}. Такой API может быть изменен или удален в будущих версиях ИСР, что вызовет проблемы совместимости.
inspections.plugin.xml.usage.of.internal.api=Использование API, помеченного @{0}. Такой API не должен использоваться вне проекта IntelliJ ИСРA.
inspections.plugin.xml.usage.of.obsolete.api=Использование API, помеченного @{0}. Такой API не должен использоваться в новом коде.
inspections.plugin.xml.use.defaultExtensionNs=Используйте defaultExtensionNs
inspections.plugin.xml.value.exceeds.max.length=Значение превышает максимальную длину {0}
inspections.plugin.xml.value.must.be.https.or.http.link.to.website=Должна быть действительная ссылка на веб-сайт, использующая протокол https\:// или http\://
inspections.plugin.xml.value.must.have.minimum.length=Значение должно иметь минимальную длину {0}
inspections.plugin.xml.vendor.must.be.specified=Должен быть указан '<vendor>'
inspections.plugin.xml.vendor.specify.jetbrains=Укажите JetBrains как vendor
inspections.plugin.xml.version.must.be.specified=Должен быть указан '<version>'
inspections.postfix.description.no.before.after.template=Постфиксный шаблон должен иметь 'before.*.template' и 'after.*.template' рядом с 'description.html'
inspections.postfix.description.not.found=Постфиксный шаблон не имеет описания
inspections.presentation.cannot.resolve.icon=Не удаётся разрешить иконку ''{0}''
inspections.psi.element.concat.add.get.text.family.name=Вызвать метод получения текстового представления
inspections.psi.element.concat.add.get.text.name=Использовать вызов ''{0}''
inspections.psi.element.concat.psi.element=Подозрительное преобразование PsiElement в строку
inspections.psi.element.concat.psi.type=Подозрительное преобразование PsiType в строку
inspections.quick.fix.family.name=Реализация getFamilyName() в QuickFix не должна зависеть от конкретного контекста
inspections.registration.problems.abstract=Класс компонента плагина не должен быть abstract
inspections.registration.problems.component.duplicate.interface=Не допускается несколько компонентов с одинаковым 'interface-class'
inspections.registration.problems.component.incompatible.interface=Класс компонента не может быть присвоен интерфейсу ''{0}''
inspections.registration.problems.incompatible.message=Согласно регистрации в plugin.xml, класс должен расширять ''{0}''
inspections.registration.problems.missing.noarg.ctor=Класс действия должен иметь конструктор без аргументов
inspections.registration.problems.name=Несоответствие типа компонента
inspections.registration.problems.quickfix.create.constructor=Конструктор плагина без аргументов
inspections.registration.problems.quickfix.read-only=''{0}'' является классом только для чтения
inspections.stateful.extension.point.do.not.use.in.extension=Не используйте {0} как поле в расширении
inspections.stateful.extension.point.do.not.use.in.quick.fix=Не используйте {0} как поле в quick fix
inspections.stateful.extension.point.leak.psi.element=Потенциальная утечка памяти\: не храните PsiElement, используйте SmartPsiElementPointer
inspections.stateful.extension.point.leak.psi.element.quick.fix=См. также LocalQuickFixOnPsiElement
inspections.static.initialization.in.extensions.message=Реализации точек расширения не должны использовать static инициализацию
inspections.static.initialization.in.extensions.name=Static инициализация в реализации точки расширения
inspections.statistics.collector.not.registered.message=Сборщик статистики не зарегистрирован в plugin.xml
inspections.statistics.collector.not.registered.name=Сборщик статистики не зарегистрирован
inspections.undesirable.class.use.instead=Используйте ''{0}'' вместо этого
inspections.unresolved.plugin.config.reference=Неразрешённая ссылка конфигурации плагина
inspections.unsafe.return.insert.family.name=Пропустить анонимные/локальные классы
inspections.unsafe.return.insert.visit.class.method=Вставить метод visitClass
inspections.unsafe.return.insert.visit.lambda.expression=Вставить метод visitLambdaExpression
inspections.unsafe.return.insert.visit.lambda.expression.and.class.methods=Вставить методы visitLambdaExpression/visitClass
inspections.unsafe.return.message=Рекурсивный visitor с 'visitReturnStatement' должен обрабатывать анонимные/локальные классы ('visitClass') и лямбда-выражения ('visitLambdaExpression')
inspections.unsafe.vfs.recursion='VirtualFile.getChildren()' вызывается из рекурсивного метода
inspections.unspecified.actions.place.popup.menu=Неуказанное место действия в popup menu
inspections.unspecified.actions.place.toolbar=Неуказанное место действия на панели инструментов
inspections.usage.uelement.as.psi=Использование UElement как PsiElement не рекомендуется
inspections.use.dpi.aware.empty.border.can.be.simplified=Создание пустой границы можно упростить
inspections.use.dpi.aware.empty.border.convert.fix.name=Преобразовать в 'JBUI.Borders.empty(…)'
inspections.use.dpi.aware.empty.border.not.dpi.aware='EmptyBorder' не учитывает DPI
inspections.use.dpi.aware.empty.border.simplify.fix.name=Упростить
inspections.use.dpi.aware.insets.can.be.simplified=Создание Insets можно упростить
inspections.use.dpi.aware.insets.convert.fix.name=Преобразовать в 'JBUI.insets(...)'
inspections.use.dpi.aware.insets.not.dpi.aware='Insets' не учитывает DPI
inspections.use.dpi.aware.insets.simplify.fix.name=Упростить
inspections.use.equals.description=Следует сравнивать экземпляры ''{0}'' на равенство, а не на идентичность
inspections.use.equals.fix.replace.equality.with.equals.family.name=Заменить оператор равенства на 'equals()'
inspections.use.equals.fix.replace.equality.with.equals.name=Заменить ''{0}'' на ''equals()''
inspections.use.equals.fix.replace.equality.with.not.equals.name=Заменить ''{0}'' на ''\!equals()''
inspections.use.gray.awt.color.used.name='java.awt.Color' используется для серого цвета
inspections.use.gray.fix.convert.family.name=Преобразовать в 'Gray'
inspections.use.gray.fix.convert.name=Преобразовать в ''Gray._{0}''
inspections.wrap.application.service.in.supplier.quick.fix.message=Обернуть сервис приложения в 'java.util.function.Supplier'
intellij.api.annotations.update.task.title=Обновление аннотаций IntelliJ API {0}
invalid.order.attribute.part=Недопустимая часть значения атрибута ''order''\: ''{0}'', должно быть ''first'', ''last'', ''before <id>'' или ''after <id>''
line.marker.related.property.description=Связанное свойство
line.marker.related.property.popup.title=Связанное свойство
line.marker.related.property.tooltip=Связанное свойство
manifest.selection=Выбранный {0} будет включен в результирующую сборку
manifest.settings=Настройки манифеста
manifest.use.user.defined=Использовать пользовательский манифест\:
message.bundle.convert.advanced.setting.id.cannot.resolve=Не удаётся разрешить ID расширенной настройки ''{0}''
message.bundle.convert.toolwindow.id.cannot.resolve=Не удаётся разрешить ID окна инструментов ''{0}''
module.builder.github.template.link=Полнофункциональный шаблон GitHub
module.builder.how.to.link=Как создавать плагины для ИСР на базе IntelliJ
module.builder.scala.github.template.link=Как разрабатывать плагины с помощью Scala и SBT
module.builder.title=ИСР Plugin
module.builder.type=Тип\:
module.builder.type.plugin=Плагин
module.builder.type.theme=Тема
module.description=Модули плагинов используются для разработки плагинов для ИСР на базе <b>IntelliJ Platform</b>.<br>Они предоставляют <b>IntelliJ Platform Plugin SDK</b> и <b>конфигурации запуска</b> для запуска и отладки плагинов в ИСР.
module.title=IntelliJ Platform Plugin
module.wizard.devkit.simple.plugin.label=<html>Этот тип проекта рекомендуется для простых плагинов (например, пользовательских тем UI).<br>Для более сложных плагинов <a href\="https\://plugins.jetbrains.com/docs/intellij/developing-plugins.html?from\=DevkitPluginModuleWizard">рекомендуется</a> использовать проект на основе Gradle.
module.wizard.gradle.plugin.xml.template.display.name=plugin.xml в проекте на основе Gradle
new.action.action.name=Создание нового действия\: {0}.{1}
new.action.add.to.group=Добавить в группу
new.action.cannot.create.class=Не удаётся создать класс действия
new.action.class.name=Имя класса [&C]\:
new.action.description=Описание [&D]\:
new.action.dialog.title=Новое действие
new.action.error=Не удаётся создать действие
new.action.group.actions=Действия [&I]\:
new.action.group.anchor=Привязка\:
new.action.group.anchor.=Последний [&L]
new.action.group.anchor.after=После [&T]
new.action.group.anchor.before=Перед [&B]
new.action.group.anchor.first=Первый [&F]
new.action.group.groups=Группы [&G]\:
new.action.id=ID действия [&A]\:
new.action.invalid.class.name=Имя класса действия не является допустимым полным именем Java
new.action.invalid.id=ID действия не может быть пустым
new.action.invalid.name=Имя действия не может быть пустым
new.action.keyboard.clear=X
new.action.keyboard.clear.tooltip=Очистить сочетание клавиш
new.action.keyboard.first=Первое\:
new.action.keyboard.second=Второе\:
new.action.keyboard.shortcuts=Сочетания клавиш
new.action.text=Имя [&N]\:
new.menu.action.text=Действие
new.menu.application.component.text=Компонент приложения
new.menu.module.component.text=Компонент модуля
new.menu.project.component.text=Компонент проекта
notification.group.devkit.deployment=Развертывание плагина завершено
notification.group.testdata=Файл тестовых данных не найден
notification.message.duplicate.packages.file=Слишком много файлов списка пакетов в проекте\:\n{0}
plugin.descriptor=Дескриптор плагина IntelliJ Platform
plugin.descriptor.chooser.cannot.find=Не удаётся найти дескриптор плагина
plugin.descriptor.chooser.popup.title=Выберите дескриптор плагина
plugin.xml.action.cannot.resolve=Не удаётся разрешить ID действия ''{0}''
plugin.xml.convert.action.or.group.cannot.resolve=Не удаётся разрешить {0} ''{1}''
plugin.xml.convert.action.or.group.invalid.name=<invalid name>
plugin.xml.convert.action.or.group.type.action=действие
plugin.xml.convert.action.or.group.type.action.or.group=действие или группу
plugin.xml.convert.action.or.group.type.group=группу
plugin.xml.convert.enum.cannot.resolve=Не удаётся разрешить ''{0}'' в {1}
plugin.xml.convert.extension.order.cannot.resolve=Не удаётся разрешить расширение ''{0}'' {0}
plugin.xml.convert.extension.property.cannot.resolve=Не удаётся разрешить свойство точки расширения ''{0}''
plugin.xml.convert.keymap.cannot.resolve=Не удаётся разрешить раскладку клавиатуры ''{0}''
plugin.xml.convert.language.id.any.language.display.name=<any language>
plugin.xml.convert.language.id.cannot.resolve=Не удаётся разрешить язык с ID ''''{0}''''
plugin.xml.convert.module.descriptor.name=Не удаётся разрешить дескриптор модуля ''{0}'' в исходных корнях модуля ''{1}''
plugin.xml.convert.property.bundle.cannot.resolve=Не удаётся разрешить пакет свойств
plugin.xml.scopes.display.name=Файлы дескрипторов плагинов
plugin.xml.scopes.production.display.name=Все файлы дескрипторов продакшн-плагинов
prepare.for.deployment=Подготовка модуля плагина ''{0}'' к развертыванию
prepare.for.deployment.all=Подготовка всех модулей плагинов к развертыванию
prepare.for.deployment.task=Подготовка модуля плагина ''{0}'' к развертыванию
prepare.for.deployment.task.progress=Выполняется подготовка к развертыванию
program.parameters=Параметры программы [&P]
progress.title.calculate.target.properties.file=Вычисление целевого файла свойств
register.extension.fix.name=Зарегистрировать расширение
register.extension.fix.popup.title=Выберите точку расширения
register.inspection.fix.family.name=Зарегистрировать инспекцию
register.inspection.fix.name=Зарегистрировать инспекцию ''{0}''
registry.properties.annotator.add.description.family.name=Добавить ключ описания
registry.properties.annotator.add.description.text=Добавить ключ описания для ''{0}''
registry.properties.annotator.key.no.description.key=Ключ ''{0}'' не имеет ключа описания
registry.properties.annotator.plugin.keys.use.ep=Ключи, специфичные для плагина, должны регистрироваться через точку расширения 'com.intellij.registryKey'
registry.properties.annotator.show.ep.family.name=Показать объявление точки расширения
registry.properties.annotator.show.ep.message=Скопируйте это объявление в XML-дескриптор вашего плагина
registry.properties.annotator.show.ep.name=Показать объявление точки расширения для ''{0}''
registry.properties.annotator.show.ep.title=Объявление точки расширения
run.configuration.no.module.specified=Модуль плагина не указан для конфигурации
run.configuration.title=Plugin
run.configuration.type.description=Песочница плагина
sandbox.home=Домашняя директория песочницы
sandbox.home.label=Домашняя директория песочницы\:
sandbox.no.configured=Песочница не настроена для IntelliJ Platform Plugin SDK
sandbox.no.sdk=Пожалуйста, настройте SDK
sandbox.purpose=Выберите папку для размещения конфигурации, системных файлов и плагинов целевой ИСР
sandbox.specification=Пожалуйста, настройте песочницу
saved.message={0, choice, 1\#Zip|2\#JAR} файл модуля ''{1}'' сохранён в {2}
saved.message.common={0} будет сохранён в выбранной директории
sdk.from.sources.scanning.roots=Сканирование корней
sdk.no.idea.sdk.version.found=Не удалось определить требуемую версию JDK для IntelliJ Platform Plugin SDK
sdk.no.java.sdk.for.idea.sdk.found=Не найдена подходящая версия Java SDK. Помимо IntelliJ Platform Plugin SDK требуется JDK той же версии Java ({0})
sdk.no.java.sdk.for.idea.sdk.found.title=Java SDK не найден
sdk.no.specified=SDK не указан для модуля плагина ''{0}''
sdk.select.java.sdk=Выберите Java SDK для использования с IntelliJ Platform Plugin SDK
sdk.select.java.sdk.label=Внутренняя Java платформа\:
sdk.select.java.sdk.title=Выбор внутренней Java платформы
sdk.title=IntelliJ Platform Plugin SDK
sdk.type.incorrect=Неверный тип SDK для модуля плагина ''{0}''
sdk.type.incorrect.common=Неверный тип SDK для модуля плагина
select.plugin.module.to.patch=Выберите модуль плагина для патча
select.plugin.modules.description=Выберите модули для подготовки к развертыванию
select.plugin.modules.title=Выбор модулей
select.target.location.of.description=Выберите целевое расположение для {0}
structure.sort.alphabetically.in.groups=Сортировать по алфавиту в группах
structure.sort.alphabetically.in.groups.description=Сортировать по алфавиту в группах
success.deployment.message=Подготовка модуля плагина ''{0}'' к развертыванию успешно завершена
success.deployment.message.all=Подготовка всех плагинов к развертыванию успешно завершена
suggest.to.delete=Удалить ''{0}''?
testdata.confirm.create.missing.files.dialog.message=Будут созданы следующие файлы testdata\:\n{0}
testdata.create.dialog.title=Создание файлов Testdata
testdata.create.missing.files=Создать отсутствующие файлы
testdata.file.doesn.not.exist=<html>Указанный файл testdata {0} не существует. Создать его?</html>
testdata.goto.test.data.action.text=Перейти к {0}
testdata.notification.no.test.datafiles.content=Не найдены файлы тестовых данных для класса
testdata.notification.no.test.datafiles.title=Файлы тестовых данных не найдены
testdata.popup.navigation.title=Тестовые данные
testdata.progress.text.searching.for.test.data.files=Поиск файлов тестовых данных для ''{0}''...
testdata.related.navigation.group=Тестовые данные
testdata.related.navigation.title=Тестовые данные
testdata.searching=Поиск файлов тестовых данных
update.ide.from.sources=Обновить ИСР из исходников [&I]
update.ide.from.sources.option=Из исходников
vm.parameters=Параметры VM [&V]