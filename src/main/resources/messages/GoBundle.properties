action.DlvDumpAction.text=Дамп горутин
action.DlvEnableStringViewAction.text=Включить просмотр String()
action.DlvFilterGoroutinesAction.description=Показать только стеки, содержащие указанную строку
action.DlvFilterGoroutinesAction.task.name=Фильтрация стеков
action.DlvFilterGoroutinesAction.text=Фильтр
action.DlvResetHiddenGoroutinesAction.description=Сбросить скрытые горутины
action.DlvResetHiddenGoroutinesAction.text=Сбросить скрытые горутины
action.DlvRewindAction.description=Выполнить программу в обратном направлении до предыдущей точки останова
action.DlvRewindAction.text=Назад
action.DlvShowPointerAddressesToggleAction.text=Показать адреса указателей
action.DlvShowTypesToggleAction.text=Показать типы
action.DlvToggleThreadsAction.description=Показать потоки
action.DlvToggleThreadsAction.text=Показать потоки
action.Go.NewGoFile.description=Создать новый файл Go
action.Go.NewGoFile.text=Go файл
action.GoAddContentRootFromGopath.description=Добавить выбранную директорию в текущий проект
action.GoAddContentRootFromGopath.text=Добавить директорию в текущий проект
action.GoAddMethodToInterfaceAction.description=Добавить метод в интерфейс и все его реализации
action.GoAddMethodToInterfaceAction.text=Добавить метод…
action.GoCallHierarchyPopupMenu.BaseOnThisDeclaration.text=На основе этого объявления
action.GoCoreDumpAction.text=Открыть дамп памяти…
action.GoEditActionsOnSaveAction.description=Редактировать действия, выполняемые при сохранении
action.GoEditActionsOnSaveAction.text=Действия при сохранении…
action.GoEditSettingsAction.description=Редактировать настройки Go
action.GoEditSettingsAction.description.os.specific=Редактировать {0} для Go
action.GoEditSettingsAction.text=Настройки Go…
action.GoEditSettingsAction.text.os.specific=Go {0}…
action.GoEditSettingsAction.text.synonym=Параметры Go…
action.GoFmtFileAction.description=Форматовать выбранный файл с помощью утилиты go fmt
action.GoFmtFileAction.text=Go Fmt файл
action.GoFmtProjectAction.description=Форматовать проект с помощью утилиты go fmt
action.GoFmtProjectAction.text=Go Fmt проект
action.GoGenerateConstructorAction.description=Генерирует функцию-конструктор для структуры
action.GoGenerateConstructorAction.text=Конструктор
action.GoGenerateFileAction.description=Запустить go generate для выбранного файла
action.GoGenerateFileAction.text=Go Generate файл
action.GoGenerateGetterAction.description=Генерирует метод getter для поля
action.GoGenerateGetterAction.text=Getter
action.GoGenerateGetterSetterAction.description=Генерирует методы getter и setter для поля
action.GoGenerateGetterSetterAction.text=Getter и Setter
action.GoGenerateMethodAction.text=Метод
action.GoGenerateSetterAction.description=Генерирует метод setter для поля
action.GoGenerateSetterAction.text=Setter
action.GoGenerateStructFieldsFromJsonAction.description=Генерирует поля структуры из JSON
action.GoGenerateStructFieldsFromJsonAction.text=Поля структуры из JSON
action.GoGenerateTypeFromJsonAction.description=Генерирует тип из JSON
action.GoGenerateTypeFromJsonAction.text=Тип из JSON
action.GoIdeNewProjectAction.text=Проект…
action.GoImportsFileAction.description=Оптимизует импорты для выбранного файла с помощью утилиты goimports
action.GoImportsFileAction.text=Goimports файл
action.GoIntroduceTypeAction.text=Создать тип…
action.GoOpenInPlaygroundAction.description=Открыть код в Go Playground
action.GoOpenInPlaygroundAction.text=Playground
action.GoOpenProjectFromGopath.description=Открыть выбранную директорию как проект
action.GoOpenProjectFromGopath.text=Открыть директорию как проект
action.GoOpenSettings.description=Открыть настройки Go для проекта
action.GoOpenSettings.text=Открыть настройки Go
action.GoRemoveContentRootAction.description=Удалить выбранный корневой каталог из текущего проекта
action.GoRemoveContentRootAction.text=Отсоединить директорию…
action.GoReplayTraceAction.text=Отладить сохранённую трассировку…
action.GoShareInPlaygroundAction.confirmation=Вы хотите загрузить {0} в Go Playground и сделать его публичным?
action.GoShareInPlaygroundAction.description=Поделиться текущим файлом в Go Playground
action.GoShareInPlaygroundAction.empty.id=Playground вернул пустой ID
action.GoShareInPlaygroundAction.error=Не удалось поделиться файлом в Go Playground\: {0}
action.GoShareInPlaygroundAction.notification.copyUrl=Копировать URL в буфер обмена
action.GoShareInPlaygroundAction.notification.text=Файл опубликован в Go Playground\: <a href\="{0}">{0}</a>
action.GoShareInPlaygroundAction.text=Поделиться в Playground
action.GoToggleCachingAction.cachingDisabled=Кэширование плагина Go отключено
action.GoToggleCachingAction.cachingEnabled=Кэширование плагина Go включено
action.GoToggleCachingAction.description=Переключить кэширование в плагине Go
action.GoToggleCachingAction.disableCaching=Отключить кэширование плагина Go
action.GoToggleCachingAction.enableCaching=Включить кэширование плагина Go
action.GoToggleCachingAction.text=Переключить кэширование плагина Go
action.GoVetFileAction.description=Проверить выбранный файл или директорию с помощью утилиты go vet
action.GoVetFileAction.text=Go Vet файл
action.HideGoroutine=Скрыть горутину
action.HideSimilarGoroutines=Скрыть все горутины с одинаковым стеком
action.MergeIdenticalStacktraces.text=Объединить идентичные стеки вызовов
action.Vgo.NewGoModFile.description=Создать файл Go modules
action.Vgo.NewGoModFile.text=Go Modules файл
action.Vgo.NewGoWorkFile.description=Создать файл Go workspace
action.Vgo.NewGoWorkFile.text=Go Workspace файл
action.com.goide.vgo.actions.VgoSyncAction.description=Синхронизовать go модуль
action.com.goide.vgo.actions.VgoSyncAction.text=Синхронизовать Go модуль
action.com.goide.vgo.actions.VgoTidyAction.description=Запустить 'go mod tidy' для модуля
action.com.goide.vgo.actions.VgoTidyAction.text=Go Mod Tidy
action.com.goide.vgo.actions.VgoVendorAction.description=Запустить 'go mod vendor' для модуля
action.com.goide.vgo.actions.VgoVendorAction.text=Go Mod Vendor
action.go.exclude.package.from.import.and.completion=Исключить ''{0}'' из импорта и автодополнения
action.go.fill.paragraph=Заполнить абзац
actions.on.save.gofmt.configure.action.link=Настроить gofmt…
actions.on.save.gofmt.disabled.because.of.conflict.hint.label=Применяется только форматование GoLand;<br><code>gofmt</code> отключен из-за конфликта с наблюдателем файлов "{0}"
actions.on.save.gofmt.disabled.hint.label=Применяется только форматование GoLand; <code>gofmt</code> отключен
actions.on.save.gofmt.enabled.hint.label=Применяется форматование GoLand и <code>gofmt</code>
actions.on.save.imports.configure.action.link=Настроить стиль импортов…
actions.on.save.imports.gofmt.order.hint.label=Импорты отсортированы в порядке <code>gofmt</code>
actions.on.save.imports.goimports.order.hint.label=Импорты отсортированы в порядке <code>goimports</code>
actions.on.save.imports.not.sorted.hint.label=Импорты не отсортированы
advanced.setting.go.automatic.goproxy.switch=Предлагать оптимальный региональный GOPROXY
advanced.setting.go.automatic.goproxy.switch.description=Предлагать оптимальный GOPROXY для вашего региона при необходимости. Это может улучшить скорость загрузки зависимостей Go модулей.
advanced.setting.go.modules.go.list.in.parallel=Оптимизовать производительность 'go list'
advanced.setting.go.modules.go.list.in.parallel.description=Выполнять 'go list' параллельно
advanced.settings.go=Go
code.vision.implement.interface.description=Реализовать определённый интерфейс для выбранной структуры
code.vision.implement.interface.name=Реализовать интерфейс
code.vision.update.all.dependencies.name=Обновить все зависимости
code.vision.update.dependencies.description=Обновить зависимости в файле go.mod
code.vision.update.dependencies.name=Обновить зависимости
code.vision.update.direct.dependencies.name=Обновить прямые зависимости
exportable.GoSdkList.presentable.name=Список известных путей Go SDK
exportable.vgo.presentable.name=Список известных переменных окружения Go
filetype.go.build.description=Go\:build ограничение
filetype.go.cgo.description=Файлы Cgo
filetype.go.debug.description=Go\:debug директива
filetype.go.description=Файлы Go
filetype.go.plus.build.description=Go +build ограничение
filetype.go.settings.modules.dependency.description=Файл зависимостей Go-модулей
filetype.go.tag.description=Go тег
filetype.go.time.description=Go время
go.action.playground.connection.failed=Не удалось подключиться к серверу
go.add.import.command.name=Добавить импорт
go.add.import.with.alias.presentation={0} как {1}
go.app.engine.not.gae.sdk.validation.message=App Engine поддерживает только Go 1.11 и выше
go.app.engine.wizard.description=Создайте проект Go App Engine для разработки Go-приложений, использующих Google App Engine.<br/>Новый модуль включает настройки по умолчанию и базовый обработчик на Go.
go.app.engine.wizard.name=App Engine
go.attach.directory.action.text=Прикрепить директорию "{0}"
go.auto.import.and.completion.add.exclude.label=Введите путь импорта для исключения из автоимпорта и автодополнения\:
go.auto.import.and.completion.title=Автоимпорт и автодополнение
go.background.task.compiling.title=Компилируется…
go.background.task.running.title=Выполняется…
go.before.check.in.show.fmt.error.button=Подробности [&D]…
go.call.hierarchy.respect.interface.calls.action.name=Учитывать вызовы интерфейсов
go.call.hierarchy.respect.interface.calls.description=Учет вызовов интерфейсов
go.cannot.be.represented.by.type={0} не может быть представлено типом {1}
go.checkin.factory.fmt.commit.anyway.question=Выполнить коммит в любом случае?
go.checkin.factory.fmt.failed.message=GoFmt вернул ненулевой код для некоторых файлов.
go.checkin.factory.fmt.not.started.message=Не удаётся запустить gofmt. {0}
go.code.smells.commit.local.paths=Коммит локальных путей может быть непереносимым
go.code.vision.implementations={0, choice, 1\#1 реализация|2\#{0,number} реализации|5\#{0,number} реализаций}
go.code.vision.usages={0,choice, 0\#не используется|1\#1 использование|2\#{0,number} использования|11\#{0,number} использований}
go.codeLens.inheritors.description=Количество наследников интерфейса. Нажмите на подсказку для перехода к коду, наследующему этот интерфейс.
go.codeLens.references.description=Количество использований объявления верхнего уровня в проекте. Нажмите на подсказку для перехода к использованиям.
go.codeLens.vcs.code.vision.description=Имя человека, написавшего код для типа, метода или любого другого элемента кода. Имя берется из системы контроля версий.
go.colors.and.fonts.bad.character=Некорректный символ
go.colors.and.fonts.braces.and.operators=Скобки и операторы
go.colors.and.fonts.braces.and.operators.braces=Фигурные скобки
go.colors.and.fonts.braces.and.operators.brackets=Квадратные скобки
go.colors.and.fonts.braces.and.operators.colon=Двоеточие
go.colors.and.fonts.braces.and.operators.comma=Запятая
go.colors.and.fonts.braces.and.operators.dot=Точка
go.colors.and.fonts.braces.and.operators.operator=Оператор
go.colors.and.fonts.braces.and.operators.parentheses=Круглые скобки
go.colors.and.fonts.braces.and.operators.semicolon=Точка с запятой
go.colors.and.fonts.comments=Комментарии
go.colors.and.fonts.comments.block.comment=Блочный комментарий
go.colors.and.fonts.comments.build.constraints=Ограничения сборки
go.colors.and.fonts.comments.build.constraints.operators=Операторы
go.colors.and.fonts.comments.build.constraints.parens=Круглые скобки
go.colors.and.fonts.comments.build.constraints.tag=Тег
go.colors.and.fonts.comments.comment.keyword=Ключевое слово комментария
go.colors.and.fonts.comments.comment.reference=Ссылка в комментарии
go.colors.and.fonts.comments.line.comment=Строчный комментарий
go.colors.and.fonts.declarations=Объявления
go.colors.and.fonts.declarations.constants=Константы
go.colors.and.fonts.declarations.constants.builtin.constant=Встроенная константа
go.colors.and.fonts.declarations.constants.local.constant=Локальная константа
go.colors.and.fonts.declarations.constants.package.exported.constant=Экспортуемая константа пакета
go.colors.and.fonts.declarations.constants.package.local.constant=Локальная константа пакета
go.colors.and.fonts.declarations.function.parameter=Параметр функции
go.colors.and.fonts.declarations.functions=Функции
go.colors.and.fonts.declarations.functions.builtin.function=Встроенная функция
go.colors.and.fonts.declarations.functions.exported.function=Экспортуемая функция
go.colors.and.fonts.declarations.functions.package.local.function=Локальная функция пакета
go.colors.and.fonts.declarations.label=Метка
go.colors.and.fonts.declarations.method.receiver=Получатель метода
go.colors.and.fonts.declarations.package=Пакет
go.colors.and.fonts.declarations.struct.tags=Теги структуры
go.colors.and.fonts.declarations.struct.tags.arbitraryText=Произвольный текст
go.colors.and.fonts.declarations.struct.tags.colon=Двоеточие
go.colors.and.fonts.declarations.struct.tags.key=Ключ
go.colors.and.fonts.declarations.struct.tags.value=Значение
go.colors.and.fonts.declarations.types=Типы
go.colors.and.fonts.declarations.types.package.exported.interface=Экспортуемый интерфейс пакета
go.colors.and.fonts.declarations.types.package.exported.struct=Экспортуемая структура пакета
go.colors.and.fonts.declarations.types.package.local.interface=Локальный интерфейс пакета
go.colors.and.fonts.declarations.types.package.local.struct=Локальная структура пакета
go.colors.and.fonts.declarations.types.type.specification=Спецификация типа
go.colors.and.fonts.declarations.variables=Переменные
go.colors.and.fonts.declarations.variables.builtin.variable=Встроенная переменная
go.colors.and.fonts.declarations.variables.local.variable=Локальная переменная
go.colors.and.fonts.declarations.variables.package.exported.variable=Экспортуемая переменная пакета
go.colors.and.fonts.declarations.variables.package.local.variable=Локальная переменная пакета
go.colors.and.fonts.declarations.variables.reassignment.in.short.variable.declaration=Переприсваивание в краткой декларации переменной
go.colors.and.fonts.declarations.variables.scope.declared.variable=Переменная области видимости
go.colors.and.fonts.declarations.variables.shadowing.variable=Затеняющая переменная
go.colors.and.fonts.declarations.variables.struct.exported.member=Экспортуемый член структуры
go.colors.and.fonts.declarations.variables.struct.local.member=Локальный член структуры
go.colors.and.fonts.identifier=Идентификатор
go.colors.and.fonts.keyword=Ключевое слово
go.colors.and.fonts.number=Число
go.colors.and.fonts.references=Ссылки
go.colors.and.fonts.references.function.calls=Вызовы функций
go.colors.and.fonts.references.function.calls.builtin.function.call=Вызов встроенной функции
go.colors.and.fonts.references.function.calls.exported.function.call=Вызов экспортованной функции
go.colors.and.fonts.references.function.calls.local.function.call=Вызов локальной функции
go.colors.and.fonts.references.type.references=Ссылки на типы
go.colors.and.fonts.references.type.references.builtin.type.reference=Ссылка на встроенный тип
go.colors.and.fonts.references.type.references.package.exported.interface=Экспортованный интерфейс пакета
go.colors.and.fonts.references.type.references.package.exported.struct=Экспортованная структура пакета
go.colors.and.fonts.references.type.references.package.local.interface=Локальный интерфейс пакета
go.colors.and.fonts.references.type.references.package.local.struct=Локальная структура пакета
go.colors.and.fonts.references.type.references.type.specification=Спецификация типа
go.colors.and.fonts.references.variable.calls=Вызовы переменных
go.colors.and.fonts.references.variable.calls.exported.variable.call=Вызов экспортованной переменной
go.colors.and.fonts.references.variable.calls.local.variable.call=Вызов локальной переменной
go.colors.and.fonts.references.variable.calls.package.local.variable.call=Вызов локальной переменной пакета
go.colors.and.fonts.references.variable.calls.struct.exported.member.call=Вызов экспортованного члена структуры
go.colors.and.fonts.references.variable.calls.struct.local.member.call=Вызов локального члена структуры
go.colors.and.fonts.string=Строка
go.colors.and.fonts.string.invalid.escape=Некорректная escape-последовательность
go.colors.and.fonts.string.text=Текст
go.colors.and.fonts.string.valid.escape=Корректная escape-последовательность
go.command.line.inspection.project.configurator.description=Настраивает проект Go
go.command.line.inspection.project.configurator.download.dependencies=Загрузка зависимостей модуля Go…
go.completion.add.tag.key.to.all.fields=Добавить тег ко всем полям…
go.completion.fill.all.fields.lookup.string=Заполнить все поля…
go.completion.fill.selected.fields.lookup.string=Заполнить выбранные поля…
go.completion.generate.struct.fields.from.json=Сгенерировать поля структуры из JSON…
go.completion.insert.case.clause=Вставить {0,choice,0\#ветви|1\#ветвь|2\#ветви} case
go.completion.insert.if.not.nil.statement.command.name=Вставить оператор 'if value \!\= nil {...}'
go.completion.insert.literal.command.name=Вставить литералы Go
go.completion.insert.type.name.command.name=Вставить имя типа
go.completion.method.like.completion.advertisement=Нажмите {0}, чтобы увидеть функции, принимающие выражение в качестве первого аргумента
go.completion.method.like.completion.command.name=Автодополнение функций в стиле методов
go.configuration.activity.name=Golang
go.converter.build.run.configuration.description=Конфигурация запуска 'Go Build' была изменена. Необходимо конвертировать существующие конфигурации.
go.converter.build.tags.description=Механизм хранения настроек проекта Go был изменен, обновите проект и его модули.
go.converter.project.model.description=Модель проекта Go была изменена, обновите проект и его модули
go.converter.sdk.description=Модель проекта Go была изменена, обновите проект и его модули
go.converter.single.file.run.configuration.description=Конфигурация запуска 'Run single Go file' была удалена. Необходимо конвертировать существующие конфигурации.
go.core.dump.dialog.dump.path.label=&Дамп памяти\:
go.core.dump.dialog.executable.label=&Исполняемый файл\:
go.core.dump.dialog.invalid.core.dump.validation.message=Файл не является корректным дампом памяти
go.core.dump.dialog.invalid.executable.validation.message=Файл не является исполняемым
go.core.dump.dialog.specify.core.dump.validation.message=Укажите дамп памяти
go.core.dump.dialog.specify.executable.validation.message=Укажите исполняемый файл
go.core.dump.failed.to.start.error.message=Не удалось запустить отладчик для дампа памяти {0}\: {1}
go.core.dump.session.name=Дамп памяти {0}
go.create.intermediate.variable.declaration.fix.name=Создать промежуточную переменную
go.create.new.file.action.command.name=Создать файл Go {0}
go.create.new.file.dialog.title=Новый файл Go
go.create.new.file.empty.file.kind.name=Пустой файл
go.create.new.file.simple.application.kind.name=Простое приложение
go.debug.show.goroutines.action.name=Показать горутины
go.debug.show.threads.action.name=Показать потоки
go.debugger.and.n.more=И еще {0}
go.debugger.another.command.is.in.progress=Выполняется другая команда
go.debugger.async.stacktrace.caption=Асинхронный стек вызовов
go.debugger.breakpoint.title=Точка останова Go
go.debugger.cannot.calculate.string.presentation=Не удаётся вычислить строковое представление\: {0}
go.debugger.cannot.calculate.value=Не удаётся вычислить значение
go.debugger.cannot.connect.non.remote=Процесс Delve не может быть подключен, так как он не использует удалённое соединение
go.debugger.cannot.connect.twice=Процесс Delve не может быть подключен дважды
go.debugger.cannot.evaluate.call=Не удаётся вычислить вызов\: {0}
go.debugger.cannot.evaluate.expression=Не удаётся вычислить выражение ''{0}''\: {1}
go.debugger.cannot.find.debugger.path=Не удаётся найти путь к отладчику для {0}
go.debugger.cannot.find.file=Не удаётся найти файл {0}
go.debugger.cannot.find.free.port=Не удаётся найти свободный TCP-порт для отладчика
go.debugger.cannot.get.current.goroutine=не удаётся получить текущую горутину
go.debugger.cannot.get.current.stack=не удаётся получить текущий стек
go.debugger.cannot.load.remaining.call.result.children=Не удаётся загрузить оставшиеся дочерние элементы результата вызова
go.debugger.cannot.pause=Не удаётся приостановить
go.debugger.cannot.resolve.localhost=Не удаётся разрешить адрес localhost
go.debugger.cannot.retrieve.go.processes=Не удаётся получить список процессов Go
go.debugger.cannot.retrieve.interface.value.type=не удаётся получить тип значения интерфейса
go.debugger.connecting.to.address.message=Подключение к {0}…
go.debugger.connecting.to.unknown.address.message=Подключение к удалённому адресу…
go.debugger.connection.failed.generic.message=Не удалось подключиться к {0}
go.debugger.create.dump.background.task.progress.text=Создание дампа стека ({0})…
go.debugger.create.dump.background.task.title=Создание дампа стека…
go.debugger.custom.delve.extended.notification=Отладка с пользовательским Delve\: {0}. Удалите свойство ''dlv.path'' <a href\='customProperties'>custom property</a> и перезапустите ИСР для использования встроенного Delve.
go.debugger.custom.delve.notification=Отладка с пользовательским Delve\: {0}
go.debugger.disconnected.unexpectedly=Отладчик неожиданно отключился
go.debugger.error.breakpoint.display.text=Фатальная ошибка
go.debugger.error.breakpoint.title=Точка останова на ошибке Go
go.debugger.expression.is.nil=''{0}'' равно nil
go.debugger.expression.is.not.a.function=''{0}'' не является функцией
go.debugger.failed.to.compute.node.presentation=Не удалось вычислить представление узла
go.debugger.failed.to.create.breakpoint=Не удалось создать точку останова
go.debugger.failed.to.run.to.position=Не удалось выполнить до позиции
go.debugger.failed.to.stop.mozilla.rr.recording=Не удалось остановить запись mozilla rr
go.debugger.failed.to.stop.mozilla.rr.recording.details=Не удалось остановить запись mozilla rr\: {0}
go.debugger.fmt.sprintf.cannot.format.value=(не удаётся отформатовать значение)
go.debugger.fmt.sprintf.unsupported.format=(неподдерживаемый формат)
go.debugger.fmt.sprintf.unsupported.verb=(неподдерживаемый спецификатор)
go.debugger.go.version.is.not.officially.supported=Go {0} официально не поддерживается отладчиком, некоторые функции могут работать некорректно. Обновите до Go {1} или новее.
go.debugger.go.version.is.not.supported=Go {0} не поддерживается отладчиком. Обновите до Go {1} или новее.
go.debugger.goroutine=Горутина
go.debugger.hidden.group.name=Скрыто ({0})
go.debugger.install.gops.to.attach.to.go.processes=Установите {0} для подключения к процессам Go
go.debugger.internal.messaging.error=Внутренняя ошибка обмена сообщениями
go.debugger.kill.existing.process.message=Хотите завершить удалённый процесс, к которому был подключен отладчик?
go.debugger.kill.existing.process.title=Завершить удалённый процесс
go.debugger.local.attach.group.name=Go
go.debugger.missing.current.function=отсутствует текущая функция
go.debugger.missing.function.name=<пропущено>
go.debugger.no.debug.information.for.file=исполняемый файл не содержит отладочной информации для {0}
go.debugger.non.top.frame.selected=выбран не верхний фрейм
go.debugger.obsolete.value=<устарело>
go.debugger.only.first.goroutines.are.shown=Показаны только первые {0} горутин
go.debugger.process.terminated.stop.remote.delve.message=Удалённый процесс завершен. Хотите также остановить удалённый экземпляр Delve?
go.debugger.record.and.debug.action.name=Запись и отладка
go.debugger.record.and.debug.cannot.find.rr.message=<html>Не удаётся найти исполняемый файл <a href\="https\://rr-project.org">mozilla rr</a>. Установите его и добавьте в PATH.</html>
go.debugger.record.and.debug.description=Запись и отладка
go.debugger.record.and.debug.start.action.text=Запись и отладка
go.debugger.recording.in.progress=Идет запись выполнения программы. Чтобы отладить запись, дождитесь завершения программы или <a href\=''{0}''>остановите запись</a>.
go.debugger.renderers.binary.name=Двоичный
go.debugger.renderers.decimal.name=Десятичный
go.debugger.renderers.hex.name=Шестнадцатеричный
go.debugger.smart.step.into.failed=Ошибка умного шага внутрь\: {0}
go.debugger.smart.step.into.popup.title=Шаг в функцию
go.debugger.stop.remote.delve.message=Хотите остановить удалённый экземпляр Delve?
go.debugger.stop.remote.delve.title=Остановить удалённый Delve
go.debugger.thread=Поток
go.debugger.thread.dump.display.name=Дамп {0}
go.debugger.thread.dump.error=Не удалось получить дамп потоков\: {0}
go.debugger.thread.dump.incomplete.display.name=Неполный дамп {0}
go.debugger.thread.dump.is.in.progress=Выполняется создание дампа потоков
go.debugger.thread.dump.n.goroutines={0} {0,choice,0\#горутин|1\#горутина|2\#горутины}
go.debugger.thread.dump.n.goroutines.matched.by.filter={0} {0,choice,0\#горутин|1\#горутина|2\#горутины} соответствуют фильтру
go.debugger.thread.dump.n.hidden.goroutines={0} скрытых {0,choice,0\#горутин|1\#горутина|2\#горутины}
go.debugger.thread.dump.n.unique.stacks={0} уникальных {0,choice,0\#стеков|1\#стек|2\#стека}
go.debugger.unknown.function.name=<неизвестно>
go.debugger.unreadable.error=\ нечитаемо\: {0}
go.debugger.unsupported.architecture.error=Отладка поддерживается только на 64-битных системах и 32-битных системах Linux
go.debugger.unsupported.go.arch.on.darwin.arm64.error=Отладка программ, скомпилированных с {0}, не поддерживается. Используйте go sdk для darwin/arm64.
go.debugger.unsupported.go.version.on.darwin.arm64.error=Отладка на darwin/arm64 требует Go 1.16
go.debugger.unsupported.type=<неподдерживаемый тип\: {0}>
go.debugger.unsupported.wsl1=Отладка в WSL1 не поддерживается, используйте WSL2
go.debugger.unused.functions.are.not.included.message=" (неиспользуемые функции не включены в исполняемый файл)"
go.debugger.unused.methods.are.not.included.message=" (неиспользуемые методы не включены в исполняемый файл)"
go.declarations.intentions.category=Go/Объявления
go.detach.directory.action.text=Отсоединить директорию "{0}"
go.edit.auto.import.settings.action.name=Настройки автоимпорта
go.element.is.not.go.expression.error.hint=Выделение не содержит выражения Go
go.empty.element.text=<пусто>
go.empty.project.wizard.name=Пустой проект
go.enable.template.plugin.action.text=Включить плагин
go.enable.template.plugin.notification.text=Включите Go Template для улучшения подсветки, автодополнения и навигации в пакете html/templates
go.error.annotator.anonymous.interface.cycle=Недопустимый рекурсивный тип\: анонимный интерфейс ссылается на себя
go.error.annotator.argument.is.not.a.type={0} не является типом
go.error.annotator.array.bound.must.be.a.constant.expression=Неверная граница массива ''{0}'', должно быть константное выражение
go.error.annotator.array.bound.must.be.non.negative=Неверная граница массива ''{0}'', должна быть неотрицательной
go.error.annotator.array.bound.must.be.representable.by.int.type=Неверная граница массива ''{0}'', значение должно быть представимо типом ''int''
go.error.annotator.assignment.count.mismatch=Несоответствие количества присваиваний\: {0} \= {1}
go.error.annotator.bad.octal.escape=Восьмеричная escape-последовательность должна содержать три восьмеричные цифры, первая должна быть меньше или равна 3
go.error.annotator.binary.digits.are.not.supported=Двоичные цифры поддерживаются начиная с Go 1.13
go.error.annotator.break.statement.not.inside.a.for.loop.select.or.switch=Оператор 'break' находится вне операторов 'for', 'select' или 'switch'
go.error.annotator.call.used.as.value.but.it.returns.nothing={0} используется как значение, но ничего не возвращает
go.error.annotator.can.only.use.triple.dot.as.final.argument=Можно использовать '...' только как последний аргумент в списке
go.error.annotator.cannot.assign.to.expression=Невозможно присвоить значение {0}
go.error.annotator.cannot.call.pointer.method=Невозможно вызвать метод указателя для ''{0}''
go.error.annotator.cannot.declare.in.post.statement.of.for.loop=Нельзя объявлять переменную в post-операторе цикла for
go.error.annotator.cannot.declare.init.must.be.a.function=Нельзя объявить init, должна быть функция
go.error.annotator.cannot.embed.type.parameter=Нельзя встраивать параметр типа
go.error.annotator.cannot.fallthrough.final.case.in.switch=Нельзя использовать 'fallthrough' в последнем case оператора 'switch'
go.error.annotator.cannot.fallthrough.in.type.switch=Нельзя использовать 'fallthrough' в switch типа
go.error.annotator.cannot.infer.types=Невозможно вывести {0}
go.error.annotator.cannot.make.type=Невозможно создать {0}
go.error.annotator.cannot.make.type.no.single.underlying.type=Невозможно создать {0}; набор типов не имеет единого базового типа
go.error.annotator.cannot.reassign.a.constant=Нельзя переназначить константу
go.error.annotator.cannot.use.comparable.in.union=Нельзя использовать comparable в объединении
go.error.annotator.cannot.use.generic.function.without.instantiation=Нельзя использовать обобщенную функцию без инстанцирования
go.error.annotator.cannot.use.interface.with.methods.in.union=Нельзя использовать интерфейсы с методами в объединении
go.error.annotator.cannot.use.triple.dot.for.output.arguments=Нельзя использовать '...' в списке выходных аргументов
go.error.annotator.cannot.use.type.assertion.on.type.parameter=Невозможно использовать приведение типа для параметра типа {0}
go.error.annotator.cannot.use.type.embedding.comparable.in.union=Нельзя использовать ''{0}'' в объединении (''{0}'' встраивает comparable)
go.error.annotator.cannot.use.type.parameter.as.constraint=Нельзя использовать параметр типа как ограничение
go.error.annotator.cannot.use.type.parameter.as.rhs.in.type.declaration=Нельзя использовать параметр типа как правую часть в объявлении типа
go.error.annotator.cannot.use.type.switch.on.type.parameter=Невозможно использовать switch типа для параметра типа {0}
go.error.annotator.closing.single.quote.expected=Ожидается закрывающая кавычка '
go.error.annotator.comparable.outside.of.type.parameter=Нельзя использовать тип comparable вне ограничения типа\: интерфейс является (или встраивает) comparable
go.error.annotator.const.initializer.is.not.a.constant=Инициализатор константы ''{0}'' не является константой
go.error.annotator.constraint.elements.outside.of.type.parameter=Интерфейс содержит {0,choice,1\#элемент|2\#элемента} ограничения {1}, может использоваться только в параметрах типа
go.error.annotator.constraint.outside.of.type.parameter=Интерфейс включает элементы ограничения, может использоваться только в параметрах типа
go.error.annotator.constraint.term.on.interface=Недопустимое использование ~ (''{0}'' является интерфейсом)
go.error.annotator.constraint.term.underlying.type.is.not.self=Недопустимое использование ~ (базовый тип ''{0}'' не является ''{0}'')
go.error.annotator.continue.statement.not.inside.a.for.loop=Оператор 'continue' находится вне цикла 'for'
go.error.annotator.conversion.in.defer.or.go={0} требует вызова функции, а не преобразования
go.error.annotator.cyclic.definition.detected=Обнаружено циклическое определение
go.error.annotator.defer.or.go.requires.function.call=Выражение в {0} должно быть вызовом функции
go.error.annotator.digit.separator.is.not.supported=Разделитель цифр поддерживается начиная с Go 1.13
go.error.annotator.embedded.type.cannot.be.a.pointer=Встраиваемый тип не может быть указателем
go.error.annotator.embedded.type.cannot.be.a.pointer.to.a.type.parameter=Встраиваемый тип не может быть указателем на параметр типа
go.error.annotator.embedded.type.cannot.be.a.pointer.to.interface=Встраиваемый тип не может быть указателем на интерфейс
go.error.annotator.embedded.type.cannot.be.a.type.parameter=Встраиваемый тип не может быть параметром типа
go.error.annotator.empty.rune.literal=Пустой литерал руны
go.error.annotator.end.of.file.in.comment=Конец файла в комментарии
go.error.annotator.evaluated.but.not.used={0} вычислено, но не использовано
go.error.annotator.extra.expression.in.const.declaration=Лишнее выражение в объявлении константы
go.error.annotator.fallthrough.statement.out.of.place=Оператор 'fallthrough' находится в неправильном месте
go.error.annotator.func.literal.cannot.have.type.parameters=Литерал функции не может иметь параметры типа
go.error.annotator.function.not.permitted.in.defer.or.go=Эта функция не может быть вызвана в операторе {0}
go.error.annotator.function.type.cannot.have.type.parameters=Тип функции не может иметь параметры типа
go.error.annotator.generic.type.cannot.be.alias=Обобщенный тип не может быть псевдонимом
go.error.annotator.got.n.arguments.but.m.type.parameters=Получено {0} аргументов, но {1} параметров типа
go.error.annotator.hex.floats.are.not.supported=Шестнадцатеричные числа с плавающей точкой поддерживаются начиная с Go 1.13
go.error.annotator.interface.method.must.have.no.type.parameters=Метод интерфейса не может иметь параметры типа
go.error.annotator.invalid.argument.for.cap=Недопустимый аргумент для функции cap
go.error.annotator.invalid.argument.for.len=Недопустимый аргумент для функции len
go.error.annotator.invalid.constant.type=Недопустимый тип константы
go.error.annotator.invalid.embedded.type=Недопустимый тип {0}\: должен быть typeName или *typeName
go.error.annotator.invalid.escape.sequence=Недопустимая escape-последовательность
go.error.annotator.invalid.hex.escape.sequence.syntax=После \\x должны следовать две шестнадцатеричные цифры
go.error.annotator.invalid.index.or.slice.operation=Недопустимая операция {0} (срез строки с 3 индексами)
go.error.annotator.invalid.long.unicode.escape.sequence.syntax=После \\U должны следовать восемь шестнадцатеричных цифр
go.error.annotator.invalid.method.expression=Недопустимое выражение метода (требуется указатель-приемник)
go.error.annotator.invalid.package.name=Недопустимое имя пакета
go.error.annotator.invalid.select.assignment=Присваивание в select должно иметь операцию получения в правой части
go.error.annotator.invalid.select.case=Case в select должен содержать операцию получения, отправки, присваивания или короткое объявление переменной
go.error.annotator.invalid.type.assertion=Недопустимое приведение типа\: {0} (не интерфейсный тип {1} слева)
go.error.annotator.invalid.type.switch.guard=Недопустимый guard в type switch\: {0} (не интерфейсный тип {1} слева)
go.error.annotator.invalid.unicode.code.point=Недопустимая кодовая точка Unicode
go.error.annotator.invalid.unicode.escape.sequence.syntax=После \\u должны следовать четыре шестнадцатеричные цифры
go.error.annotator.is.not.a.generic.type={0} не является обобщенным типом
go.error.annotator.list.of.type.arguments.must.not.be.empty=Список аргументов типа не может быть пустым
go.error.annotator.list.of.type.parameters.must.not.be.empty=Список параметров типа не может быть пустым
go.error.annotator.main.or.init.has.invalid.signature=Функция {0} не должна иметь аргументов и возвращаемых значений
go.error.annotator.map.key.type.is.not.comparable=Недопустимый тип ключа map\: операторы сравнения \=\= и \!\= должны быть полностью определены для типа ключа
go.error.annotator.method.cannot.have.type.parameters=Метод не может иметь параметры типа
go.error.annotator.method.name.in.interface.cannot.be.blank=Имя метода в интерфейсе не может быть пустым
go.error.annotator.min.max.clear.call.requires.go.1.21={0} требует Go 1.21 или выше
go.error.annotator.missing.argument.to.make=Отсутствует аргумент для make
go.error.annotator.missing.condition.in.if.statement=Отсутствует условие в операторе 'if'
go.error.annotator.missing.function.body=Отсутствует тело {0}
go.error.annotator.missing.key.in.map.literal=Отсутствует ключ в литерале map
go.error.annotator.missing.len.argument.to.make=Отсутствует аргумент len в функции make
go.error.annotator.missing.value.in.const.declaration=Отсутствует значение в объявлении константы
go.error.annotator.multiple.defaults=Множественные default в {0}
go.error.annotator.multiple.value.in.single.value.context=Множественное значение {0} в контексте одиночного значения
go.error.annotator.named.and.unnamed.parameters={0} имеет как именованные, так и неименованные параметры ''{1}''
go.error.annotator.named.and.unnamed.return.parameters={0} имеет как именованные, так и неименованные возвращаемые параметры ''{1}''
go.error.annotator.needs.experiment.for.generic.type.aliases=Невозможно использовать обобщенные псевдонимы типов, так как эксперимент 'aliastypeparams' Go не включен.
go.error.annotator.needs.experiment.for.range.over.func=Невозможно использовать range-over-function, так как эксперимент 'rangefunc' Go не включен.
go.error.annotator.needs.update.for.generic.type.aliases=Невозможно использовать обобщенные псевдонимы типов, требуется Go 1.23 или выше.
go.error.annotator.needs.update.for.range.over.func=Невозможно использовать range-over-function, требуется Go 1.22 или выше.
go.error.annotator.needs.update.for.range.over.int=Невозможно использовать range-over-integer, требуется Go 1.22 или выше.
go.error.annotator.new.line.in.string=Перенос строки в строковом литерале
go.error.annotator.no.new.variables=Нет новых переменных слева от '\:\='
go.error.annotator.no.variables.allowed.in.range.over.func=Оператор ''range'' для ''{0}'' не допускает переменных итерации
go.error.annotator.non.integer.capacity.argument.to.make=Нецелочисленный аргумент емкости в функции make
go.error.annotator.non.integer.size.argument.to.make=Нецелочисленный аргумент размера в функции make
go.error.annotator.octal.prefix.is.not.supported=Восьмеричный префикс поддерживается начиная с Go 1.13
go.error.annotator.parenthesized.expression.in.defer.or.go=Выражение в {0} не должно быть заключено в скобки
go.error.annotator.problem.capacity.less.than.size.to.make=Емкость не может быть меньше размера
go.error.annotator.problem.negative.capacity.to.make=Отрицательный аргумент емкости в функции make
go.error.annotator.problem.negative.size.to.make=Отрицательный аргумент размера в функции make
go.error.annotator.problem.redundant.capacity.hint.to.make=Избыточное указание емкости
go.error.annotator.problem.redundant.size.hint.to.make=Избыточное указание размера
go.error.annotator.reference.is.not.a.type={0} не является типом
go.error.annotator.semicolon.is.missing=Отсутствует ;
go.error.annotator.shadowed.receiver.is.not.a.generic.type={0} не является обобщенным типом (приемник скрыт параметром типа)
go.error.annotator.too.many.arguments.to.make=Слишком много аргументов в функции make
go.error.annotator.too.many.arguments.to.new=Слишком много аргументов для new
go.error.annotator.too.many.characters.in.rune.literal=Слишком много символов в литерале руны
go.error.annotator.too.many.variables.in.range.over.array=Оператор 'range' для массива требует не более двух переменных итерации
go.error.annotator.too.many.variables.in.range.over.chan=Оператор 'range' для канала требует не более одной переменной итерации
go.error.annotator.too.many.variables.in.range.over.func=Оператор ''range'' для ''{0}'' требует не более {1} {1,choice,0\#переменных|1\#переменной|2\#переменных} итерации
go.error.annotator.too.many.variables.in.range.over.int=Оператор 'range' для целого числа требует не более одной переменной итерации
go.error.annotator.too.many.variables.in.range.over.map=Оператор 'range' для map требует не более двух переменных итерации
go.error.annotator.too.many.variables.in.range.over.slice=Оператор 'range' для slice требует не более двух переменных итерации
go.error.annotator.too.many.variables.in.range.over.string=Оператор 'range' для строки требует не более двух переменных итерации
go.error.annotator.type.aliases.are.available.since.go.1.9=Неожиданный '\=' в объявлении типа; псевдонимы типов доступны начиная с Go 1.9
go.error.annotator.type.cannot.be.declared.in.generic.function=Go SDK {0} не поддерживает объявления типов в обобщенной функции, используйте Go SDK 1.20 или выше
go.error.annotator.type.cannot.be.declared.in.generic.method=Go SDK {0} не поддерживает объявления типов в обобщенном методе, используйте Go SDK 1.20 или выше
go.error.annotator.type.constraint.is.missing=Отсутствует ограничение типа
go.error.annotator.type.is.not.an.expression=Тип ''{0}'' не является выражением
go.error.annotator.type.parameters.are.not.supported=Дженерики поддерживаются начиная с Go 1.18
go.error.annotator.unexpected.assign.operator=Неожиданный {0}, ожидается ''\:\='', ''\='' или '',''
go.error.annotator.unexpected.end.of.statement=Синтаксическая ошибка\: неожиданный конец выражения, ожидается '\:\=','\=' или ','
go.error.annotator.unexpected.newline.after.if=Неожиданный перенос строки, ожидается '{' после условия 'if'
go.error.annotator.unexported.reference.usage=Невозможно использовать неэкспортованный {0} ''{1}'' в текущем пакете
go.error.annotator.use.of.generic.type.without.instantiation=Использование обобщенного типа без инстанцирования
go.error.annotator.use.of.package.without.selector=Использование пакета ''{0}'' без селектора
go.error.annotator.use.of.type.outside.type.switch=Использование .(type) вне type switch
go.error.go.build.after.package=Директива go\:build должна располагаться перед объявлением пакета
go.error.go.build.and.plus.build.lines.dont.match=Строки //+build не соответствуют условию //go\:build
go.error.go.build.expression.is.too.complex=Выражение слишком сложное для строк //+build
go.error.go.build.non.first.element=Директива go\:build должна быть первым элементом в строке
go.error.go.build.only.one.allowed=В файле разрешена только одна директива //go\:build
go.error.go.build.without.plus.build=Комментарий //go\:build без комментария //+build
go.error.go.embed.all.prefix.not.supported=Недопустимый шаблон пути, префикс 'all\:' требует Go 1.18
go.error.go.embed.empty.directory=Невозможно встроить пустую директорию
go.error.go.embed.file.must.import.embed=Go файл с go\:embed должен импортовать пакет "embed"
go.error.go.embed.invalid.path.elements=Путь не должен содержать элементы '.' или '..' и начинаться с ведущего слеша
go.error.go.embed.invalid.path.pattern=Недопустимый шаблон пути
go.error.go.embed.invalid.syntax.of.paths=Недопустимый синтаксис шаблонов пути
go.error.go.embed.must.be.above.var.declaration=go\:embed должен располагаться над объявлением одной глобальной переменной
go.error.go.embed.no.path.arguments=После go\:embed ожидаются шаблоны пути
go.error.go.embed.not.supported=go\:embed поддерживается начиная с Go 1.16
go.error.go.embed.path.must.resolve.to.file=Переменные типа 'string' и '[]byte' могут встраивать только один файл
go.error.go.embed.single.path.expected=Переменные типа 'string' и '[]byte' могут иметь только один шаблон пути
go.error.go.embed.unresolved.path=Неразрешённый путь
go.error.go.embed.var.has.wrong.type=Переменная go\:embed должна иметь тип 'string', '[]byte' или 'embed.FS'
go.error.go.plus.build.can.be.converted.to.go.build=Комментарии //+build могут быть преобразованы в директиву //go\:build
go.error.go.plus.build.can.be.removed=Комментарии //+build могут быть удалены
go.error.invalid.double.negation=Недопустимое двойное отрицание
go.error.invalid.non.alphanumeric.character=Недопустимый не буквенно-цифровой символ
go.error.parser.expected=Ожидалось ''{0}''
go.error.parser.expected.got=Ожидалось ''{0}'', получено ''{1}''
go.error.parser.expected.or=Ожидалось ''{0}'' или ''{1}''
go.error.parser.expected.or.got=Ожидалось ''{0}'' или ''{1}'', получено ''{2}''
go.error.parser.godebug.expected.key=Отсутствует ключ 'go\:debug'
go.error.parser.godebug.expected.value=Отсутствует значение 'go\:debug'
go.error.parser.missing.slice.expr.index=Отсутствует {0,choice,2\#второй|3\#третий} индекс в выражении среза
go.error.parser.unexpected=Неожиданное ''{0}''
go.error.windows.project.wsl.sdk=Невозможно скомпилировать проект Windows с использованием WSL SDK
go.error.wsl.project.requires.wsl.sdk=Проект в WSL требует SDK Go в WSL
go.error.wsl.project.requires.wsl.sdk.from.same.instance=Проект в WSL требует SDK Go из того же экземпляра WSL
go.error.wsl.project.windows.sdk=Невозможно скомпилировать проект WSL с использованием Windows SDK
go.error.wsl.sdk.cannot.be.used.for.windows.project=SDK Go в WSL не может использоваться для проекта Windows
go.exclude.fmt.function.dialog.checkbox=Непроектный [&N]
go.exclude.fmt.function.dialog.title=Выберите функцию форматования
go.exclude.import.path.dialog.empty.path.validation.message=Путь импорта не может быть пустым
go.exclude.import.path.dialog.title=Исключить путь импорта
go.exclude.import.path.from.completion.action.name=Исключить ''{0}''
go.execution.application.process.name=Процесс
go.execution.application.run.configuration.description=Конфигурация запуска Go сборки
go.execution.application.run.configuration.display.name=Go сборка
go.execution.before.run.task.command.should.not.start.with.go.error=Команда Go не должна начинаться с 'go'
go.execution.before.run.task.description=Выполнить ''{0}''
go.execution.before.run.task.edit.go.command.dialog.title=Редактировать задачу команды Go
go.execution.before.run.task.empty.command.error=Пустая команда Go недопустима
go.execution.before.run.task.error.dialog.title=Задача команды Go
go.execution.before.run.task.executing.presentable.name=Выполняется ''{0}''
go.execution.before.run.task.name=Выполнить команду Go
go.execution.before.run.task.supports.only.go.modules.error=Задача команды Go поддерживает только модули с включенной интеграцией Go
go.execution.before.run.task.supports.only.go.run.configurations.error=Задача команды Go поддерживает только конфигурации запуска Go
go.execution.can.not.run.go.local.process.error=Не удаётся запустить локальный процесс Go
go.execution.cannot.create.output.file.error=Не удаётся создать выходной файл {0}
go.execution.cannot.create.output.file.in.error=Не удаётся создать выходной файл в {0}
go.execution.cannot.create.temp.output.file.error=Не удаётся создать временный выходной файл
go.execution.cannot.find.directory.error=Не удаётся найти каталог <code>{0}</code>
go.execution.cannot.find.input.file.error=Не удаётся найти входной файл <code>{0}</code>
go.execution.cannot.find.package.error=Не удаётся найти пакет <code>{0}</code>
go.execution.cannot.find.target.error=Не удаётся найти цель {0}
go.execution.cannot.find.target.to.compile.error=Не удаётся найти цель для компиляции
go.execution.cannot.find.working.directory.error=Не удаётся найти рабочий каталог <code>{0}</code>
go.execution.cannot.make.temporary.file.executable.error=Не удаётся сделать временный файл исполняемым {0}
go.execution.cannot.resolve.test.function=Не удаётся определить теги сборки для выполнения теста\: функция <code>{0}</code> не найдена. Убедитесь, что процесс индексации завершен.
go.execution.change.goroot.action.name=Изменить GOROOT
go.execution.compilation.failed.notification.title=Компиляция не удалась
go.execution.compilation.finished.with.exit.code=Компиляция завершена с кодом выхода $EXIT_CODE$
go.execution.compiled.binary.cannot.be.executed=Скомпилированный бинарный файл не может быть выполнен
go.execution.could.not.bind.remote.debugging.port.error=Не удаётся привязать порт удалённой отладки
go.execution.coverage.cannot.run.coverage.on.directory.kind.run.configurations.error=Невозможно запустить анализ покрытия для конфигураций запуска типа "каталог"
go.execution.coverage.covered=покрыто
go.execution.coverage.downloading.coverage.report.progress.title=Обработка отчёта о покрытии…
go.execution.coverage.engine.name=Go покрытие
go.execution.coverage.failed.to.create.or.clear.coverage.dir=Не удалось создать или очистить каталог покрытия ''{0}''
go.execution.coverage.loading.coverage.data=Загрузка данных покрытия…
go.execution.coverage.percent.files=% файлов
go.execution.coverage.percent.statements=% операторов
go.execution.coverage.runner.name=Go
go.execution.debugger.process.name=Отладчик
go.execution.directory.is.not.specified.error=Каталог не указан
go.execution.dlv.not.found.for=Не удаётся найти исполняемый файл Delve для {0}/{1}. Укажите расположение Delve, добавив ''dlv.path\=/path/to/delve'' в ''Справка | Редактировать пользовательские свойства''.
go.execution.dlv.not.found.for.target.platform=Не удаётся найти исполняемый файл Delve для целевой платформы. Укажите расположение Delve, добавив 'dlv.path\=/path/to/delve' в 'Справка | Редактировать пользовательские свойства'.
go.execution.duplicate.file.error=Файл уже в списке\: {0}
go.execution.enter.sudo=Введите ваш пароль sudo\:
go.execution.failed.to.prepare.remote.environment.error=Не удалось подготовить удалённое окружение\: {0}
go.execution.file.is.not.specified.error=Файл не указан
go.execution.file.not.found.error=Файл не найден\: <code>{0}</code>
go.execution.files.must.be.in.one.directory.error=Все указанные файлы должны находиться в одном каталоге
go.execution.go.is.not.configured.error=Go не настроен для конфигурации запуска\: {0}
go.execution.go.sdk.is.not.downloaded.yet=SDK Go еще не загружен
go.execution.go.setup.folding.placeholder=<{0} настройка go {0,choice,1\#вызов|2\#вызова}>
go.execution.input.file.is.not.specified.error=Входной файл не указан
go.execution.install.lldb.notification.text=Установите lldb с помощью xcode-select --install
go.execution.module.does.not.exist.error=Модуль <code>{0}</code> не существует в проекте
go.execution.not.go.file.error=Файл не является Go файлом\: {0}
go.execution.outdated.go.notification.text=Для полной поддержки всех функций отладки обновите версию Go.
go.execution.outdated.go.notification.title=Ваша версия Go устарела
go.execution.package.contains.several.mains.error=Пакет <code>{0}</code> содержит более одной функции <code>main</code><br>Используйте тип "Файл" вместо этого
go.execution.package.is.not.specified.error=Пакет не указан
go.execution.process.cancelled=Отменено
go.execution.process.failed.to.run=Не удалось запустить
go.execution.process.finished.successfully=Успешно завершено
go.execution.process.finished.with.exit.code={0} завершился с кодом выхода {1}
go.execution.process.interrupted=Прервано
go.execution.remote.run.configuration.description=Go Remote
go.execution.remote.run.configuration.display.name=Go Remote
go.execution.remote.run.configuration.host.label=Хост [&H]\:
go.execution.remote.run.configuration.port.label=Порт [&P]\:
go.execution.remote.run.configuration.start.delve.text=Перед запуском этой конфигурации запустите ваше приложение и Delve, как описано ниже.<br><br>Разрешите Delve скомпилировать ваше приложение\:<br><pre>dlv debug --headless --listen\=\:{0} --api-version\=2 --accept-multiclient</pre><br>Или скомпилируйте приложение с помощью Go {3} или новее\:<br><pre>go build -gcflags "all\=-N -l" github.com/app/demo</pre><br>и затем запустите его с Delve, используя следующую команду\:<br><pre>dlv --listen\=\:{1} --headless\=true --api-version\=2 --accept-multiclient exec ./{2}</pre>
go.execution.run.after.build.is.not.possible.incompatible.os.error=Запуск после сборки невозможен<br>Результирующий бинарный файл будет несовместим с ОС
go.execution.run.after.build.is.not.possible.main.not.found.many.files.error=Запуск после сборки невозможен<br>Ни один из выбранных файлов не содержит пакет 'main' и функцию 'main'
go.execution.run.after.build.is.not.possible.main.not.found.single.file.error=Запуск после сборки невозможен<br>Файл 'main' имеет пакет отличный от main или не содержит функцию 'main'
go.execution.run.application.tooltip=Запустить приложение
go.execution.scratch.runconfig.extension.different.contexts.notification=Конфигурация запуска ''{0}'' нацелена на временные файлы, использующие разные модули для контекста. Выберите временные файлы, использующие один и тот же модуль для контекста.
go.execution.scratch.runconfig.extension.edit.notification.action=Редактировать конфигурацию запуска
go.execution.scratch.runconfig.extension.edit.notification.title=Неверная цель конфигурации запуска
go.execution.scratch.runconfig.extension.wrong.kind.notification=Конфигурация запуска ''{0}'' использует тип запуска {1}. Пожалуйста, используйте тип запуска ''Файл'' в конфигурациях запуска для временных файлов.
go.execution.sdk.is.not.specified.error=Go SDK не указан для модуля <code>{0}</code>
go.execution.sdk.not.set.or.sdk.home.path.empty.for.module.error=SDK не установлен или путь к SDK пуст для модуля
go.execution.test.collecting.build.tags.progress.title=Сбор тегов сборки…
go.execution.unknown.error=Неизвестная ошибка, подробности в логах
go.execution.unknown.target.delve.socket.error=Невозможно запустить Delve. Целевой сокет неизвестен. RunState\: {0}
go.execution.working.directory.is.not.specified.error=Рабочая директория не указана
go.external.system.auto.import.is.disabled=ИСР не может корректно функционировать, так как установлен ключ реестра 'external.system.auto.import.disabled'. Отключите эту настройку и перезапустите ИСР.
go.file.watcher.golangci.description=Запускает 'golangci-lint' в директории текущего Go файла
go.find.usages.of.interface.methods.dialog.base.methods.checkbox=&Базовые методы
go.find.usages.of.interface.methods.dialog.message=Тип ''{0}'' реализует интерфейсы, и метод ''{1}'' переопределяет методы. Хотите найти использования методов интерфейса?
go.find.usages.of.interface.methods.dialog.title=Найти использования методов интерфейса?
go.find.usages.of.interface.methods.notification.show.options.text=Показать опции {0}
go.find.usages.of.interface.methods.notification.title=Поиск использований методов интерфейса
go.find.usages.show.usages.in.comments.description=Показать использования элемента в комментариях
go.find.usages.show.usages.in.comments.text=Показать использования в комментариях
go.fix.add.comma.name=Добавить запятую
go.fix.add.comment.name=Добавить комментарий
go.fix.add.explicit.dereference.name=Добавить явное разыменование
go.fix.add.function.block.name=Добавить тело
go.fix.add.function.call.name=Добавить вызов функции
go.fix.add.import.for.side.effects.name=Импорт для побочных эффектов
go.fix.add.keys.to.struct.literal.value.name=Добавить ключи и удалить нулевые значения
go.fix.add.local.var.for.expression.name=Создать локальную переменную
go.fix.add.missing.new.line.name=Добавить отсутствующую новую строку
go.fix.add.missing.return.value.name=Добавить отсутствующие возвращаемые значения
go.fix.add.plus.build.comments=Добавить комментарии //+build
go.fix.add.pointer.name=Добавить указатель
go.fix.add.prefix.to.comment.name=Добавить префикс ''{0}'' к комментарию
go.fix.add.return.statement.name=Добавить оператор return
go.fix.add.square.brackets=Добавить квадратные скобки
go.fix.add.whitespace.name=Добавить пробел
go.fix.always.false.for.name=Удалить цикл 'for'
go.fix.always.false.if.name=Удалить ветвь 'if'
go.fix.always.true.for.name=Удалить избыточное условие
go.fix.always.true.if.name=Удалить другие ветви и упростить текущий 'if'
go.fix.call.receiver.is.not.an.expression=Неожиданный получатель вызова, не является выражением
go.fix.change.array.size.to=Изменить размер массива на {0}
go.fix.change.array.size.to.family.name=Изменить размер массива
go.fix.change.import.sorting.settings.name=Изменить настройки сортировки импорта
go.fix.change.parameters.name=Изменить параметры
go.fix.change.parameters.parameter={0,choice,0\#параметров|1\#параметр|2\#параметра}
go.fix.change.result.parameters.in.assignment.name=Изменить результирующие параметры в присваивании
go.fix.change.result.parameters.in.call.name=Изменить результирующие параметры в вызове
go.fix.change.result.parameters.in.return.name=Изменить результирующие параметры в return
go.fix.change.result.parameters.in.variable.specification.name=Изменить результирующие параметры в спецификации переменной
go.fix.change.result.parameters.name=Изменить результирующие параметры
go.fix.change.result.parameters.result.parameter={0,choice,0\#результирующих параметров|1\#результирующий параметр|2\#результирующих параметра}
go.fix.change.signature.from.function.type.name=Изменить сигнатуру из типа функции
go.fix.change.signature.from.function.type.text=Изменить сигнатуру {0} ''{1}'' на ({2}) ({3})
go.fix.change.signature.from.usage.add=Добавить ''{0}'' как {1,number,ordinal} {2} в {3} ''{4}''
go.fix.change.signature.from.usage.change=Изменить {0,number,ordinal} {1} в {2} ''{3}'' с ''{4}'' на ''{5}''
go.fix.change.signature.from.usage.mix=Изменить {0} в {1} ''{2}'' на ({3})
go.fix.change.signature.from.usage.remove=Удалить {0,number,ordinal} {1} из {2} ''{3}''
go.fix.change.signature.from.usage.text=Изменить сигнатуру из использования
go.fix.change.signature.to.expected.name=Изменить на ожидаемую сигнатуру
go.fix.choose.package.name=Выбрать имя пакета
go.fix.configure.go.sdk.text=Настроить Go SDK
go.fix.convert.double.quoted.string.to.raw.string=Преобразовать строку с двойными кавычками в сырую строку
go.fix.convert.int.to.rune=Преобразовать целое число в руну
go.fix.convert.int.to.string.using.conversion.call=Преобразовать целое число в строку используя вызов {0}
go.fix.convert.plus.build.comments.to.go.build.directive=Преобразовать комментарии //+build в директиву //go\:build
go.fix.convert.raw.string.to.double.quoted.string=Преобразовать сырую строку в строку с двойными кавычками
go.fix.convert.string.to.byte.name=Преобразовать строку в байт
go.fix.convert.to.expected.type.name=Преобразовать в
go.fix.convert.to.expected.type.text=Преобразовать в ''{0}''
go.fix.convert.to.format.function.name=Изменить на функцию форматования
go.fix.convert.to.format.function.text=Изменить ''{0}'' на функцию форматования
go.fix.convert.to.is.equal.name=Преобразовать в '\=\='
go.fix.create.directory.text=Создать директорию {0} в {1}
go.fix.create.wrapper.type.name=Создать тип
go.fix.delete.all.unused.parameters.name=Удалить все неиспользуемые параметры
go.fix.delete.ampersand.and.type.in.composite.lit.name=Удалить избыточный тип
go.fix.delete.blank.argument.name=Удалить пустой аргумент
go.fix.delete.conversion.name=Удалить преобразование
go.fix.delete.conversion.with.side.effects.name=Удалить преобразование (может изменить семантику)
go.fix.delete.extra.expressions.name=Удалить лишние выражения
go.fix.delete.import.name=Удалить импорт
go.fix.delete.name=Удалить {0}
go.fix.delete.parameter.names.name=Удалить имена параметров
go.fix.delete.range.name=Удалить элементы
go.fix.delete.redundant.capacity.hint.to.make=Удалить аргумент емкости
go.fix.delete.redundant.index.name=Удалить избыточный индекс
go.fix.delete.redundant.size.hint.to.make=Удалить аргумент размера
go.fix.delete.text=Удалить {0} ''{1}''
go.fix.delete.third.index.name=Удалить третий индекс
go.fix.delete.type.arguments.in.index.or.slice.expr=Удалить аргументы типа
go.fix.delete.type.arguments.name=Удалить аргументы типа
go.fix.delete.type.parameters.name=Удалить параметры типа
go.fix.delete.unused.parameter.name=Удалить неиспользуемый параметр
go.fix.dfa.exclude.from.error.may.be.not.nil.inspection.name=Исключить функцию из проверки nil ошибок
go.fix.dfa.exclude.from.error.may.be.not.nil.inspection.text=Исключить функцию ''{0}'' из проверки nil ошибок
go.fix.drop.suffix.name=Удалить суффикс для единиц измерения
go.fix.drop.suffix.text=Удалить суффикс ''{0}'' для единиц измерения
go.fix.empty.signature.name=Исправить сигнатуру
go.fix.enable.go.experiment=Включить Go эксперимент ''{0}''
go.fix.enable.gopath.indexing.name=Включить индексацию GOPATH
go.fix.error.string.format=Исправить формат строки ошибки
go.fix.exclude.from.unhandled.inspection.name=Больше не сообщать об этом методе/функции
go.fix.export.field.name=Экспортовать поле
go.fix.export.name=Экспортовать
go.fix.export.text=Экспортовать {0}
go.fix.extract.empty.slice.to.var.declaration.name=Заменить на объявление nil slice (изменит семантику)
go.fix.extract.to.own.declaration.name=Извлечь в отдельное объявление
go.fix.failed.to.handle.error=Не удалось обработать ошибку
go.fix.failed.to.introduce.variables.from.call=Не удалось создать переменные из вызова
go.fix.failed.to.resolve.called.function.signature=Не удалось определить сигнатуру из вызова
go.fix.failed.to.simplify.if.statement=Не удалось упростить оператор 'if'
go.fix.field.repeats.tag.with.value=Поле ''{0}'' повторяет тег ''{1}'' со значением ''{2}'' из поля ''{3}''
go.fix.field.with.the.same.tag=поле ''{0}'' с тем же тегом ''{1}''
go.fix.finish.call.name=Завершить выражение вызова
go.fix.handle.error.name=Обработать ошибку
go.fix.ignore.explicitly.name=Игнорировать явно
go.fix.ignore.explicitly.using.closure.name=Игнорировать явно с помощью замыкания
go.fix.ignore.unused.call.result.name=Игнорировать неиспользуемый результат вызова
go.fix.implement.missing.methods.name=Реализовать отсутствующие методы
go.fix.import.embed.package=Импортовать "embed"
go.fix.insert.blank.identifiers.name=Вставить пустые идентификаторы в левую часть оператора присваивания
go.fix.introduce.function.dot.import.conflict.message=Функция {0} конфликтует с точечным импортом {1}, имеющим то же имя
go.fix.introduce.function.field=Имя функции\:
go.fix.introduce.function.in.directory.label=В директории\:
go.fix.introduce.function.in.file.label=В файле\:
go.fix.introduce.function.name=Создать функцию
go.fix.introduce.function.ok.button.text=Создать
go.fix.introduce.function.test.name.conflict.message=Функция {0} конфликтует с тестом {1}, имеющим то же имя
go.fix.introduce.function.text=Создать функцию ''{0}''
go.fix.introduce.function.title=Создать функцию в пакете
go.fix.introduce.local.variable.for.expression=Создать локальную переменную для ''{0}''
go.fix.introduce.method.name=Создать метод
go.fix.introduce.method.text=Создать метод ''{0}''
go.fix.multiple.packages.command.name=Переименовать пакеты в {0}
go.fix.multiple.packages.name=Переименовать пакеты
go.fix.multiple.packages.text=Переименовать пакеты в {0}
go.fix.navigate.to.name=Перейти к
go.fix.navigate.to.text=Перейти к {0}
go.fix.optimize.imports.name=Оптимизовать импорты
go.fix.place.build.tag.before.package.name=Разместить build tag перед пакетом
go.fix.place.directive.before.package=Разместить {0} перед package
go.fix.remove.leading.whitespace.go.directive=Удалить начальные пробелы перед директивой Go
go.fix.remove.plus.build.comments=Удалить комментарии //+build
go.fix.remove.redundant.bool.literal.name=Упростить до
go.fix.rename.all.receivers.name=Переименовать все приемники
go.fix.rename.all.receivers.text=Переименовать все приемники в ''{0}''
go.fix.rename.to.blank=Переименовать в _
go.fix.rename.to.name=Переименовать в
go.fix.rename.to.text=Переименовать в ''{0}''
go.fix.replace.and.return=Заменить на ''{0}'' и ''return''
go.fix.replace.assign.with.equals.name=Заменить '\:\=' на '\='
go.fix.replace.equality.check.with.errors.is=Заменить проверку равенства на 'errors.Is'
go.fix.replace.equals.with.assign.name=Заменить на '\:\='
go.fix.replace.expression.name=Добавить '\\&' в начало
go.fix.replace.field.type.with.pointer=Заменить тип {0,choice,0\#полей|1\#поля|2\#полей} ''{1}'' на указатель
go.fix.replace.switch.on.errors.with.errors.is=Обновить оператор switch для использования 'errors.Is'
go.fix.replace.switch.on.types.with.errors.as=Обновить switch по типам для использования 'errors.As'
go.fix.replace.tilda.with.hat.name=Заменить '~' на '^'
go.fix.replace.type.assertion.with.errors.as=Заменить приведение типа на 'errors.As'
go.fix.replace.with.correct.defer.name=Заменить на корректную конструкцию defer
go.fix.replace.with.name=Заменить на
go.fix.replace.with.nil.with.side.effects.name=Заменить на nil (изменит семантику)
go.fix.replace.with.text=Заменить на ''{0}''
go.fix.searching.for.usages.progress.title=Поиск использований…
go.fix.signature.name=Исправить сигнатуру
go.fix.simplify.bool.expr.name=Упростить выражение
go.fix.simplify.expression.to.boolean.literal.name=Упростить условие
go.fix.simplify.something.to.text=Упростить ''{0}'' до ''{1}''
go.fix.simplify.to.text=Упростить до ''{0}''
go.fix.sort.imports=Сортировать импорты
go.fix.suppress.all.inspections.for.text=Подавить все проверки для {0}
go.fix.suppress.inspection.for.text=Подавить для {0}
go.fix.unpack.slice.name=Распаковать slice
go.fix.unwrap.parens.name=Убрать скобки
go.fix.update.plus.build.comments=Обновить комментарии //+build
go.fix.uppercase.type.parameter.name=Использовать заглавную букву для параметра типа
go.fix.uppercase.type.parameter.text=Использовать заглавную букву для параметра типа ''{0}''
go.fix.view.all.duplicates.name=Просмотр дублирующихся имен
go.fix.view.all.duplicates.targets.code.usages.string=Найдены дубликаты
go.fix.view.all.duplicates.targets.tab.text=Дубликаты ''{0}''
go.fix.view.all.duplicates.targets.tool.window.title={0} в {1}
go.fix.view.all.duplicates.text=Просмотр дублирующихся имен для ''{0}''
go.fix.wrap.error.handling.in.closure=Обернуть обработку ошибок в замыкание
go.fix.wrap.receiver.with.pointer=Изменить приемник метода на указатель
go.fmt.add.leading.space.to.comments=Добавить пробел перед комментариями
go.fmt.add.parentheses.for.single.import=Добавить скобки для одиночного импорта
go.fmt.create.local.group.label=Группа
go.fmt.fill.paragraph.width.label=Ширина столбца для заполнения абзаца\:
go.fmt.for.current.project.packages=Пакеты текущего проекта
go.fmt.for.imports.starting.with.prefix=Импорты, начинающиеся с\:
go.fmt.for.imports.starting.with.prefix.comment=Список префиксов через запятую, аналогично 'goimports -local'
go.fmt.formatting.service.error.title=Не удаётся запустить gofmt для {0}
go.fmt.group.stdlib.imports=Группировать пакеты из Go SDK
go.fmt.import.sorting.type=Тип сортировки
go.fmt.imports.prefix.error.empty.message=Префикс импорта не может быть пустым
go.fmt.imports.prefix.error.title=Неверный префикс импорта
go.fmt.imports.tab.title=Импорты
go.fmt.move.all.imports.in.single.declaration=Переместить все импорты в одно объявление
go.fmt.move.all.stdlib.imports.in.single.group=Переместить все пакеты в одну группу
go.fmt.remove.redundant.import.aliases=Удалить избыточные псевдонимы импорта
go.fmt.run.gofmt.on.code.reformat.label=При действии "Переформатовать код"
go.fmt.run.gofmt.panel.border.title=Запустить gofmt
go.fmt.use.back.quotes.for.imports=Использовать обратные кавычки для импортов
go.format.playground.could.not.format.message=Не удалось отформатовать код
go.generate.type.from.json.dialog.json.label=Вставьте JSON сюда\:
go.generate.type.from.json.dialog.ok.label=Сгенерировать
go.generate.type.from.json.dialog.title=Сгенерировать Go тип из JSON
go.generate.type.from.json.error.invalid.json=Невозможно сгенерировать go тип из некорректного JSON
go.generate.type.from.json.error.no.top.value=JSON должен иметь одно значение верхнего уровня
go.generate.type.from.json.on.paste.dialog.title=Сгенерировать Go тип из JSON
go.generate.type.from.json.on.paste.struct.fields.message=Вставленный текст похож на JSON. Хотите сгенерировать из него поля структуры?
go.generate.type.from.json.on.paste.type.message=Вставленный текст похож на JSON. Хотите сгенерировать из него Go тип?
go.generate.type.from.json.properties.on.paste.struct.fields.message=Вставленный текст похож на последовательность JSON свойств. Хотите сгенерировать из него поля структуры?
go.generate.type.from.json.properties.on.paste.type.message=Вставленный текст похож на последовательность JSON свойств. Хотите сгенерировать из него Go тип?
go.get.package.fix.family.name=Запустить 'go get'
go.go.inspection.problem.replace.can.be.migrated=Возможна миграция в рабочее пространство Go
go.go.mod.error.annotator.go.debug.min.go.version=Директива 'godebug' поддерживается начиная с версии Go 1.23
go.go.mod.error.annotator.missing.dependency=Отсутствует зависимость
go.go.mod.error.annotator.multiple.module.statements=Несколько операторов module в файле
go.go.mod.error.annotator.multiple.version.statements=Несколько операторов версии go в файле
go.go.mod.error.annotator.no.module.statement=Нет оператора module в файле
go.go.mod.error.annotator.unresolved.dependency=Неразрешённая зависимость
go.go.mod.error.module.version.expected=Ожидается версия модуля
go.go.mod.error.no.whitespace.expected=Пробелы здесь не разрешены
go.go.mod.error.prohibited.directive=Директива не разрешена в файлах go.mod
go.go.mod.retract.not.supported='retract' поддерживается начиная с Go 1.16
go.go.mod.retract.wrong.range.format=Диапазон версий должен иметь следующий формат\: '[start, end]'
go.go.mod.toolchain.not.supported='toolchain' поддерживается начиная с Go 1.21
go.go.work.error.prohibited.directive=Директива не разрешена в файлах go.work
go.go.work.error.unresolved.path=Неразрешённый путь
go.go.work.multiple.use.directives=Несколько директив 'use' можно объединить в одну
go.ignore.template.plugin.action.text=Игнорировать плагин для этого проекта
go.import.optimizer.removed.aliases=Удалено {0} {0,choice,1\#псевдоним|2\#псевдонима|5\#псевдонимов}
go.import.optimizer.removed.imports=Удалено {0} {0,choice,1\#импорт|2\#импорта|5\#импортов}
go.import.optimizer.removed.imports.and.aliases=Удалено {0} {0,choice,1\#импорт|2\#импорта|5\#импортов} и {1} {1,choice,1\#псевдоним|2\#псевдонима|5\#псевдонимов}
go.import.package.cannot.invoke.fix.with.ambiguous.imports.error=Невозможно применить исправление с неоднозначными импортами в редакторе {0}. Пакеты\: {1}
go.import.package.fix.family.name=Импортовать пакет
go.import.package.fix.text=Импортовать пакет
go.import.package.fix.text.many.variants=Импортовать {0} (несколько вариантов...)
go.import.package.fix.text.no.variants=Импортовать пакет
go.import.package.fix.text.single.variant=Импортовать {0}
go.import.package.popup.title=Пакет для импорта
go.index.entire.gopath.checkbox=Индексировать весь GOPATH
go.index.entire.gopath.tooltip=При отключении будут индексироваться только проект и пакеты из vendor.<br/>Это улучшает общую производительность, но делает невозможным использование пакетов из GOPATH.
go.init.with.zero.value=Инициализовать нулевым значением
go.inlays.display.constant.definition=Отображать значения определений констант
go.inlays.show.return.parameters.option=Показывать возвращаемые параметры
go.inlays.show.unnamed.fields.in.structure.values.option=Показывать неименованные поля в значениях структур
go.inspection.ambiguous.reference.message=Неоднозначная ссылка {0}
go.inspection.assignment.nil.without.explicit.type.message=Невозможно присвоить nil без явного типа
go.inspection.assignment.to.receiver.display.name=Присваивание получателю
go.inspection.bool.condition.display.name=Логическое условие
go.inspection.change.context.todo=Рекомендуется использовать четко определённый контекст
go.inspection.comment.has.no.leading.space.display.name=Комментарий без начального пробела
go.inspection.comment.of.exported.element.starts.with.incorrect.name.display.name=Комментарий экспортуемого элемента начинается с неверного имени
go.inspection.comment.should.be.meaningful.message=Комментарий должен быть осмысленным или его следует удалить
go.inspection.comment.should.be.without.article.message=Комментарий должен иметь формат ''{0} ...'' (с необязательным начальным артиклем)
go.inspection.comment.should.have.package.prefix.message=Комментарий пакета должен иметь форму ''Package {0} ...''
go.inspection.convert.string.literals.display.name=Преобразовать строковые литералы
go.inspection.cyclic.imports.name=Циклические импорты
go.inspection.defer.go.statement.calls.recover.or.panic.directly.display.name=Оператор defer/go напрямую вызывает 'recover' или 'panic'
go.inspection.defer.in.loop.display.name='defer' в цикле
go.inspection.defer.or.go.should.not.call.function.message={0} не должен напрямую вызывать {1}
go.inspection.deprecated.element.display.name=Устаревший элемент
go.inspection.dfa.constant.conditions.name=Константное условие
go.inspection.dfa.error.may.be.not.nil.name=Ошибка может быть не nil
go.inspection.dfa.name=Анализ потока данных
go.inspection.dfa.potential.nil.dereference.name=Возможное разыменование nil
go.inspection.direct.comparison.of.errors.display.name=Прямое сравнение ошибок
go.inspection.discarded.context.cancel.function=Функция отмены должна быть вызвана, а не отброшена, чтобы избежать утечки контекста
go.inspection.division.by.zero.display.name=Деление на ноль
go.inspection.empty.declaration.display.name=Пустое объявление
go.inspection.empty.declaration.message=Пустое объявление {0}
go.inspection.empty.slice.declared.via.literal.display.name=Пустой slice объявлен через литерал
go.inspection.error.string.should.not.be.capitalized.or.end.with.punctuation.display.name=Строка ошибки не должна начинаться с заглавной буквы или заканчиваться знаком пунктуации
go.inspection.exceeded.shift.expression.display.name=Превышено выражение сдвига
go.inspection.execution.ends.without.context.cancel.function.after.instruction=Выполнение может завершиться после этой инструкции без вызова функции ''{0}'', что приводит к утечке контекста
go.inspection.execution.ends.without.context.cancel.function.after.statement=Выполнение может завершиться после оператора ''{0}'' без вызова функции ''{1}'', что приводит к утечке контекста
go.inspection.expected.colon.after.key=Ожидается '\:' после ключа
go.inspection.expected.opening.double.quote.character.after.colon=Ожидается открывающая двойная кавычка после '\:'
go.inspection.explicit.dereference.accessing.field.message=Доступ к полю {0} из {1} (тип {2}) требует явного разыменования
go.inspection.explicit.dereference.calling.method.with.receiver.message=Вызов метода {0} с получателем {1} (тип {2}) требует явного разыменования
go.inspection.exported.element.should.have.comment.display.name=Экспортуемый элемент должен иметь комментарий
go.inspection.exported.element.should.have.its.own.declaration.display.name=Экспортуемый элемент должен иметь собственное объявление
go.inspection.extended.method.expression.syntax.before.go.1.10.message=Неожиданный тип получателя, синтаксис для расширенных выражений методов доступен с Go 1.10
go.inspection.fail.now.called.from.non.test.goroutine=Этот метод должен вызываться из goroutine, выполняющей тест или бенчмарк
go.inspection.fail.now.in.non.test.goroutine='FailNow' в не тестовой goroutine
go.inspection.function.returns.without.calling.context.cancel.function=Существует путь выполнения, который не вызывает эту функцию отмены, что приводит к утечке контекста
go.inspection.go.debug.after.package=Директива 'go\:debug' должна быть размещена перед объявлением пакета
go.inspection.go.debug.min.go.sdk=Директива 'go\:debug' игнорируется в версиях Go ниже 1.21
go.inspection.go.debug.not.in.main.or.test.package=Директива 'go\:debug' может быть определена только в пакетах 'main' или '_test'
go.inspection.imported.package.name.as.name.identifier.display.name=Импортованное имя пакета как идентификатор имени
go.inspection.impossible.interface.type.assertion=Невозможное приведение типа интерфейса
go.inspection.incorrect.call.to.unmarshal.display.name='Unmarshal' вызван с неверным аргументом
go.inspection.incorrect.strings.replace.count.argument.display.name=Неверный аргумент count в 'strings.Replace'
go.inspection.incorrect.usage.of.printf.display.name=Неверное использование функций 'fmt.Printf' и 'fmt.Println'
go.inspection.incorrect.usage.of.the.errors.as.function.display.name=Неверное использование функции 'errors.As'
go.inspection.incorrect.usage.of.the.sync.atomic.display.name=Неверное использование пакета 'sync/atomic'
go.inspection.infinite.for.loop.display.name=Бесконечный цикл 'for'
go.inspection.int.to.string.conversion=Преобразование целого числа в строку
go.inspection.invalid.conversions.of.uintptr.to.unsafe.Pointer=Неверное преобразование 'uintptr' в 'unsafe.Pointer'
go.inspection.key.is.empty.or.starts.from.incorrect.symbol=Ключ пуст или начинается с некорректного символа
go.inspection.key.is.not.separated.by.space.from.previous.pair=Ключ не отделен пробелом от предыдущей пары
go.inspection.leading.whitespace.in.directive.comment=Начальные пробелы в директивном комментарии
go.inspection.locks.mistakenly.passed.by.value=Локи ошибочно переданы по значению
go.inspection.loop.closure.display.name=Переменные цикла захвачены литералом функции
go.inspection.loop.closure.message=Переменные цикла, захваченные литералами <code>func</code> в операторах <code>{0}</code>, могут иметь неожиданные значения
go.inspection.lost.cancel='context.CancelFunc' не вызвана
go.inspection.malformed.build.tag.display.name=Некорректный тег сборки
go.inspection.malformed.struct.tag.display.name=Некорректный тег структуры
go.inspection.missing.closing.double.quote.character.in.value=Отсутствует закрывающая двойная кавычка в значении
go.inspection.missing.trailing.comma.before.newline.in.composite.literal.display.name=Отсутствует замыкающая запятая перед переносом строки в составном литерале
go.inspection.mixed.receiver.types=Структура {0} имеет методы как для значений, так и для указателей. Такое использование не рекомендуется документацией Go.
go.inspection.mixed.receiver.types.display.name=Смешанные приемники значений и указателей
go.inspection.name.starts.with.package.name.display.name=Имя начинается с имени пакета
go.inspection.nilness.analyzer.display.name=Анализатор nil-значений
go.inspection.non-standard.signature.for.well.known.function.names.display.name=Нестандартная сигнатура для известных имен функций
go.inspection.options.panel.exclude=Исключить\:
go.inspection.options.panel.function.name=Имя функции
go.inspection.options.panel.import.path=Путь импорта
go.inspection.options.panel.method.name=Имя метода
go.inspection.options.panel.receiver=Приемник
go.inspection.options.panel.reported.functions=Отслеживаемые функции/методы\:
go.inspection.options.panel.string.methods=Строковые методы\:
go.inspection.possible.misuse.of.unsafe.pointer=Возможное некорректное использование {0}
go.inspection.problem.accessing.field.may.lead.to.nil.pointer.dereference=Доступ к полю {0} может привести к разыменованию nil-указателя
go.inspection.problem.argument.causes.recursive.call.to.string.method=Аргумент {0} вызывает рекурсивный вызов метода {1}
go.inspection.problem.argument.is.not.a.function.call=Аргумент {0} не является вызовом функции
go.inspection.problem.assignment.copies.lock.value=Присваивание копирует значение блокировки в {0}\: {1}
go.inspection.problem.assignment.to.entry.may.panic.because.of.nil.map=Присваивание элементу может вызвать panic из-за nil map {0}
go.inspection.problem.assignment.to.method.receiver.doesnt.propagate=Присваивание приемнику метода не распространяется на другие вызовы
go.inspection.problem.assignment.to.method.receiver.propagates.only.to.callees=Присваивание приемнику метода распространяется только на вызываемые функции, но не на вызывающие
go.inspection.problem.assignment.used.as.value={0} используется как значение
go.inspection.problem.at.is.not.allowed.in.import.paths=@ не допускается в путях импорта
go.inspection.problem.bad.count.argument.of.strings.replace=Аргумент count в {0} не должен быть {1}
go.inspection.problem.bad.error.string=Строка ошибки не должна начинаться с заглавной буквы или заканчиваться знаком пунктуации
go.inspection.problem.build.constraints.exclude.all.go.files=Ограничения сборки исключают все Go-файлы в {0}
go.inspection.problem.call.copies.lock.value=Вызов {0} копирует значение блокировки\: {1}
go.inspection.problem.cannot.assign.in.multiple.assignment=Невозможно присвоить {0} в {1} при множественном присваивании
go.inspection.problem.cannot.assign.value.to.blank.field=Невозможно присвоить значение пустому полю
go.inspection.problem.cannot.assign.value.to.unexported.field=Невозможно присвоить значение неэкспортуемому полю {0}
go.inspection.problem.cannot.call.non.function=Невозможно вызвать нефункцию {0} типа {1}
go.inspection.problem.cannot.convert.constant=Недопустимая операция\: {0} (невозможно преобразовать константу {1} в тип {2})
go.inspection.problem.cannot.convert.expression=Невозможно преобразовать выражение типа {0} в тип {1}
go.inspection.problem.cannot.convert.known.value.to.type=Невозможно преобразовать {0} в {1}
go.inspection.problem.cannot.convert.nil=Невозможно преобразовать ''nil'' в тип {0}
go.inspection.problem.cannot.convert.nil.to.type=Невозможно преобразовать {0} в тип {1}
go.inspection.problem.cannot.convert.value.to.type=Невозможно преобразовать значение в {0}
go.inspection.problem.cannot.import=Невозможно импортовать {0}
go.inspection.problem.cannot.import.absolute.path=Невозможно импортовать абсолютный путь
go.inspection.problem.cannot.import.builtin.package=Невозможно импортовать пакет 'builtin'
go.inspection.problem.cannot.range=Невозможно итерироваться по {0}
go.inspection.problem.cannot.rename.import.c=Невозможно переименовать импорт 'C'
go.inspection.problem.cannot.slice=Невозможно получить срез {0} (тип {1})
go.inspection.problem.cannot.take.address=Невозможно получить адрес {0}
go.inspection.problem.cannot.take.address.of.non.addressable.operand=Невозможно получить адрес неадресуемого операнда
go.inspection.problem.cannot.use.underscore.as.value=Невозможно использовать {0} как значение
go.inspection.problem.comment.should.start.with.whitespace=Комментарий должен начинаться с пробела
go.inspection.problem.comparison.with.errors.using.equality.fails.on.wrapped.errors=Сравнение с ошибками с помощью операторов равенства не работает для обернутых ошибок
go.inspection.problem.condition.is.always.true.or.false=Условие {0} всегда {1}
go.inspection.problem.condition.is.always.true.or.false.because.of.nil=Условие всегда {0}, так как {1} всегда {2}
go.inspection.problem.condition.is.always.true.or.false.because.of.not.nil=Условие всегда {0}, так как {1} всегда не {2}
go.inspection.problem.condition.is.always.true.or.false.without.condition=Условие всегда {0}
go.inspection.problem.contains=содержит
go.inspection.problem.conversion.from.int.to.string=Преобразование из {0} в {1} интерпретирует целочисленное значение как код символа
go.inspection.problem.convert.string.literals=Преобразовать строковые литералы
go.inspection.problem.corresponding.error.may.be.not.nil={0} может иметь значение {1} или другое неожиданное значение, так как соответствующая переменная ошибки может быть не {2}
go.inspection.problem.corresponding.error.may.be.not.nil.with.explanation={0} может иметь значение {1} или другое неожиданное значение, так как соответствующая ошибка {2} {3} может быть не {4}
go.inspection.problem.cyclic.imports.not.allowed=<html><body>Циклические импорты не допускаются\:<br><br>{0}</body></html>
go.inspection.problem.cyclic.imports.pkg.in.file.imports={0} (в файле {1}) ->
go.inspection.problem.declaration.shadows.declaration=Объявление {0} затеняет другое объявление
go.inspection.problem.declaration.shadows.declaration.at=Объявление {0} затеняет объявление в {1}
go.inspection.problem.defer.is.called.in.a.for.loop=Возможная утечка ресурсов, {0} вызывается в цикле {1}
go.inspection.problem.deprecated.is.still.used=Устаревший {0} все еще используется
go.inspection.problem.direct.assignment.to.atomic.value=Прямое присваивание атомарному значению
go.inspection.problem.division.by.zero=Деление на ноль
go.inspection.problem.duplicate.argument=Дублирующийся аргумент {0}
go.inspection.problem.duplicate.case=Дублирующийся case {0}
go.inspection.problem.duplicate.field=Дублирующееся поле {0}
go.inspection.problem.duplicate.index=Дублирующийся индекс\: {0}
go.inspection.problem.duplicate.key.in.map.literal=Дублирующийся ключ {0} в литерале map
go.inspection.problem.duplicate.method=Дублирующийся метод {0}
go.inspection.problem.duplicate.type.param=Дублирующийся параметр типа {0}
go.inspection.problem.eliminate.snake.case=Устранить snake_case
go.inspection.problem.empty.interface.usage=Использование 'interface{}' в качестве типа
go.inspection.problem.empty.slice.declaration.via.literal=Объявление пустого среза с использованием литерала
go.inspection.problem.example.for.unknown.field.or.method=Пример ссылается на неизвестное поле или метод\: {0}.{1}
go.inspection.problem.example.for.unknown.identifier=Пример ссылается на неизвестный идентификатор\: {0}
go.inspection.problem.exported.const.should.have.its.own.declaration=Экспортуемая константа {0} должна иметь собственное объявление
go.inspection.problem.exported.element.should.have.comment=Экспортуемый {0} {1} должен иметь комментарий или быть неэкспортуемым
go.inspection.problem.exported.function.with.unexported.return.type=Экспортуемый {0} с неэкспортуемым типом возвращаемого значения
go.inspection.problem.exported.var.should.have.its.own.declaration=Экспортуемая переменная {0} должна иметь собственное объявление
go.inspection.problem.expression.can.be.simplified=Выражение можно упростить
go.inspection.problem.expression.can.be.simplified.to.other={0} можно упростить до {1}
go.inspection.problem.expression.is.always.true.or.false=Выражение {0} всегда {1}
go.inspection.problem.expression.is.too.small.for.shift={0} ({1} бит) слишком мало для сдвига на {2}
go.inspection.problem.expression.with.type={0} (тип {1})
go.inspection.problem.fields.are.assigned.without.explicit.names=Полям присваиваются значения без явных имен
go.inspection.problem.fmt.parameter.with.non.integer.expression={0,choice,0\#Ширина|1\#Точность|2\#Спецификатор} указан с нецелочисленным выражением {1}{2}
go.inspection.problem.found.several.packages=Найдено несколько пакетов [{0}] в {1}
go.inspection.problem.function.call.may.lead.to.nil.pointer.dereference=Вызов функции {0} может привести к разыменованию nil-указателя
go.inspection.problem.function.does.not.take.writer=Функция не принимает {0}, но первый аргумент - {1}
go.inspection.problem.function.passes.lock.by.value={0} передает блокировку по значению\: {1}
go.inspection.problem.fuzzing.is.not.supported=Фаззинг поддерживается начиная с Go 1.18
go.inspection.problem.go.plus.build.empty.tag=Комментарий '+build' содержит пустой тег, эквивалентный тегу 'ignore'
go.inspection.problem.imports.are.not.sorted=Импорты не отсортированы
go.inspection.problem.impossible.interface.assertion=Невозможное приведение интерфейса от {0} к {1}. Неоднозначность\: {2}
go.inspection.problem.impossible.type.assertion=Невозможное приведение типа\: {0} не реализует {1}
go.inspection.problem.impossible.type.switch.case=Невозможный case в switch по типу\: {0} не реализует {1}
go.inspection.problem.incompatible.empty.type.set=Тип не реализует ограничение {0}, так как <b color\={1}>множество типов ограничения пусто</b>
go.inspection.problem.incompatible.method.has.pointer.receiver=Тип не реализует {0}, так как <b color\={1}>метод {2} имеет получатель-указатель</b>
go.inspection.problem.incompatible.need.method.have.method=Тип не реализует {0}<br/><b color\={1}>требуется метод\: {2}<br/>имеется метод\: {3}</b>
go.inspection.problem.incompatible.not.comparable=Тип не реализует ограничение {0}, так как <b color\={1}>тип не является сравнимым</b>
go.inspection.problem.incompatible.not.in.type.set=Тип не реализует ограничение {0}, так как <b color\={1}>тип не включен в множество типов ({2})</b>
go.inspection.problem.incompatible.types=Невозможно использовать {0} как тип {1}
go.inspection.problem.incompatible.types.ambiguous.methods=Тип не реализует {0}, так как <b color\={1}>{2} неоднозначны</b>
go.inspection.problem.incompatible.types.in.switch=Недопустимый case {0} в switch{1}
go.inspection.problem.incompatible.types.in.switch.on.expression=Недопустимый case {0} в switch по {1}{2}
go.inspection.problem.incompatible.types.some.methods.are.missing=Тип не реализует {0} <b color\={1}>так как отсутствуют некоторые методы\:<br/>{2}</b>
go.inspection.problem.incompatible.unexported.method=Тип не может реализовать {0}, так как <b color\={1}>имеет неэкспортуемый метод и определен в другом пакете</b>
go.inspection.problem.index.must.be.a.non.negative.integer.constant=Индекс {0} должен быть неотрицательной целочисленной константой
go.inspection.problem.index.out.of.bounds=Индекс вне границ\: {0}
go.inspection.problem.index.zero.is.illegal=Значение индекса [0] недопустимо{0}
go.inspection.problem.indexing.may.panic.because.of.nil.slice=Индексация может вызвать панику из-за среза {0}
go.inspection.problem.infinite.for.loop=Бесконечный цикл {0}
go.inspection.problem.invalid.argument.must.be.complex.type=Должен быть комплексным типом
go.inspection.problem.invalid.argument.must.be.send.channel.type=Должен быть двунаправленным каналом или каналом только для отправки
go.inspection.problem.invalid.composite.literal.type=Недопустимый тип составного литерала\: {0}
go.inspection.problem.invalid.conversion=Недопустимое преобразование
go.inspection.problem.invalid.conversion.type.comparable=Нельзя использовать интерфейс comparable в преобразовании
go.inspection.problem.invalid.conversion.type.with.constraints=Нельзя использовать интерфейс с ограничениями типа в преобразовании
go.inspection.problem.invalid.field.name=Недопустимое имя поля
go.inspection.problem.invalid.inc.dec.operation=Недопустимая операция\: {0} (ненумерический тип {1})
go.inspection.problem.invalid.indirect=Недопустимая косвенная ссылка {0} (тип {1})
go.inspection.problem.invalid.iterable.index=Недопустимый индекс {0} {1} ({2})
go.inspection.problem.invalid.low.high.indices=Недопустимые значения индексов, должно быть low <\= high
go.inspection.problem.invalid.low.high.max.indices=Недопустимые значения индексов, должно быть low <\= high <\= max
go.inspection.problem.invalid.operation.mismatched.types=Недопустимая операция\: {0} (несоответствие типов {1} и {2})
go.inspection.problem.invalid.receiver.interface.type=интерфейсным типом
go.inspection.problem.invalid.receiver.nonlocal.type=нелокальным типом
go.inspection.problem.invalid.receiver.pointer.type=указателем
go.inspection.problem.invalid.receiver.type=Недопустимый тип получателя {0} ({1} является {2})
go.inspection.problem.invalid.receiver.unnamed.type=безымянным типом
go.inspection.problem.invalid.recursive.type=Недопустимый рекурсивный {0} {1}{2}
go.inspection.problem.invalid.second.argument.to.errors.as=Второй аргумент {0} должен быть указателем на интерфейс или на тип, реализующий интерфейс error
go.inspection.problem.invalid.slice.index=Недопустимый индекс среза {0} ({1})
go.inspection.problem.invalid.unary.operation=Недопустимая операция\: {0}
go.inspection.problem.invalid.use.of.triple.dot=Недопустимое использование '...', соответствующий параметр не является вариадическим
go.inspection.problem.irregular.iota.usage=Нестандартное использование 'iota'
go.inspection.problem.label.already.defined=Метка {0} уже определена
go.inspection.problem.last.argument.ends.with.redundant.newline=Последний аргумент {0} заканчивается избыточным переносом строки
go.inspection.problem.leading.whitespace.in.directive.comment=Директивы Go должны следовать сразу после //, без пробелов между ними (например, //go\:embed)
go.inspection.problem.literal.copies.lock.value=Литерал копирует значение блокировки из {0}\: {1}
go.inspection.problem.malformed.benchmark.name=Неверный формат имени бенчмарка\: первая буква после 'Benchmark' не должна быть строчной
go.inspection.problem.malformed.example.suffix=Неверный формат имени примера\: суффикс {0} должен начинаться со строчной буквы
go.inspection.problem.malformed.test.name=Неверный формат имени теста\: первая буква после 'Test' не должна быть строчной
go.inspection.problem.method.call.may.lead.to.nil.pointer.dereference=Вызов метода {0} может привести к разыменованию нулевого указателя
go.inspection.problem.method.has.non.standard.signature=Метод {0} должен иметь сигнатуру {1}
go.inspection.problem.method.has.non.standard.signature.unwrap=Метод {0} должен иметь сигнатуру <code>Unwrap() error</code> или <code>Unwrap() []error</code>
go.inspection.problem.method.redeclared=Метод переопределен {0}
go.inspection.problem.mismatched.types=\ (несоответствие типов {0} и {1})
go.inspection.problem.mismatched.types.byte.and.string=Несоответствие типов\: byte и string
go.inspection.problem.missing.argument.to.conversion=Отсутствует аргумент для преобразования в {0}\: {1}
go.inspection.problem.missing.expression=Отсутствует выражение
go.inspection.problem.missing.key.in.map.literal=Отсутствует ключ в литерале map
go.inspection.problem.missing.return=Отсутствует оператор 'return' в конце функции
go.inspection.problem.missing.type.in.composite.literal=Отсутствует тип в составном литерале
go.inspection.problem.mixture.of.field=Смешение полей\: значения и инициализаторы значений
go.inspection.problem.multiple.packages.in.directory=Несколько пакетов в директории\: {0}
go.inspection.problem.must.be.imported.as=Должно быть импортовано как {0}
go.inspection.problem.must.be.non.negative=должно быть неотрицательным
go.inspection.problem.must.be.of.integer.type=должно быть целочисленного типа
go.inspection.problem.must.be.representable.by.int=значение должно быть представимо типом 'int'
go.inspection.problem.name.collides.with.builtin={0} {1} конфликтует со встроенным {2}
go.inspection.problem.name.collides.with.imported.package={0} {1} конфликтует с именем импортованного пакета
go.inspection.problem.name.collides.with.name.declared.in.this.package={0} конфликтует с именем, объявленным в этом пакете
go.inspection.problem.name.redeclared.as.imported.package={0} переопределено как имя импортованного пакета
go.inspection.problem.name.redeclared.in.this.block={0} переопределено в этом блоке
go.inspection.problem.name.redeclared.in.this.function={0} переопределено в этой функции
go.inspection.problem.name.redeclared.in.this.package={0} переопределено в этом пакете
go.inspection.problem.name.starts.with.package.name=Имя начинается с имени пакета
go.inspection.problem.need.trailing.comma.in.argument.list=Необходима завершающая запятая перед переносом строки в списке аргументов
go.inspection.problem.need.trailing.comma.in.composite.literal=Необходима завершающая запятая перед переносом строки в составном литерале
go.inspection.problem.need.trailing.comma.in.index.expression=Необходима завершающая запятая перед переносом строки в выражении индекса
go.inspection.problem.need.trailing.comma.in.parameter.list=Необходима завершающая запятая перед переносом строки в списке параметров
go.inspection.problem.need.trailing.comma.in.type.arguments.list=Необходима завершающая запятая перед переносом строки в списке аргументов типа
go.inspection.problem.need.trailing.comma.in.type.parameters.list=Необходима завершающая запятая перед переносом строки в списке параметров типа
go.inspection.problem.negative.index=Отрицательный индекс\: {0}
go.inspection.problem.negative.shift.count=Недопустимая операция\: {0} (отрицательное количество сдвигов)
go.inspection.problem.nil.is.not.allowed={0} не допускается. Должно быть {1}
go.inspection.problem.nil.loop.is.always.skipped=Цикл всегда пропускается, так как {0} всегда {1}
go.inspection.problem.no.argument.for.placeholder.part=Нет аргумента для {0,choice,0\#ширины|1\#точности|2\#спецификатора}\: индекс аргумента \= {1}, количество аргументов \= {2}{3}
go.inspection.problem.no.core.type.in.range.expression=Выражения range должны иметь <a href\="https\://go.dev/ref/spec\#Core_types">базовый тип</a>
go.inspection.problem.no.non.test.go.files=Пакет содержит только тестовые Go файлы\: {0}
go.inspection.problem.no.placeholders.in.format.string=Нет заполнителей в строке форматования
go.inspection.problem.non.bool.used.as.condition=Небулево значение {0} используется как условие
go.inspection.problem.non.canonical.import.path=Неканонический путь импорта\: {0} должен быть {1}
go.inspection.problem.non.enabled.rangefunc.exclude.iter.package.files=Все файлы в пакете 'iter' исключены из процесса сборки, так как эксперимент 'rangefunc' не включен.
go.inspection.problem.non.strict.comparability.not.supported=Базовые интерфейсы удовлетворяют правилам проверки типа 'comparable' начиная с Go 1.20
go.inspection.problem.not.enough.arguments.in.call=Недостаточно аргументов в вызове {0}
go.inspection.problem.not.enough.arguments.to.return=Недостаточно аргументов для return
go.inspection.problem.operator.not.defined=Недопустимая операция\: {0} (оператор {1} не определён для {2})
go.inspection.problem.out.of.bounds.for.array=выход за границы для массива из {0} элементов
go.inspection.problem.out.of.bounds.for.string=выход за границы для строки длиной {0} байт
go.inspection.problem.path.imports.package.that.expects.canonical.import={0} импортует пакет, который ожидает импорт "{1}"
go.inspection.problem.path.imports.package.with.invalid.import.comment={0} импортует пакет с некорректным комментарием импорта
go.inspection.problem.path.is.a.program.not.an.importable.package={0} является программой, а не импортуемым пакетом
go.inspection.problem.placeholder.argument.causes.recursive.call.to.string=Аргумент плейсхолдера вызывает рекурсивный вызов метода {0}{1}
go.inspection.problem.placeholder.argument.has.wrong.type=Аргумент плейсхолдера {0} имеет неверный тип {1}{2}
go.inspection.problem.placeholder.argument.is.not.a.function.call=Аргумент плейсхолдера не является вызовом функции{0}
go.inspection.problem.placeholder.syntax.error=Ошибка синтаксиса плейсхолдера{0}
go.inspection.problem.possible.formatting.directive=Возможная директива форматования в {0}
go.inspection.problem.possible.malformed.build.comment=Комментарий '+build' возможно некорректен
go.inspection.problem.possibly.redundant.type.conversion=Возможно избыточное преобразование типа
go.inspection.problem.possibly.unused.dependency=Возможно неиспользуемая зависимость
go.inspection.problem.potential.nil.pointer.dereference=Возможное разыменование нулевого указателя
go.inspection.problem.range.var.copies.lock=Переменная range {0} копирует блокировку\: {1}
go.inspection.problem.receive.from.non.chan.type=Недопустимая операция\: {0} (получение из не-chan типа {1})
go.inspection.problem.receive.from.send.only.type=Недопустимая операция\: {0} (получение из типа только для отправки {1})
go.inspection.problem.receive.may.block.because.of.nil.channel=Операция получения может заблокировать горутину из-за канала {0}
go.inspection.problem.receive.no.core.type=Недопустимая операция\: {0} (нет базового типа для выражения {1} типа {2})
go.inspection.problem.receiver.has.generic.name=Приёмник имеет обобщённое имя
go.inspection.problem.receiver.may.be.nil.in.call=Приёмник {0} может быть {1} при вызове
go.inspection.problem.receiver.names.are.different=Имена приёмников различаются
go.inspection.problem.redundant.alias=Избыточный алиас
go.inspection.problem.redundant.blank.expression=Избыточное выражение {0}
go.inspection.problem.redundant.comma=Избыточная запятая
go.inspection.problem.redundant.for.condition=Условие избыточно
go.inspection.problem.redundant.index=Избыточный индекс {0}
go.inspection.problem.redundant.parentheses=Избыточные скобки
go.inspection.problem.redundant.semicolon=Избыточная точка с запятой
go.inspection.problem.redundant.type=Избыточный тип
go.inspection.problem.redundant.type.conversion=Избыточное преобразование типа
go.inspection.problem.reference.is.deprecated={0} устарел
go.inspection.problem.reference.jumps.over.declaration={0} перепрыгивает через объявление {1}
go.inspection.problem.return.copies.lock.value=Return копирует значение блокировки\: {0}
go.inspection.problem.return.value.has.a.function.type=Возвращаемое значение {0} имеет функциональный тип
go.inspection.problem.return.value.of.placeholder.argument.has.a.function.type=Возвращаемое значение аргумента плейсхолдера имеет функциональный тип{0}
go.inspection.problem.self.import.is.not.allowed=Самоимпорт не разрешён
go.inspection.problem.send.may.block.because.of.nil.channel=Операция отправки может заблокировать горутину из-за канала {0}
go.inspection.problem.send.to.non.chan.type=Недопустимая операция\: {0} (отправка в не-chan тип {1})
go.inspection.problem.send.to.receive.only.type=Недопустимая операция\: {0} (отправка в тип только для получения {1})
go.inspection.problem.shift.count.must.be.integer=Недопустимая операция\: {0} (тип счётчика сдвига {1} должен быть целым числом)
go.inspection.problem.shift.count.must.be.unsigned.integer=Недопустимая операция\: {0} (тип счётчика сдвига {1} должен быть беззнаковым целым)
go.inspection.problem.switch.on.error.fails.on.wrapped.errors=Сравнение с ошибками в операторах switch не работает для обёрнутых ошибок
go.inspection.problem.this.verb.can.be.used.only.in.fmt.errorf=Этот глагол может использоваться только в вызовах {0}{1}
go.inspection.problem.this.verb.can.be.used.only.once.in.a.format.string=Этот глагол может использоваться только один раз в строке форматования{0}
go.inspection.problem.too.few.values=Слишком мало значений
go.inspection.problem.too.many.arguments.for.format.string=Слишком много аргументов для строки форматования\: ожидается \= {0}, фактически \= {1}
go.inspection.problem.too.many.arguments.in.call=Слишком много аргументов в вызове {0}
go.inspection.problem.too.many.arguments.to.conversion=Слишком много аргументов для преобразования в {0}\: {1}
go.inspection.problem.too.many.arguments.to.return=Слишком много аргументов для return
go.inspection.problem.too.many.values=Слишком много значений
go.inspection.problem.type.assertion.on.errors.fails.on.wrapped.errors=Утверждение типа для ошибок не работает для обёрнутых ошибок
go.inspection.problem.type.does.not.support.indexing=Недопустимая операция\: {0} (тип {1} не поддерживает индексацию)
go.inspection.problem.type.has.both.field.and.method.with.name=Тип {0} имеет и поле, и метод с именем {1}
go.inspection.problem.type.has.same.named.field.and.method=Тип {0} имеет и поле, и метод с именем {1}
go.inspection.problem.type.is.sync.locker=тип %s является <code>sync.Locker</code>
go.inspection.problem.type.or.type={0} или {1}
go.inspection.problem.type.parameters.are.not.supported=Параметры типа не поддерживаются
go.inspection.problem.type.switch.on.errors.fails.on.wrapped.errors=Type switch для ошибок не работает для обёрнутых ошибок
go.inspection.problem.type.which.is.sync.locker=тип %s, который является <code>sync.Locker</code>
go.inspection.problem.unhandled.error=Необработанная ошибка
go.inspection.problem.unit.specific.suffix=Суффикс, специфичный для модуля {0}
go.inspection.problem.unknown.verb=Неизвестный глагол {0}{1}
go.inspection.problem.unmarshal.argument.must.be.a.pointer=Этот аргумент должен быть указателем
go.inspection.problem.unnecessarily.exported.element=Излишне экспортованный {0} {1}
go.inspection.problem.unreachable.code=Недостижимый код
go.inspection.problem.unused.dependency=Неиспользуемая зависимость
go.inspection.problem.unused.import=Неиспользуемый импорт
go.inspection.problem.unused.result=Неиспользуемый результат\: {0}
go.inspection.problem.usage.of.cgo.in.tests=Использование cgo в тестах не поддерживается
go.inspection.problem.use.camelcase.instead.of.snake.case=Используйте camelCase вместо snake_case
go.inspection.problem.use.of.internal.package.is.not.allowed=Использование внутреннего пакета не разрешено
go.inspection.problem.use.of.vendored.package.is.not.allowed=Использование вендорного пакета не разрешено
go.inspection.problem.value.is.assigned.to.itself=Значение {0} присваивается самому себе
go.inspection.problem.variable.declaration.copies.lock.value=Объявление переменной копирует значение блокировки в {0}\: {1}
go.inspection.problem.variable.repeated.on.left.side={0} повторяется в левой части \:\=
go.inspection.problem.verb.will.ignore.flag=Глагол проигнорирует флаг {0}{1}
go.inspection.problem.verb.will.ignore.flags=Глагол проигнорирует флаги {0}{1}
go.inspection.problem.wrong.example.signature=Неверная сигнатура примера
go.inspection.problem.wrong.location.of.build.comment=Комментарий 'build' должен находиться перед объявлением пакета и за ним должна следовать пустая строка
go.inspection.problem.wrong.test.signature=Неверная сигнатура теста
go.inspection.problematic.execution.path.end=конец проблемного пути выполнения
go.inspection.receiver.has.generic.name.display.name=Приёмник имеет обобщённое имя
go.inspection.redundant.blank.argument.in.range.display.name=Избыточный пустой аргумент в range
go.inspection.redundant.comma.display.name=Избыточная запятая
go.inspection.redundant.import.alias.display.name=Избыточный алиас импорта
go.inspection.redundant.parentheses.display.name=Избыточные скобки
go.inspection.redundant.second.index.in.slices.display.name=Избыточный второй индекс в слайсах
go.inspection.redundant.semicolon.display.name=Избыточная точка с запятой
go.inspection.redundant.true.in.for.loop.display.name=Избыточное 'true' в условии цикла for
go.inspection.redundant.type.conversion.display.name=Избыточное преобразование типа
go.inspection.redundant.types.in.composite.literals.display.name=Избыточные типы в составных литералах
go.inspection.reserved.word.used.as.name.display.name=Зарезервированное слово используется как имя
go.inspection.self.assignment.display.name=Самоприсваивание
go.inspection.shadowing.variable.display.name=Затенение переменной
go.inspection.struct.field.has.tag.but.is.not.exported=Поле структуры ''{0}'' имеет тег ''{1}'', но не экспортовано
go.inspection.struct.initialization.settings.report.for.literals.without.type.checkbox=Сообщать о литералах структур без типов
go.inspection.struct.initialization.settings.report.for.local.type.checkbox=Сообщать о типах, определённых в текущем пакете
go.inspection.struct.initialization.without.field.names.display.name=Инициализация структуры без имён полей
go.inspection.struct.tag.value.consists.only.of.spaces=Значение тега структуры состоит только из пробелов
go.inspection.suspicious.extra.space.in.struct.tag.value=Подозрительный лишний пробел в значении тега структуры
go.inspection.suspicious.space.in.struct.tag.value=Подозрительный пробел в значении тега структуры
go.inspection.suspicious.space.in.the.beginning.of.the.struct.tag.value=Подозрительный пробел в начале значения тега структуры
go.inspection.suspicious.space.in.the.end.of.the.struct.tag.value=Подозрительный пробел в конце значения тега структуры
go.inspection.switch.missing.cases.family=Отсутствуют операторы 'case' в 'switch'
go.inspection.switch.missing.iota.const.cases=Отсутствуют операторы 'case' для констант 'iota' в 'switch'
go.inspection.switch.missing.iota.const.cases.create.cases.fix=Создать отсутствующие {0,choice,0\#предложения|1\#предложение|2\#предложения} iota
go.inspection.switch.missing.iota.const.cases.insert.default.fix=Создать предложение 'default'
go.inspection.test.name.display.name=Некорректное имя тестовой функции
go.inspection.type.can.be.omitted.display.name=Тип может быть опущен
go.inspection.type.can.be.omitted.message=Тип может быть опущен
go.inspection.type.parameter.declared.in.lower.case.display.name=Параметр типа объявлен в нижнем регистре
go.inspection.type.parameter.declared.in.lower.case.message=Параметр типа ''{0}'' объявлен в нижнем регистре
go.inspection.unexported.return.type.of.exported.function.display.name=Неэкспортуемый тип возвращаемого значения экспортуемой функции
go.inspection.unhandled.error.display.name=Необработанная ошибка
go.inspection.unit.specific.suffix.for.time.duration.display.name=Суффикс единицы измерения для 'time.Duration'
go.inspection.unknown.field.message=Неизвестное поле {0} в литерале структуры
go.inspection.unnecessarily.exported.identifier.display.name=Излишне экспортуемый идентификатор
go.inspection.unreachable.code.display.name=Недостижимый код
go.inspection.unresolved.disabled.gopath.indexing.display.name=Отключенное индексирование GOPATH
go.inspection.unresolved.disabled.gopath.indexing.message=Отключенное индексирование GOPATH может помешать корректному разрешению ссылок
go.inspection.unresolved.label.message=Неразрешённая метка {0}
go.inspection.unresolved.reference.message=Неразрешённая ссылка {0}
go.inspection.unresolved.type.message=Неразрешённый тип {0}
go.inspection.unsorted.imports.display.name=Несортированные импорты
go.inspection.unused.constant.display.name=Неиспользуемая константа
go.inspection.unused.constant.message=Неиспользуемая константа {0}
go.inspection.unused.exported.function.display.name=Неиспользуемая экспортуемая функция
go.inspection.unused.exported.type.display.name=Неиспользуемый экспортуемый тип
go.inspection.unused.function.display.name=Неиспользуемая функция
go.inspection.unused.function.message=Неиспользуемая функция {0}
go.inspection.unused.function.or.method.call.result.display.name=Неиспользуемый результат вызова функции или метода
go.inspection.unused.global.variable.display.name=Неиспользуемая глобальная переменная
go.inspection.unused.label.message=Неиспользуемая метка {0}
go.inspection.unused.parameter.display.name=Неиспользуемый параметр
go.inspection.unused.parameter.message=Неиспользуемый параметр {0}
go.inspection.unused.type.display.name=Неиспользуемый тип
go.inspection.unused.type.message=Неиспользуемый тип {0}
go.inspection.unused.type.parameter.display.name=Неиспользуемый параметр типа
go.inspection.unused.type.parameter.message=Неиспользуемый параметр типа {0}
go.inspection.unused.variable.message=Неиспользуемая переменная {0}
go.inspection.usage.of.context.todo=Использование context.TODO()
go.inspection.usage.of.snake.case.display.name=Использование Snake_Case [_C]
go.install.template.plugin.action.text=Установить плагин
go.install.template.plugin.notification.text=Установить Go Template для улучшения подсветки, автодополнения и навигации в пакете html/templates
go.intention.add.declaration.parens.name=Добавить скобки к объявлению
go.intention.add.dot.import.alias.name=Добавить точечный псевдоним импорта
go.intention.add.fmt.string.argument.name=Добавить аргумент форматной строки
go.intention.add.import.alias.name=Добавить псевдоним импорта
go.intention.add.method.to.implementations.template.add.to.interface.inlay.suffix=добавить метод в интерфейс
go.intention.add.method.to.implementations.template.next.field.inlay.suffix=перейти к следующему полю шаблона метода
go.intention.add.method.to.implementations.title=Добавить метод {0} в реализации
go.intention.add.method.to.interface=Добавить метод в интерфейс и все его реализации
go.intention.add.method.to.interface.error.hint.message=Метод {0} уже существует
go.intention.add.method.to.interface.error.hint.title=Невозможно добавить метод в интерфейс
go.intention.add.tag.key=Добавить ключ к тегам
go.intention.change.field.name.style.command=Изменить стиль имени поля в тегах
go.intention.change.field.name.style.in.tags=Изменить стиль имени поля в тегах
go.intention.change.field.name.style.select.style=Выберите стиль имени поля\:
go.intention.chop.arguments=Разместить аргументы на отдельных строках
go.intention.chop.composite.literal.elements=Разместить элементы на отдельных строках
go.intention.chop.parameters=Разместить параметры на отдельных строках
go.intention.convert.to.short.var.declaration.name=Преобразовать в краткое объявление переменной
go.intention.convert.to.var.declaration.name=Преобразовать в объявление переменной
go.intention.create.field.getter.and.setter.command.name=Создать аксессор поля
go.intention.create.field.getter.and.setter.name=Сгенерировать геттер и сеттер
go.intention.create.field.getter.name=Создать геттер
go.intention.create.field.setter.name=Создать сеттер
go.intention.download.all.missing.modules.fix.text=Загрузить все модули в кэш модулей
go.intention.download.single.missing.module.fix.family.name=Загрузить модуль в кэш модулей
go.intention.download.single.missing.module.fix.from.replacement.text=Загрузить {0} из {1} в кэш модулей
go.intention.download.single.missing.module.fix.text=Загрузить {0} в кэш модулей
go.intention.exclude.fmt.function.name=Исключить функцию форматования строк
go.intention.expand.signature.types.name=Развернуть типы сигнатуры
go.intention.export.name=Экспортовать
go.intention.fill.all.fields.command.name=Заполнить структуру
go.intention.fill.all.fields.enforce.multiline.checkbox=Принудительно многострочно
go.intention.fill.all.fields.name=Заполнить все поля
go.intention.fill.all.fields.recursively.checkbox=Рекурсивно
go.intention.fill.all.fields.recursively.name=Рекурсивно заполнить все поля
go.intention.fill.fields.name=Заполнить поля…
go.intention.flip.binary.operator.changes.operator.text=Инвертировать ''{0}'' в ''{1}''
go.intention.flip.binary.operator.changes.semantics.text=Инвертировать ''{0}'' (изменяет семантику)
go.intention.flip.binary.operator.name=Инвертировать бинарный оператор
go.intention.flip.binary.operator.text=Инвертировать ''{0}''
go.intention.fmt.string.argument.bad.position.error.message=Неверная позиция
go.intention.fmt.string.argument.explicit.indices.error.message=Строка имеет явные индексы
go.intention.fmt.string.argument.percent.with.args.error.message=Строка имеет %% с аргументами
go.intention.fmt.string.argument.syntax.error.message=Строка содержит синтаксические ошибки
go.intention.fmt.string.argument.too.few.arguments.error.message=Строка имеет слишком мало аргументов
go.intention.fmt.string.argument.variadic.arg.error.message=Строка имеет аргумент ...
go.intention.fmt.string.title.error.message=Невозможно добавить аргумент форматной строки
go.intention.generate.constructor.name=Создать конструктор
go.intention.generate.method.name=Сгенерировать метод
go.intention.generate.struct.fields.from.json=Сгенерировать поля структуры из JSON
go.intention.generate.struct.fields.from.json.error=Значение верхнего уровня JSON должно быть объектом или массивом объектов
go.intention.generate.type.from.json=Сгенерировать тип из JSON
go.intention.go.to.implementation.name=Перейти к реализациям
go.intention.go.to.implementation.text=Перейти к реализациям…
go.intention.go.to.super.name=Перейти к интерфейсу
go.intention.go.to.super.text=Перейти к интерфейсу…
go.intention.implement.interface.name=Реализовать интерфейс
go.intention.implement.interface.text=Реализовать интерфейс…
go.intention.include.fmt.function.name=Отметить как функцию форматования строк
go.intention.invert.if.name=Инвертировать if
go.intention.join.arguments=Поместить аргументы на одну строку
go.intention.join.composite.literal.elements=Поместить элементы на одну строку
go.intention.join.parameters=Поместить параметры на одну строку
go.intention.merge.all.declarations.name=Объединить все объявления
go.intention.merge.declaration.up.name=Объединить объявление вверх
go.intention.merge.declarations.by.comma.name=Объединить объявление вверх через запятую
go.intention.migrate.function.parameter.to.method.receiver=Перенести параметр функции в метод-приёмник
go.intention.migrate.function.parameter.to.method.receiver.error.hint.invalid.receiver.type=Результирующий тип приёмника {0} будет недействительным ({1} является {2}).
go.intention.migrate.function.parameter.to.method.receiver.error.hint.message=Невозможно перенести параметр функции в метод-приёмник.\n{0}
go.intention.migrate.function.parameter.to.method.receiver.error.hint.method.with.type.parameter=Результирующий метод будет недействительным, так как методы не должны иметь параметров типа.
go.intention.migrate.function.parameter.to.method.receiver.error.hint.title=Не удалось перенести параметр функции в метод-приёмник
go.intention.migrate.function.parameter.to.method.receiver.name=Перенести параметр функции в метод-приёмник
go.intention.migrate.method.receiver.to.function.parameter=Перенести метод-приёмник в параметр функции
go.intention.move.to.struct.initialization.name=Переместить присваивание поля в инициализацию структуры
go.intention.negate.boolean.expression.name=Инвертировать выражение
go.intention.negate.boolean.expression.name.recursively.suffix=рекурсивно
go.intention.negate.boolean.expression.text=Инвертировать ''{0}'' в ''{1}''
go.intention.negate.boolean.topmost.expression.name=Инвертировать верхнее выражение
go.intention.negate.boolean.topmost.expression.text=Инвертировать верхнее ''{0}'' в ''{1}''
go.intention.remove.declaration.parens.name=Удалить скобки из объявления
go.intention.remove.dot.import.alias.name=Удалить точечный алиас импорта
go.intention.remove.keys.from.struct.literal.value.name=Удалить ключи из литерала структуры
go.intention.remove.method.from.interface=Удалить метод из интерфейса и всех его реализаций
go.intention.remove.method.from.interface.conflict.message=Метод вызывается
go.intention.replace.if.with.switch=Заменить 'if' на 'switch'
go.intention.reuse.signature.types.name=Повторно использовать типы сигнатуры
go.intention.run.go.generate.name=Запустить go generate для комментария
go.intention.run.go.generate.on.file.name=Запустить go generate для файла
go.intention.run.go.generate.on.package.name=Запустить go generate для пакета
go.intention.run.go.generate.text=Go generate ''{0}''
go.intention.select.fields.dialog.title=Выбрать поля
go.intention.specify.type.name=Явно указать тип
go.intention.split.all.declarations.name=Разделить все объявления
go.intention.split.declarations.by.comma.name=Разделить объявления по запятой
go.intention.split.declarations.name=Разделить объявления на две группы
go.intention.update.value.in.tags=Обновить значение ключа в тегах
go.intentions.category=Go
go.libraries.configurable.path.source.prefix.default=[По умолчанию]
go.libraries.configurable.path.source.prefix.gopath=[GOPATH]
go.live.template.context.type.block.presentable.name=Блок
go.live.template.context.type.expression.presentable.name=Выражение
go.live.template.context.type.file.presentable.name=Файл
go.live.template.context.type.statement.presentable.name=Оператор
go.live.template.context.type.tag.literal.presentable.name=Литерал тега
go.live.template.context.type.tag.presentable.name=Тег
go.live.template.context.type.type.presentable.name=Тип
go.load.file.dialog.invalid.file=Неверный путь к файлу
go.load.file.dialog.invalid.url=Используйте URL, начинающийся с https\://go.dev/
go.load.file.dialog.radio.file=Файл
go.load.file.dialog.radio.url=URL
go.load.file.dialog.title=Выберите источник, из которого хотите импортовать код во временный файл\:
go.load.file.dialog.url.comment=Используйте URL, начинающийся с https\://go.dev/
go.load.to.playground.could.not.load.message=//Не удалось загрузить общий код
go.load.to.playground.dialog.title=Импортовать во временный файл
go.macro.bin.dirs.description=Пути к директориям bin с инструментами Go
go.macro.executable.path.description=Путь к исполняемому файлу Go
go.macro.file.go.path.description=Значение GOPATH
go.macro.file.go.root.description=Путь к SDK проекта
go.macro.file.import.path.description=Путь импорта текущего файла
go.microservices.http.server.endpoint.title=Go HTTP-сервер
go.module=модуль
go.modules.automatic.dependencies.download.task.text=Выполнение ''go mod download'' в {0} ({1} из {2})
go.modules.background.task.updating.dependencies.text=Выполнение ''go list'' для {0} {0,choice,0\#файлов|1\#файла|2\#файлов} ''go.mod''…
go.modules.background.task.updating.dependencies.title=Обновление зависимостей Go модулей
go.modules.dependency.diagram=Диаграмма зависимостей Go модулей
go.modules.scratch.file.notification.text=Использование контекста модуля
go.modules.tree.structure.replaced=(заменено)
go.modules.tree.structure.replacement=Замена\: {0}
go.modules.unknown.dependencies.notification.retry=Повторить ''{0}''
go.modules.unknown.dependencies.notification.text=Полный набор зависимостей модуля неизвестен, некоторые функции Go модулей могут быть недоступны.
go.modules.unknown.dependencies.notification.tooltip=Может быть вызвано проблемами с сетевым подключением или явным GOPROXY\=off.
go.modules.unsupported.workspace.mode=Go SDK {0} не поддерживает файлы ''go.work'', используйте Go 1.18 или выше
go.modules.wizard.description=Создать проект с Go модулями для разработки Go приложений и библиотек, использующих Go модули для управления зависимостями
go.modules.wizard.name=Go
go.mozilla.rr.dialog.specify.trace.directory.validation.message=Укажите директорию трассировки
go.mozilla.rr.dialog.trace.directory.label=Директория трассировки [&T]\:
go.mozilla.rr.failed.to.start.error.message=Не удалось запустить отладчик для rr трассировки {0}\: {1}
go.mozilla.rr.session.name=Трассировка {0}
go.navigation.go.to.implementation=Перейти к реализациям
go.navigation.go.to.implementation.find.usages.title=Реализации {0}
go.navigation.go.to.method.implementation.popup.title=Метод {0} реализован в {1} {1,choice,0\#типах|1\#типе|2\#типах}
go.navigation.go.to.shadowed.method=Перейти к затенённым методам
go.navigation.go.to.shadowed.method.popup.title=Метод {0} затеняет методы {1} {1,choice,0\#типов|1\#типа|2\#типов}
go.navigation.go.to.shadowing.method=Перейти к затеняющим методам
go.navigation.go.to.shadowing.method.find.usages.title=Затеняющие методы {0}
go.navigation.go.to.shadowing.method.popup.title=Метод {0} затенён в {1} {1,choice,0\#типах|1\#типе|2\#типах}
go.navigation.go.to.super=Перейти к интерфейсам
go.navigation.go.to.super.find.usages.title=Реализованные интерфейсы {0}
go.navigation.go.to.super.method=Перейти к спецификациям методов
go.navigation.go.to.super.method.find.usages.title.kind=Реализованные спецификации методов {0}
go.navigation.go.to.super.method.popup.title=Метод {0} реализует методы в {1} {1,choice,0\#интерфейсах|1\#интерфейсе|2\#интерфейсах}
go.navigation.go.to.super.popup.title=Тип {0} реализует {1} {1,choice,0\#интерфейсов|1\#интерфейс|2\#интерфейса}
go.navigation.go.to.type.implementation.popup.title=Тип {0} реализован в {1} {1,choice,0\#типах|1\#типе|2\#типах}
go.navigation.progress.title=Поиск {0}…
go.navigation.recursive.call=Рекурсивный вызов
go.navigation.shadowed.method.usages.title=Затененные методы {0}
go.new.project.step.other.group.name=Другое
go.new.project.step.web.group.name=Web
go.notification.add.to.gopath.action.text=Добавить в GOPATH
go.notification.add.to.module.action.text=Добавить в модуль
go.notification.add.vendored.package.to.project.action.text=Добавить ''{0}'' в проект
go.notification.cgo.optimizations.are.not.disabled=CGO_CFLAGS не установлен в '-O0 -g', код cgo может быть оптимизован.
go.notification.code.insight.disabled.for.vendored.files.text=Функции анализа кода при редактировании отключены для вендорных файлов в библиотеках
go.notification.code.insight.features.are.disabled.text=Функции анализа кода недоступны
go.notification.create.go.mod.file.action.text=Создать файл 'go.mod'
go.notification.disable.cgo.support.action.text=Отключить поддержку cgo
go.notification.disable.go.modules.integration.action.text=Отключить интеграцию Go модулей
go.notification.do.not.show.action.text=Больше не показывать
go.notification.download.missing.module.successfully.done=Успешно обработано {0} {0,choice,0\#модулей|1\#модуль|2\#модуля|5\#модулей}
go.notification.enable.cgo.support.action.text=Включить поддержку cgo
go.notification.file.does.not.match.target.system.text=''{0}'' не соответствует целевой системе. Файл будет проигнорирован инструментом сборки.
go.notification.file.exceeds.size.limit.text=Размер файла ({0}) превышает установленный лимит ({1}). {2}
go.notification.file.ignore.navigate.to.build.constraints.action.text=Перейти к ограничениям сборки
go.notification.file.ignore.navigate.to.cgo.import.action.text=Перейти к импорту cgo
go.notification.file.is.ignored.because.arch.mismatch.text=''{0}'' игнорируется инструментом сборки из-за несоответствия архитектуры
go.notification.file.is.ignored.because.bad.syntax.text=''{0}'' игнорируется инструментом сборки из-за некорректного синтаксиса
go.notification.file.is.ignored.because.cgo.mismatch.text=''{0}'' игнорируется инструментом сборки из-за несоответствия поддержки cgo
go.notification.file.is.ignored.because.compiler.mismatch.text=''{0}'' игнорируется инструментом сборки из-за несоответствия компилятора
go.notification.file.is.ignored.because.custom.flag.text=''{0}'' игнорируется инструментом сборки из-за пользовательского флага
go.notification.file.is.ignored.because.missing.experiment.text=''{0}'' игнорируется инструментом сборки из-за настройки эксперимента Go
go.notification.file.is.ignored.because.non.go.file.text=''{0}'' игнорируется инструментом сборки, так как это не файл Go
go.notification.file.is.ignored.because.os.mismatch.text=''{0}'' игнорируется инструментом сборки из-за несоответствия ОС
go.notification.file.is.ignored.because.version.mismatch.text=''{0}'' игнорируется инструментом сборки из-за несоответствия версии Go
go.notification.file.starts.with.dot.text=''{0}'' игнорируется инструментом сборки, так как его имя начинается с ''.''
go.notification.file.starts.with.underscore.text=''{0}'' игнорируется инструментом сборки, так как его имя начинается с ''_''
go.notification.go.edit.project.settings.action.text=Изменить настройки
go.notification.go.root.is.incorrect.text=GOROOT некорректен
go.notification.go.root.is.not.defined.text=GOROOT не определен
go.notification.go.setup.action.text=Настроить GOROOT
go.notification.go.support.enable.action.text=Включить поддержку Go
go.notification.go.support.is.disabled.in.module.text=Поддержка Go отключена в модуле ''{0}''
go.notification.go.tool.is.missing.run.go.get.invoke.go.get.action.text=Выполнить ''go get {0}''
go.notification.go.tool.is.missing.run.go.get.text=Не удаётся найти ''{0}'' в GOPATH.
go.notification.go.tool.is.missing.text=Исполняемый файл ''{0}'' отсутствует в GOPATH. Хотите установить его?
go.notification.gopath.configure.action.text=Настроить GOPATH
go.notification.gopath.detected.configure.gopath.action.text=Настроить GOPATH
go.notification.gopath.detected.text=Мы обнаружили некоторые библиотеки в вашем GOPATH. Возможно, вы захотите добавить дополнительные библиотеки в конфигурацию GOPATH.
go.notification.gopath.detected.title=Обнаружен GOPATH
go.notification.gopath.is.empty.text=GOPATH пуст
go.notification.inspections.are.disabled.enabled.action.text=Включить проверки
go.notification.inspections.are.disabled.text=Проверки отключены для файла
go.notification.install.as.tool.action.text=Установить как инструмент командной строки
go.notification.install.go.tool.action.text=Установить инструмент Go
go.notification.install.package.action.text=Установить {0}
go.notification.modules.file.is.absent.title=Отсутствует файл 'go.mod'
go.notification.obsolete.imports.code.style.detected.title=Обнаружены устаревшие настройки стиля кода импортов
go.notification.open.imports.settings=Открыть настройки импортов
go.notification.package.was.excluded={0} исключен из импортов
go.notification.rename.file.action.text=Переименовать файл
go.notification.review.code.style.settings.action.text=Просмотреть настройки стиля кода
go.playground.actions.format.description=Форматирует код с помощью API Go Playground
go.playground.actions.format.text=Форматовать
go.playground.actions.go.context.description.prefix=Выбранный контекст\:
go.playground.actions.go.version.description.prefix=Выбранная версия\:
go.playground.actions.go.version.label=Версия Go
go.playground.actions.load.description=Загружает код из предоставленного URL или файла в указанный файл playground
go.playground.actions.load.text=Загрузить
go.playground.actions.run.description=Запускает файл в Go Playground
go.playground.actions.run.locally.text=Запустить локально
go.playground.actions.run.text=Запустить
go.playground.actions.share.description=Делится кодом файла в Go Playground, предоставляя ссылку для общего доступа
go.playground.actions.share.text=Поделиться
go.profiler.allocated.objects.metric.name=Выделенные объекты
go.profiler.allocated.space.metric.name=Выделенное пространство
go.profiler.application.configurable.name=Профайлер Go
go.profiler.blocking.profile.prefix=Профиль блокировок
go.profiler.blocking.profiler.name=Профайлер блокировок
go.profiler.cpu.profile.prefix=Профиль CPU
go.profiler.cpu.profiler.name=Профайлер CPU
go.profiler.cpu.time.metric.name=Время CPU
go.profiler.downloading.profiler.dump.progress.title=Загрузка дампа профайлера…
go.profiler.in.use.objects.metric.name=Используемые объекты
go.profiler.in.use.space.metric.name=Используемое пространство
go.profiler.memory.profile.prefix=Профиль памяти
go.profiler.memory.profiler.name=Профайлер памяти
go.profiler.mutex.profile.prefix=Профиль мьютексов
go.profiler.mutex.profiler.name=Профайлер мьютексов
go.profiler.not.a.pprof.profile.error=не является профилем pprof
go.profiler.parse.error=Ошибка при разборе профиля\: {0}
go.profiler.parse.error.empty=профиль пуст
go.profiler.parse.error.eof=неожиданный конец файла
go.profiler.profile.fraction.comment.text=Управляет долей событий конфликтов мьютексов, которые отображаются в профиле. В среднем отображается 1/fraction событий. Оставьте пустым для использования стандартной доли 1.
go.profiler.profile.fraction.label.text=Доля профиля\:
go.profiler.profile.illegal.profile.fraction.validation.message=Недопустимая доля профиля\: {0}
go.profiler.profile.illegal.rate.validation.message=Недопустимая скорость профилирования\: {0}
go.profiler.profile.rate.cpu.comment.text=Управляет долей событий блокировки горутин, которые отображаются в профиле. В среднем профайлер стремится отобрать одно событие блокировки за период, в течение которого программа была заблокирована. Период задается в наносекундах. Чтобы включить каждое событие блокировки в профиль, установите значение 1. Оставьте пустым для использования стандартной скорости профайлера, равной 1.
go.profiler.profile.rate.label.text=Скорость профилирования\:
go.profiler.profile.rate.memory.comment.text=Управляет долей выделений памяти, которые записываются и отображаются в профиле. В среднем профайлер стремится отобрать одно выделение на каждое количество выделенных байтов. Чтобы включить каждый выделенный блок в профиль, установите скорость 1. Оставьте пустым для использования стандартной скорости, равной 512 КБ.
go.project.configurable.name=Go
go.quick.doc.assign.iota=Присваивание значения 'iota' не сбрасывает счетчик 'builtin.iota'. Вместо этого присваивание определяет новую константу 'iota', скрывающую 'builtin.iota'.
go.quick.doc.blank.identifier.hint=Пустой идентификатор ('_') может быть присвоен или объявлен с любым значением любого типа. Пустые идентификаторы отбрасываются и не используются компилятором. Например, вы можете использовать пустые идентификаторы, когда хотите получить возвращаемое значение, но не планируете использовать его в дальнейшем.
go.quick.doc.channel.direction.label=Направление канала\:
go.quick.doc.channel.receive.label=получение из канала
go.quick.doc.channel.send.label=отправка в канал
go.quick.doc.composite.literal.hint=Этот составной литерал выделяет новый экземпляр {0} с заданными значениями.
go.quick.doc.empty.interface.hint=Пустой интерфейс 'interface{}' представляет собой множество всех типов. Переменная типа пустого интерфейса может хранить значение любого типа.
go.quick.doc.iota.example=Например, 'const (C0 \= iota; C1; C2)' напечатает '0', '1' и '2'. Счётчик сбрасывается в '0' каждый раз, когда вы используете 'const' в вашем коде. Чтобы увидеть значения констант, назначенных 'iota', наведите указатель мыши на спецификацию константы.
go.quick.doc.keyword.resource.effective.go.label=Effective Go
go.quick.doc.keyword.resource.go.blog.label=Блог Go
go.quick.doc.keyword.resource.language.spec.label=Спецификация языка Go
go.quick.doc.keyword.type.switch=Type switch сопоставляет динамический тип значения интерфейса 'x'. Динамический тип сопоставляется с типами в case-ах 'switch'. Если используется короткое присваивание переменной вида 'v \:\= x.(type)' в качестве условия switch и case используется только для одного типа, 'v' будет иметь тип, указанный в соответствующем case switch.
go.quick.doc.methods.on.label=Методы для
go.quick.doc.package.label=Пакет\:
go.quick.doc.resolved.value.label=Разрешённое значение\:
go.quick.doc.struct.literal.hint=Вы можете указать значения полей либо по порядку, либо использовать их имена.
go.quick.doc.substitution.label=Подстановка\:
go.quick.doc.too.large.to.render=слишком большой для отображения
go.quick.doc.type.alias.and.definition.hint.link.text=Спецификация Go\: Идентичность типов
go.quick.doc.type.alias.hint=Тип {0} является псевдонимом типа {1}. Эти типы идентичны. Для получения дополнительной информации см. {2}
go.quick.doc.type.assertions.hint=Утверждения типа используются для проверки того, что переменная имеет определённый тип, и возвращают базовое значение интерфейса. Утверждения типа работают только с интерфейсами. Например, в следующем коде\: 'var x interface{} \= 42 t \:\= x.(int)', 'x' имеет тип 'interface{}' с базовым значением int ('42'), 'int' - это конкретный тип, который мы хотим проверить. Если мы напечатаем 't', вывод будет '42'. Изменение конкретного типа на 'string' ('t \:\= x.(string)') вызовет панику времени выполнения. \nУтверждения типа могут возвращать два значения. Например, выражение 't, ok \:\= x.(int)' имеет булево значение 'ok', которое возвращает 'true', если утверждение верно. Если 'ok' равно 'false', 't' устанавливается в нулевое значение и паника не возникает.
go.quick.doc.type.definition.hint=Тип {0} является новым типом с базовым типом {1}. Эти типы различны. Для получения дополнительной информации см. {2}
go.quick.doc.type.parameter.hint=Объявление {0} объявляет параметры типа. Эти параметры типа делают {0} обобщённым. Обобщённый {0} может работать с несколькими типами. Набор возможных типов определяется ограничением параметра типа. Для получения дополнительной информации об обобщениях см. {1}
go.quick.doc.type.parameter.hint.hyperlink.text=Руководство\: Начало работы с обобщениями на go.dev
go.quick.doc.type.parameter.in.method.hint=Метод является обобщённым, поскольку базовый тип приёмника является обобщённым типом. Спецификация метода должна объявлять параметры типа, соответствующие параметрам типа базового типа приёмника. Аргументы типа метода должны использовать те ограничения типа, которые используются в базовом типе приёмника. Для получения дополнительной информации об обобщениях см. {0}
go.refactoring.change.signature.current.method.option=только {0} текущий метод
go.refactoring.change.signature.function.will.not.perform.initialization.validation.message=Функция {0} больше не будет выполнять инициализацию
go.refactoring.change.signature.function.will.not.start.application.validation.message=Функция {0} больше не будет запускать приложение
go.refactoring.change.signature.method.specification.and.implementations.option={0} спецификация метода и все реализации
go.refactoring.change.signature.named.and.unnamed.parameters.validation.message=Нельзя использовать именованные и неименованные параметры одновременно.
go.refactoring.change.signature.new.parameter.validation.message.part=Новый параметр
go.refactoring.change.signature.not.legal.identifier.validation.message=''{0}'' не является допустимым идентификатором.
go.refactoring.change.signature.parameter.without.type.validation.message={0,number,ordinal} параметр должен иметь тип.
go.refactoring.change.signature.remove.parameter.generic.message=Новый тип функции может вызвать ошибки типов
go.refactoring.change.signature.remove.parameter.used.as.call.argument.message=Вызов {0} будет передавать {1,choice,1\#аргумент|2\#аргументы} другого типа
go.refactoring.change.signature.remove.parameter.used.as.var.value.message=Тип переменной {0} изменится
go.refactoring.change.signature.remove.parameter.used.in.assignment.message=Присваивание {0} может привести к ошибкам типов
go.refactoring.change.signature.renamed.parameter.validation.message.part=Переименованный параметр
go.refactoring.change.signature.result.parameters.tab.title=Возвращаемые параметры
go.refactoring.change.signature.reuse.types.checkbox=Повторно использовать типы
go.refactoring.change.signature.target.not.found.error.message=Курсор должен находиться на имени функции или метода, который нужно рефакторить
go.refactoring.change.signature.used.multiple.times.validation.message=''{0}'' используется несколько раз.
go.refactoring.change.signature.variadic.is.not.last.validation.message=Вариативный параметр должен быть последним.
go.refactoring.change.signature.variadic.parameter.in.result.validation.message=Вариативный параметр не допускается в результате.
go.refactoring.declarations.separator=Объявления
go.refactoring.different.package.name.validation.message=Имя пакета не должно отличаться для существующего файла.
go.refactoring.empty.target.directory.path.validation.message=Путь к целевой директории не должен быть пустым.
go.refactoring.empty.target.file.name.validation.message=Имя целевого файла не должно быть пустым.
go.refactoring.empty.target.package.validation.message=Имя целевого пакета не должно быть пустым.
go.refactoring.exported.column.name=Экспортовано
go.refactoring.extract.interface.caret.should.be.inside.type.error.message=Курсор должен находиться внутри типа для рефакторинга
go.refactoring.extract.interface.empty.type.name.validation.message=Имя типа не должно быть пустым.
go.refactoring.extract.interface.incorrect.type.name.validation.message=Некорректное имя типа.
go.refactoring.extract.interface.rename.type.and.use.interface.radio.button=П&ереименовать исходный тип и использовать интерфейс где возможно
go.refactoring.extract.interface.rename.type.spec.label=Переименовать спецификацию типа в\:
go.refactoring.extract.interface.unexported.method.specification.validation.message={0} {1} не будет реализовывать неэкспортованную спецификацию метода
go.refactoring.extract.interface.unexported.not.be.accessible.validation.message=Неэкспортованный {0} не будет доступен из {1}
go.refactoring.failed.to.create.directory.error.message=Не удалось найти или создать директорию ''{0}''
go.refactoring.failed.to.create.file.for.package.error.message=Не удалось найти или создать файл ''{0}'' для пакета ''{1}''
go.refactoring.file.chooser.dialog.title=Выберите целевую директорию или файл
go.refactoring.file.label=В файл\:
go.refactoring.implement.methods.checkbox=Не из проекта [&N]
go.refactoring.implement.methods.command=Реализовать {0}
go.refactoring.implement.methods.create.type.name=Создать тип…
go.refactoring.implement.methods.dummy.background.updater.task.title=Поиск типов…
go.refactoring.implement.methods.preparing.template.progress.title=Подготовка шаблона…
go.refactoring.implement.methods.prompt=Выберите интерфейс для реализации\:
go.refactoring.incorrect.file.name.validation.message=Некорректное имя целевого файла.
go.refactoring.incorrect.package.name.validation.message=Некорректное имя целевого пакета.
go.refactoring.inline.cannot.inline.call.from.defer=Невозможно применить встраивание к вызову из оператора 'defer'
go.refactoring.inline.cannot.inline.call.from.go=Невозможно применить встраивание к вызову из оператора 'go'
go.refactoring.inline.cannot.inline.in.loop.condition=Невозможно применить встраивание к многострочной функции в условии цикла или к объявлениям 'var' или 'const' на уровне пакета
go.refactoring.inline.cannot.inline.many.returns=Невозможно применить встраивание к функциям с множественными возвратами
go.refactoring.inline.cannot.inline.no.body=Невозможно применить встраивание к функциям без тела
go.refactoring.inline.cannot.inline.recursive.functions=Невозможно применить встраивание к рекурсивным функциям
go.refactoring.inline.cannot.inline.variadic.parameter=Встраивание вариативных параметров не поддерживается
go.refactoring.inline.command.name=Встроить функцию/метод
go.refactoring.inline.defer.statements=Функция содержит операторы defer, которые будут выполнены после вызова окружающей функции
go.refactoring.inline.defined.in.goroot.error.message={0} {1} определен в GOROOT
go.refactoring.inline.defined.in.multi.value.context.error.message={0} {1} определен в многозначном контексте
go.refactoring.inline.found.usages.in.goroot.message=Найдено {0, choice, 1\#одно использование|2\#{0} использования|5\#{0} использований} ''{1}'' в GOROOT.
go.refactoring.inline.kept.definition.and.inlined.message=Определение сохранено{0, choice, 0\#|1\# и встроено одно использование в проекте и GOPATH|2\# и встроено {0} использования в проекте и GOPATH}.
go.refactoring.inline.no.initializer.error.message={0} {1} не имеет инициализатора
go.refactoring.inline.no.parameter.value.error.message=Не удаётся найти значение параметра {0}
go.refactoring.inline.options.dialog.all.keep=Встроить все вызовы и &сохранить объявление
go.refactoring.inline.options.dialog.all.remove=Встроить &все вызовы и удалить объявление
go.refactoring.inline.options.dialog.name.label=Как выполнить встраивание?
go.refactoring.inline.options.dialog.this.keep=Встроить &только этот вызов и сохранить объявление
go.refactoring.inline.reassigned.error.message={0} переназначен
go.refactoring.introduce.analyzing.before.extraction=Анализ кода перед извлечением…
go.refactoring.introduce.collecting.free.vars=Сбор свободных переменных…
go.refactoring.introduce.continue.statement.interrupts.execution.flow.error.message=Рефакторинг не поддерживается, когда оператор continue прерывает поток выполнения
go.refactoring.introduce.does.not.return.value.error.message=Выражение {0} не возвращает значение.
go.refactoring.introduce.extract.function.command=Извлечь функцию
go.refactoring.introduce.extract.function.title=Извлечь функцию
go.refactoring.introduce.extract.method.command=Извлечь метод
go.refactoring.introduce.extract.method.or.function.title=Извлечь метод или функцию
go.refactoring.introduce.extract.title=Извлечь
go.refactoring.introduce.extract.variable.command=Извлечь переменную
go.refactoring.introduce.generating.code.template=Генерация шаблона кода…
go.refactoring.introduce.label.definition.selected.with.all.references.error.message=Рефакторинг поддерживается только когда определение метки выбрано со всеми её ссылками
go.refactoring.introduce.label.reference.interrupts.execution.flow.error.message=Рефакторинг не поддерживается, когда ссылка на метку прерывает поток выполнения
go.refactoring.introduce.method.with.receiver.renderer=Метод с приёмником {0}
go.refactoring.introduce.not.constant.value.error.message=Выражение {0} не является константным значением.
go.refactoring.introduce.range.contains.defer.message=Выбранный диапазон содержит оператор 'defer', который может быть переупорядочен при извлечении
go.refactoring.introduce.receiver.without.name.error.message=У приемника должно быть имя
go.refactoring.introduce.type.chooser.title=Выбрать тип
go.refactoring.introduce.type.command=Создать тип
go.refactoring.introduce.type.dialog.title=Создать тип
go.refactoring.less.than.one.declaration.validation.message=Должно быть выбрано хотя бы одно объявление.
go.refactoring.merge.declarations.action.text=Объединить объявления
go.refactoring.merge.declarations.with.iota.warning=Инициализаторы объявлений будут иметь разные значения после объединения из-за 'iota'
go.refactoring.move.affect.initialization.order.validation.message=Перемещение функции {0} может повлиять на порядок инициализации приложения
go.refactoring.move.break.initialization.validation.message=Перемещение переменной {0} нарушит инициализацию переменной {1}
go.refactoring.move.exported.function.will.not.perform.initialization.validation.message=Экспортуемая функция {0} больше не будет выполнять инициализацию
go.refactoring.move.exported.function.will.not.start.application.validation.message=Экспортуемая функция {0} больше не будет запускать приложение
go.refactoring.move.file.should.differ.validation.message=Целевой файл должен отличаться от исходного файла
go.refactoring.move.function.will.not.start.application.validation.message=Функция {0} вне пакета {1} больше не будет запускать приложение
go.refactoring.move.required.by.validation.message=Требуется для {0}
go.refactoring.move.type.will.become.non.local.for.method.validation.message=Тип {0} станет нелокальным для метода {1}
go.refactoring.move.type.will.not.implement.interface.validation.message=Тип {0} больше не будет реализовывать интерфейс {1}
go.refactoring.move.value.will.change.validation.message=Значение константы {0} изменится, так как она объявлена с использованием {1}
go.refactoring.non.go.file.validation.message=Целевой файл должен быть файлом Go.
go.refactoring.non.writable.directory.validation.message=Целевая директория недоступна для записи.
go.refactoring.non.writeable.file.validation.message=Целевой файл недоступен для записи.
go.refactoring.redeclare.validation.message={0} переопределит {1} с тем же именем
go.refactoring.refactor.action=Рефакторинг
go.refactoring.rename.action=Переименовать
go.refactoring.rename.all.receivers.option=Переименовать все приемники
go.refactoring.rename.current.receiver.option=Переименовать только текущий приемник
go.refactoring.rename.directory.message=Также переименовать директорию пакета ''{0}''?
go.refactoring.rename.looking.for.anonymous.field.usages.progress.title=Поиск использований анонимного поля
go.refactoring.rename.looking.for.method.usages.progress.title=Поиск использований метода
go.refactoring.rename.package.title=Также переименовать пакет ''{0}'' в ''{1}''?
go.refactoring.rename.production.file.title=Также переименовать рабочий файл ''{0}''?
go.refactoring.rename.test.file.title=Также переименовать тестовый файл ''{0}''?
go.refactoring.rename.type.parameter.option.all=Переименовать в определении типа и во всех приемниках
go.refactoring.rename.type.parameter.option.current.only=Переименовать только этот параметр типа
go.refactoring.split.declarations.action.text=Разделить объявления
go.refactoring.split.declarations.with.iota.warning=Инициализаторы объявлений будут иметь разные значения после разделения из-за 'iota'
go.refactoring.unexported.validation.message=Неэкспортуемый {0} больше не будет доступен из {1}
go.remote.debug.disconnect.delve.label=При отключении\:
go.remote.debug.disconnect.delve.option.ask=Спросить
go.remote.debug.disconnect.delve.option.leave=Оставить запущенным
go.remote.debug.disconnect.delve.option.stop=Остановить удалённый процесс Delve
go.remove.else=Удалить else
go.replace.field.type.with.pointer.family.name=Заменить тип поля на указатель
go.run.configuration.add.go.tool.argument.label=Добавить
go.run.configuration.build.on.remote.target.checkbox=Собирать на удалённой цели [&B]
go.run.configuration.emulate.terminal.in.output.console=&Эмулировать терминал в консоли вывода
go.run.configuration.environment.label=Окружение [&V]\:
go.run.configuration.go.tool.arguments.label=Аргументы Go [&G]\:
go.run.configuration.kind.directory=Директория
go.run.configuration.kind.file=Файл
go.run.configuration.kind.package=Пакет
go.run.configuration.module.label=Модуль [&M]\:
go.run.configuration.output.directory.label=Выходная директория [&O]\:
go.run.configuration.program.arguments.label=Аргументы программы [&P]\:
go.run.configuration.run.after.build.checkbox=Запустить после сборки [&R]
go.run.configuration.run.kind.label=Тип запуска [&K]\:
go.run.configuration.run.with.sudo.label=Запустить через sudo [&I]
go.run.configuration.run.with.sudo.mnemonic=Запустить с повышенными правами [&I]
go.run.configuration.run.with.sudo.tooltip=Запустить конфигурацию с правами суперпользователя
go.run.configuration.target.directory.label=Директория [&D]
go.run.configuration.target.files.label=Файлы [&F]\:
go.run.configuration.target.package.label=Путь пакета [&E]\:
go.run.configuration.test.framework=Тестовый фреймворк [&R]\:
go.run.configuration.test.kind.label=Тип теста [&K]\:
go.run.configuration.test.pattern.label=Шаблон [&T]\:
go.run.configuration.use.all.custom.build.tags.label=Использовать все пользовательские теги сборки [&L]
go.run.configuration.use.all.custom.build.tags.tooltip=Все пользовательские теги сборки из ваших настроек добавляются во время процесса сборки (см. Go | Теги сборки)
go.run.playground.could.not.run.message=Не удалось запустить код
go.run.target.compiled.executables.description=Путь вывода для скомпилированных исполняемых файлов на цели
go.run.target.compiled.executables.directory.browsing.title=Скомпилированные исполняемые файлы
go.run.target.compiled.executables.directory.label=Директория скомпилированных исполняемых файлов\:
go.run.target.configure.label=Конфигурация Go
go.run.target.executable.path.label=Исполняемый файл Go\:
go.run.target.executable.path.title=Исполняемый файл Go
go.run.target.gopath.label=GOPATH\:
go.run.target.gopath.title=GOPATH
go.run.target.project.sources.description=Путь вывода для исходников проекта на цели
go.run.target.project.sources.directory.browsing.title=Исходники проекта
go.run.target.project.sources.directory.label=Директория исходников проекта\:
go.run.target.run.label=Запустить приложение Go
go.run.target.version.label=Версия\:
go.sdk.no.version.text=<нет версии>
go.settings.build.tags.any.sdk.value=любая
go.settings.build.tags.arch.label=Arch
go.settings.build.tags.cgo.support.label=Поддержка cgo
go.settings.build.tags.compiler.label=Компилятор
go.settings.build.tags.custom.tags.hint=<html><body><p>Список дополнительных тегов, разделенных пробелами. <a href\="https\://www.jetbrains.com/help/go/configuring-build-constraints-and-vendoring.html">Может использоваться</a> в команде 'go build'.</p></body></html>
go.settings.build.tags.custom.tags.label=Пользовательские теги
go.settings.build.tags.description=<html><body><p>Следующие опции описывают целевую систему для редактора. ИСР использует эти значения для определения файлов, используемых при валидации, разрешении и автодополнении кода. Для получения дополнительной информации об этих опциях см. <a href\="https\://golang.org/pkg/go/build/\#hdr-Build_Constraints">документацию по ограничениям Go</a>.</p></body></html>
go.settings.build.tags.display.name=Теги сборки
go.settings.build.tags.experiments.hint=<html><body><p>Введите экспериментальные теги Go в виде списка, разделенного запятыми (например, 'rangefunc,loopvar').</p></body></html>
go.settings.build.tags.experiments.label=Эксперименты
go.settings.build.tags.group.name=Ограничения редактора
go.settings.build.tags.os.label=OS
go.settings.build.tags.version.label=Версия Go
go.settings.common.ask.for.confirmation.in.playground.checkbox=Спрашивать перед публикацией в Go Playground
go.settings.common.confirmation.show.options.option=Показать опции
go.settings.common.convert.json.on.paste.convert.option=Преобразовать JSON в тип Go
go.settings.common.convert.json.on.paste.insert.as.is.option=Вставить JSON как есть
go.settings.common.convert.json.on.paste.option=При вставке JSON
go.settings.common.detect.go.packages.from.clipboard.checkbox=Определять пакеты go из буфера обмена
go.settings.common.directory.rename.do.not.rename.package.option=Не переименовывать пакет
go.settings.common.directory.rename.option=При переименовании директории
go.settings.common.directory.rename.rename.package.option=Переименовать пакет
go.settings.common.indent.on.enter.in.raw.strings.checkbox=Отступ при нажатии Enter в raw-строках
go.settings.common.package.rename.do.not.rename.directory.option=Не переименовывать директорию
go.settings.common.package.rename.option=При переименовании пакета
go.settings.common.package.rename.rename.directory.option=Переименовать директорию
go.settings.common.show.auto.import.in.completion.popup.checkbox=Предлагать варианты, требующие дополнительного импорта, при вводе
go.settings.common.show.documentation.in.parameter.info.checkbox=Показывать документацию в информации о параметрах
go.settings.common.suggest.parameter.names.checkbox=Предлагать имена параметров при автодополнении
go.settings.common.test.do.not.rename.corresponding.file.option=Не переименовывать соответствующий тестовый или рабочий файл
go.settings.common.test.rename.corresponding.file.option=Переименовать соответствующий тестовый или рабочий файл
go.settings.common.test.rename.option=При переименовании файла
go.settings.completion.ml.display.name=Go
go.settings.debugger.dataViews.section.name=Go
go.settings.debugger.default.integer.format.label=Формат целых чисел по умолчанию\:
go.settings.debugger.enable.string.view=Включить отображение String()
go.settings.debugger.general.section.name=Go
go.settings.debugger.goroutines.limit.name=Лимит горутин
go.settings.debugger.max.array.values=Максимальное количество элементов для чтения из массива, среза или мапы
go.settings.debugger.max.string.len=Максимальное количество байт для чтения из строки
go.settings.debugger.max.string.len.in.call=Максимальное количество байт для чтения из строки для результатов вызова функции
go.settings.debugger.max.struct.fields=Максимальное количество полей для чтения из структуры (-1 для чтения всех полей)
go.settings.debugger.rebuild.transitive.packages.checkbox=Пересобрать транзитивные пакеты [&R]
go.settings.debugger.rebuild.transitive.packages.description=Для лучшего опыта отладки Delve необходимо перекомпилировать оптимизованные модули в $GOROOT/pkg.
go.settings.debugger.show.pointer.addresses=Показывать адреса указателей
go.settings.debugger.show.types=Показывать типы
go.settings.debugger.stack.depth.name=Глубина стека
go.settings.debugger.use.custom.delve.settings=Настроить параметры отладки Delve
go.settings.default.value=По умолчанию ({0})
go.settings.diff.ignore.imports.and.formatting.description=Игнорировать импорты и форматование
go.settings.disabled=Отключено
go.settings.enabled=Включено
go.settings.excluded.fmt.functions.display.name=Исключенные функции форматования
go.settings.fmt.functions.display.name=Функции форматования
go.settings.folding.empty.functions.checkbox=Пустые функции
go.settings.folding.empty.struct.or.interface.type.defs.checkbox=Пустые определения типов структур или интерфейсов
go.settings.folding.format.strings.checkbox=Форматованные строки
go.settings.folding.one.line.case.clauses.checkbox=Однострочные case-выражения
go.settings.folding.one.line.error.handling.blocks.checkbox=Однострочные блоки 'if' для обработки ошибок
go.settings.folding.one.line.panics.checkbox=Однострочные блоки 'if' с одиночным 'panic'
go.settings.folding.one.line.return.checkbox=Однострочные блоки 'if' с одиночным 'return'
go.settings.folding.one.line.return.functions.checkbox=Однострочные функции с одиночным 'return'
go.settings.formatter.add.space.except.for.comments.label=За исключением комментариев, начинающихся с\:
go.settings.formatter.comment.prefix.cannot.be.empty.validation.message=Префикс комментария не может быть пустым
go.settings.formatter.comment.prefix.dialog.title=Префикс комментария
go.settings.formatter.no.exceptions.empty.text=Нет исключений
go.settings.formatter.wrap.call.arguments=Аргументы вызова функции
go.settings.formatter.wrap.comp.lit=Составные литералы
go.settings.formatter.wrap.func.params=Параметры функции
go.settings.formatter.wrap.func.result=Параметры результата функции
go.settings.global.gopath.group.name=Глобальный GOPATH
go.settings.imports.display.name=Импорты
go.settings.invalid.build.tag.error=Некорректный тег сборки\: ''{0}''
go.settings.module.gopath.group.name=GOPATH модуля
go.settings.modules.add.other.environment.variable=Другое
go.settings.modules.automatic.dependencies.download.checkbox.link=Перейти на страницу инструментов сборки
go.settings.modules.automatic.dependencies.download.checkbox.tooltip=<p>Автоматически запускать 'go mod download' при открытии проекта и изменении зависимостей. Отключите эту опцию, если у вас ограниченное подключение к интернету.</p><p>Мониторинг изменений в Go модулях настраивается на странице Сборка, Выполнение, Развертывание | Инструменты сборки</p>
go.settings.modules.automatic.dependencies.download.disable.for.all=Отключить для всех проектов
go.settings.modules.automatic.dependencies.download.disable.for.current.project=Отключить для текущего проекта, включить для остальных
go.settings.modules.automatic.dependencies.download.enable.for.all=Включить для всех проектов
go.settings.modules.automatic.dependencies.download.enable.for.current.project=Включить для текущего проекта, отключить для остальных
go.settings.modules.automatic.dependencies.download.label=Загрузка зависимостей Go модулей\:
go.settings.modules.choose.module.dialog.title=Выбрать Go модуль
go.settings.modules.choose.module.validation.message=Выберите хотя бы один модуль
go.settings.modules.display.title=Go Модули
go.settings.modules.do.not.set.goexperiment=Используйте поле 'Experiments' в настройках 'Build Tags' для GOEXPERIMENT
go.settings.modules.enable.integration.checkbox=Включить интеграцию Go модулей
go.settings.modules.environment.context.goproxy=Если явно не задано, GOPROXY выбирается автоматически в зависимости от вашего региона
go.settings.modules.environment.context.help=GOPROXY, GOPRIVATE и другие переменные окружения
go.settings.modules.environment.label=Окружение\:
go.settings.modules.explain.environment.variable=Объяснить переменную
go.settings.modules.gomodcache.description=GOMODCACHE задает расположение кэша модулей.
go.settings.modules.gomodcache.documentation.link.title=Примечания к выпуску Go 1.15
go.settings.modules.gonoproxy.description=GONOPROXY перечисляет пакеты, которые считаются приватными. Команда go не будет использовать прокси при загрузке этих пакетов. Переопределяет GOPRIVATE.
go.settings.modules.gonosumdb.description=GONOSUMDB перечисляет пакеты, которые считаются приватными. Команда go не будет использовать базу данных контрольных сумм при проверке этих пакетов. Переопределяет GOPRIVATE.
go.settings.modules.goprivate.description=GOPRIVATE перечисляет пакеты, которые считаются приватными. Команда go не будет использовать прокси или базу данных контрольных сумм при загрузке и проверке этих пакетов.
go.settings.modules.goprivate.documentation.link.title=Конфигурация модулей для непубличных модулей
go.settings.modules.goproxy.documentation.link.title=Загрузка и верификация модулей
go.settings.modules.goproxy.tooltip=GOPROXY указывает команде go использовать определённые прокси-серверы при загрузке зависимостей.
go.settings.modules.gosumdb.description=GOSUMDB определяет имя базы данных контрольных сумм. Используется командой go для проверки неизменности контрольных сумм загруженных зависимостей.
go.settings.modules.gosumdb.documentation.link.title=Ошибки аутентификации модулей
go.settings.modules.gotoolchain.description=GOTOOLCHAIN задает версию Go SDK для использования.
go.settings.modules.gotoolchain.documentation.link.title=Тулчейны Go
go.settings.modules.sync.dependencies.fix.family.name=Синхронизовать зависимости
go.settings.modules.sync.dependencies.fix.text=Исправить отсутствующие зависимости({0})
go.settings.modules.vendoring.checkbox=Автоматически включать поддержку vendoring
go.settings.modules.vendoring.checkbox.tooltip=Включить поддержку vendoring, когда модуль содержит директорию 'vendor'. Если директория 'vendor' не была создана языком Go и не включает зависимости Go, снимите этот флажок. Когда эта опция отключена, инструмент 'go' вызывается с '-mod\=mod' или '-mod\=readonly'.
go.settings.modules.vendoring.documentation.link.title=Как использовать vendoring с модулями
go.settings.postfix.choose.type.action.name=Выбрать тип…
go.settings.postfix.choose.type.prompt.text=Выберите тип
go.settings.postfix.enter.type.action.name=Ввести имя типа…
go.settings.postfix.enter.type.empty.type.validation.message=Укажите имя типа
go.settings.postfix.enter.type.import.path.label=Путь импорта [&I]\:
go.settings.postfix.enter.type.name.label=Имя типа [&T]\:
go.settings.project.gopath.group.name=GOPATH проекта
go.settings.project.sdk.value=SDK проекта ({0})
go.settings.sdk.add.action.name=Локальный…
go.settings.sdk.add.button=Добавить SDK…
go.settings.sdk.add.button.tooltip=Добавить SDK ({0})
go.settings.sdk.add.local.title=Выберите домашнюю директорию для Go SDK
go.settings.sdk.combo.tooltip=Добавить SDK…
go.settings.sdk.detected.notification.configure.go.sdk.action.text=Настроить Go SDK
go.settings.sdk.detected.notification.text=<b>{0}</b> автоматически установлен как SDK проекта. Вы можете изменить его в конфигурации GOROOT.
go.settings.sdk.detected.notification.title=Обнаружен GOROOT
go.settings.sdk.discovering.go.sdks.progress.title=Поиск Go SDK…
go.settings.sdk.download.action.name=Скачать…
go.settings.sdk.download.checksum.of.downloaded.file.mismatched.error=Контрольная сумма загруженного файла не совпадает
go.settings.sdk.download.could.not.copy.unpacked.sdk.error=Не удалось скопировать распакованный SDK
go.settings.sdk.download.could.not.find.go.directory.in.downloaded.file.error=Не удалось найти директорию go в загруженном файле
go.settings.sdk.download.could.not.get.checksum.error=Не удалось получить контрольную сумму\: {0}
go.settings.sdk.download.could.not.unpack.downloaded.file.error=Не удалось распаковать загруженный файл
go.settings.sdk.download.dialog.cannot.create.directory.validation.message=Не удаётся создать директорию по указанному пути.
go.settings.sdk.download.dialog.cannot.load.go.versions.validation.message=Не удалось загрузить версии SDK. {0}
go.settings.sdk.download.dialog.location.is.not.specified.validation.message=Укажите целевую директорию.
go.settings.sdk.download.dialog.location.label=Расположение\:
go.settings.sdk.download.dialog.progress.versions.status=Версии Go SDK
go.settings.sdk.download.dialog.recommended.label=Показать все
go.settings.sdk.download.dialog.recommended.tooltip=Включить в список версий архивные и нестабильные релизы.
go.settings.sdk.download.dialog.reload.versions.action.name=Обновить
go.settings.sdk.download.dialog.title=Скачать Go SDK
go.settings.sdk.download.dialog.version.is.not.specified.validation.message=Укажите версию.
go.settings.sdk.download.dialog.version.label=Версия\:
go.settings.sdk.download.failed.to.download.notification.title=Не удалось загрузить SDK
go.settings.sdk.download.installed.notification.title={0} {1} установлен
go.settings.sdk.download.progress.copying.detailed.status=Копирование {0}…
go.settings.sdk.download.progress.copying.status=Копирование SDK…
go.settings.sdk.download.progress.downloading.status=Загрузка {0} {1}
go.settings.sdk.download.progress.unpacking.status=Распаковка SDK…
go.settings.sdk.download.progress.verifying.status=Проверка загруженного архива…
go.settings.sdk.download.unpacked.sdk.is.corrupted.error=Распакованный SDK поврежден
go.settings.sdk.enable.integration.label=Включить поддержку Go в модулях\:
go.structure.view.exportability.sorter.text=По экспортуемости
go.structure.view.method.location=из {0}
go.structure.view.private.members.filter.text=Показать private члены
go.structure.view.show.package.structure.action.text=Показать структуру пакета
go.structure.view.show.package.structure.checkbox.text=Показать структуру пакета
go.sum.generated.sources.filter.notification.text=Этот файл не следует редактировать, так как он предназначен только для использования инструментами Go. Изменения могут привести к нарушению процесса сборки.
go.survey.promoter.action.later=Напомнить позже
go.survey.promoter.action.never=Больше не спрашивать
go.survey.promoter.action.yes=Да
go.survey.promoter.content=Помогите определить будущее Go\! Хотите ли вы помочь убедиться, что Go отвечает вашим потребностям, приняв участие в этом 10-минутном опросе разработчиков Go до {0}?
go.survey.promoter.title=Опрос разработчиков Go
go.template.intention.add.type.hint.name=Указать тип точки
go.template.intention.associate.file.extension.with.go.template=Связать расширение файла с шаблоном Go
go.template.intention.extension.associated.with.template=Расширение ''{0}'' связано с шаблоном Go
go.template.intention.open.file.type.settings=Открыть настройки типа файлов шаблона Go
go.template.intention.undo=Отменить
go.terms.anonymous.field=анонимное поле
go.terms.array=массив
go.terms.case=case
go.terms.chan=chan
go.terms.closure=замыкание
go.terms.comma=запятая
go.terms.comment=комментарий
go.terms.constant=константа
go.terms.declaration=объявление
go.terms.duplicate=дубликат
go.terms.duplicated.case=повторяющийся case
go.terms.duplicated.default=повторяющееся значение по умолчанию
go.terms.empty.declaration=пустое объявление
go.terms.field=поле
go.terms.function=функция
go.terms.global.constant=глобальная константа
go.terms.global.variable=глобальная переменная
go.terms.go.statement=оператор go
go.terms.import=импорт
go.terms.import.alias=псевдоним импорта
go.terms.interface=интерфейс
go.terms.label=метка
go.terms.map=map
go.terms.method=метод
go.terms.method.specification=спецификация метода
go.terms.module.statement=оператор модуля
go.terms.package=пакет
go.terms.package.capitalized=Пакет
go.terms.package.statement=оператор package
go.terms.parameter=параметр
go.terms.pointer=указатель
go.terms.receiver=приемник
go.terms.semicolon=точка с запятой
go.terms.shadowed.declaration=затененное объявление
go.terms.slice=slice
go.terms.statement=оператор
go.terms.string=string
go.terms.struct=struct
go.terms.type=тип
go.terms.type.alias=псевдоним типа
go.terms.type.parameters=параметры типа
go.terms.type.pluralized=Типы
go.terms.variable=переменная
go.terms.version.statement=оператор версии
go.test.cannot.find.files.compatible.with.framework.error=Не удалось найти файлы тестов Go в <code>{0}</code>, совместимые с фреймворком <code>{1}</code>
go.test.cannot.run.compiling.on.directory.kind.run.configurations.error=Невозможно отладить тесты в конфигурациях запуска типа директории. Вы можете отлаживать тесты для каждого пакета, используя <a href\="edit">Тип теста\: Пакет</a>
go.test.creator.cannot.find.field.type=Не удалось найти тип поля для {0}
go.test.creator.cannot.find.function.signature=Не удалось найти сигнатуру функции
go.test.creator.cannot.find.method.receiver=Не удалось найти приемник метода для {0}
go.test.creator.cannot.find.method.receiver.type=Не удалось найти тип приемника метода для {0}
go.test.creator.cannot.find.test.import.path=Не удалось найти путь импорта теста
go.test.creator.cannot.find.test.package.name=Не удалось найти имя тестового пакета
go.test.creator.empty.test.file.name=Пустой тестовый файл
go.test.creator.gotests.failed.to.create.test.file=Не удалось создать тестовый файл {0}
go.test.creator.gotests.generation.failed.notification.title=Ошибка генерации тестов
go.test.creator.gotests.generation.name=Генерация тестов
go.test.creator.gotests.no.tests.generated=Тесты не сгенерированы
go.test.creator.progress.title.searching.for.functions.for.test=Поиск функций для теста…
go.test.creator.progress.title.searching.for.tests.for.function=Поиск тестов для функции…
go.test.creator.test.for.file.name=Тесты для файла
go.test.creator.test.for.function.name=Тест для функции
go.test.creator.test.for.package.name=Тесты для пакета
go.test.creator.test.for.selection.name=Тесты для выделенного
go.test.file.does.not.exist.error=Файл не существует\: {0}
go.test.framework.is.not.available.on.files.error=Фреймворк <code>{0}</code> недоступен для файла <code>{1}</code>
go.test.framework.not.available.in.module.error=Фреймворк <code>{0}</code> недоступен в выбранном модуле
go.test.fuzzing.duplicate.header=Дублирующийся заголовок
go.test.fuzzing.header.expected=Ожидается заголовок 'go test fuzz v1'
go.test.fuzzing.incorrect.header.position=Заголовок должен быть в начале файла
go.test.fuzzing.label.corpus.label=Go fuzz корпус сид-файлов
go.test.fuzzing.value.expected=Ожидается как минимум одно значение
go.test.generate.benchmark.text=Бенчмарк
go.test.generate.example.text=Пример
go.test.generate.function.description=Сгенерировать функцию {0}
go.test.generate.fuzz.text=Фаззинг
go.test.generate.table.benchmark.description=Сгенерировать функцию табличного бенчмарка
go.test.generate.table.benchmark.text=Табличный бенчмарк
go.test.generate.table.test.description=Сгенерировать функцию табличного теста
go.test.generate.table.test.text=Табличный тест
go.test.generate.test.main.text=Test_main
go.test.generate.test.text=Тест
go.test.no.tests.were.run=Тесты не были запущены
go.test.non.a.package.error=<code>{0}</code> не является пакетом.<br>Используйте конфигурацию запуска типа Directory для рекурсивного запуска тестов в директории.
go.test.not.go.file.error=Файл ''{0}'' не является Go файлом
go.test.run.configuration.description=Конфигурация запуска Go теста
go.test.run.configuration.name=Go тест
go.test.run.fuzzing.tooltip=Запустить фаззинг
go.test.run.test.tooltip=Запустить тест
go.test.suggested.run.configuration.name={0} в {1}
go.test.template.run.configuration.name=Go тест
go.test.testify.run.configuration.name={0} в {1}
go.test.testify.unknown.target.name=неизвестно
go.test.testing.directory.does.not.exist.error=Тестовая директория не существует
go.test.working.directory.should.be.ancestor.of.testing.directory.error=Рабочая директория должна быть родительской для тестовой директории
go.unknown.type.information.hint=<неизвестно>
go.unwrap.argument=Развернуть аргумент
go.unwrap.argument.description=Развернуть {0}
go.unwrap.else=Развернуть else
go.unwrap.for=Развернуть for
go.unwrap.if=Развернуть if
go.usage.type.call=Вызов
go.usage.type.const.declaration=Объявление константы
go.usage.type.field.declaration=Объявление поля
go.usage.type.function.argument=Аргумент функции
go.usage.type.import=Импорт
go.usage.type.parameter.declaration=Объявление параметра
go.usage.type.receiver=Ресивер
go.usage.type.return.type=Возвращаемый тип
go.usage.type.struct.initialization=Инициализация структуры
go.usage.type.type.alias=Псевдоним типа
go.usage.type.type.assertion=Утверждение типа
go.usage.type.type.constraint=Ограничение типа
go.usage.type.type.conversion=Преобразование типа
go.usage.type.type.instantiation=Инстанцирование типа
go.usage.type.type.parameter.declaration=Объявление типового параметра
go.usage.type.variable.declaration=Объявление переменной
go.use.gopath.from.system.environment.checkbox=Использовать GOPATH, определённый в системном окружении
go.value.cannot.be.represented.by.type=Значение {0} не может быть представлено типом {1}
go.wizard.description=Создать проект Go для разработки приложений или библиотек в GOPATH
go.wizard.name=Go (GOPATH)
go.wsl.attach.host.group.name=WSL
go.wsl.resolving.user.home=Определение домашней директории пользователя в WSL
go.wsl.sdk.unpack.error=Команда распаковки завершилась с кодом {0}
gofmt.conflict.notification.action.review.actions.on.save=Просмотреть действия при сохранении
gofmt.conflict.notification.content.gofmt.on.format.disabled.because.of.file.watcher=Инструмент <code>gofmt</code> не будет запускаться во время действия <b>Переформатовать код</b>, так как активен File Watcher для <b>gofmt</b>.
group.DlvDebugger.ViewAsGroup.text=Просмотреть как
group.GoTools.description=Внешние инструменты Go
group.GoTools.text=Инструменты Go
inlay.go.inlays.display.constant.definition.description=Определяет значения констант.
inlay.parameters.go.return.parameters=Показывать имена параметров в операторах return.
inlay.parameters.go.struct.unnamed.struct.fields=Показывать имена анонимных полей.
notification.group.build=Сборка Go
notification.group.debug=Отладка Go
notification.group.execution=Выполнение Go
notification.group.general=Go
notification.group.tools=Интеграция инструментов Go
notification.group.tools.sticky=Интеграция инструментов Go (важно)
postfix.template.condition.array.name=массив
postfix.template.condition.assignable.slice.name=присваиваемый slice
postfix.template.condition.boolean.name=логический
postfix.template.condition.builtin.append.applicable.name=применим встроенный append
postfix.template.condition.builtin.cap.applicable.name=применим встроенный cap
postfix.template.condition.builtin.len.applicable.name=применим встроенный len
postfix.template.condition.channel.name=channel
postfix.template.condition.comparable.to.nil.name=сравнимо с nil
postfix.template.condition.error.expr.result.name=выражение с результатом ошибки
postfix.template.condition.error.name=error
postfix.template.condition.expr.in.if.with.missing.block.name=выражение в условии if с отсутствующим блоком
postfix.template.condition.floats.slice.name=slice из float64
postfix.template.condition.interface.impls.slice.name=slice из реализаций интерфейса сортировки
postfix.template.condition.ints.slice.name=slice из int
postfix.template.condition.map.name=map
postfix.template.condition.non.void.name=не void
postfix.template.condition.number.name=число
postfix.template.condition.slice.name=slice
postfix.template.condition.slice.with.no.sort.name=slice без специальной функции сортировки
postfix.template.condition.string.name=строка
postfix.template.condition.strings.slice.name=slice из строк
postfix.template.provider.name=Go
project.files.and.vendor.scope.name=Файлы проекта и вендор
vgo.edit.system.go.environment.dialog.title=Глобальное окружение Go
vgo.fix.delete.replacement=Удалить замещение
vgo.fix.dependency-deprecated.family-name=Показать уведомление об устаревании
vgo.fix.dependency-deprecated.message=Показать уведомление об устаревании {0}
vgo.fix.dependency-update.family-name=Обновить версию зависимости
vgo.fix.dependency-update.single.message=Обновить до последней версии {0}
vgo.fix.dependency-version-retracted.family-name=Показать уведомление об отзыве
vgo.fix.dependency-version-retracted.message=Показать уведомление об отзыве {0}
vgo.inspection.dependency-deprecated-retracted.option.deprecation-notice=Уведомление об устаревании
vgo.inspection.dependency-deprecated-retracted.option.retraction-notice=Уведомление об отзыве
vgo.inspection.dependency-deprecated-retracted.tooltip-template=<html><body>{0}.<p><span style\="color\:{3}">{1}\:</span> {2}</body></html>
vgo.inspection.dependency-deprecated.display-name=Устаревшая зависимость
vgo.inspection.dependency-deprecated.message=Устаревший модуль {0}
vgo.inspection.dependency-update.display-name=Доступно обновление зависимости
vgo.inspection.dependency-update.message=Доступна новая версия {0}@{1}\: {2}
vgo.inspection.dependency-update.tooltip=Доступна новая версия\: {0}
vgo.inspection.dependency-version-retracted.display-name=Отозванная версия зависимости
vgo.inspection.dependency-version-retracted.message=Отозванная версия модуля {0}@{1}
vgo.inspection.dependency-version-retracted.tooltip=Отозванная версия модуля {0}
vgo.inspection.go-list.group.name=Проблемы с зависимостями (go list -m -u)
vgo.intention.add.all.replaced.modules.to.workspace.fix.text=Добавить все локально замещенные модули в рабочую область
vgo.intention.add.module.to.workspace.fix.family.name=Добавить модуль в рабочую область
vgo.intention.add.module.to.workspace.fix.text=Добавить модуль ''{0}'' в рабочую область
vgo.intention.add.or.update.go.version.fix.family.name=Добавить или обновить версию Go в 'go.mod'
vgo.intention.add.or.update.go.version.fix.text=Установить версию Go в ''go.mod'' на {0}
vgo.intention.dependency-update.aggregated.message=Обновить…
vgo.intention.dependency-update.aggregated.popup.title=Обновить…
vgo.intention.dependency-update.all.message=Обновить все зависимости до версии {0}
vgo.intention.dependency-update.direct.message=Обновить прямые зависимости до версии {0}
vgo.intention.dependency-update.option.latest=последняя
vgo.intention.dependency-update.option.latest-patch=последний патч
vgo.intention.merge.use.directives.family.name=Объединить несколько директив 'use' в одну
vgo.intention.run.why.command.fix.family.name=Выполнить 'go mod why -m'
vgo.intentions.category=Модули Go
vgo.notification.goproxy.dismiss.action.text=Закрыть
vgo.notification.goproxy.is.needed.text=В вашем регионе может потребоваться GOPROXY для корректной интеграции модулей Go
vgo.notification.goproxy.set.goproxy.cn.action.text=Установить goproxy.cn системно
vgo.notification.goproxy.setup.action.text=Редактировать окружение Go
vgo.traffic-light.go-list.progress=Получение обновлений зависимостей
vgo.update-service.command-presentation-name=Получение обновлений зависимостей для {0}