0.is.not.a.legal.name=''{0}'' не является допустимым именем класса
0.is.not.accessible.from.1={0} будет недоступен из {1}
0.is.not.allowed.in.interface={0} не разрешен в интерфейсе
0.with.1.visibility.in.the.target.class.is.not.accessible.from.2=Элемент {0} с видимостью {1} в целевом классе недоступен из {2}
0.with.1.visibility.is.not.accessible.from.2=Элемент {0} с видимостью {1} будет недоступен из {2}
action.Anonymous.text.configure=Настроить
action.ES6.Generate.Index.description=Создать index.js/index.ts
action.ES6.Generate.Index.text=Создать index.js/index.ts
action.EnablePackageJsonMismatchedDependenciesNotification.text=Включить уведомления об установке зависимостей из package.json
action.EslintImportCodeStyle.description=Применить правила стиля кода ESLint
action.EslintImportCodeStyle.text=Применить правила стиля кода ESLint
action.ExplainNodeModulesLibrariesAction.text=Объяснить библиотеки node_modules
action.FindDuplicatedIndexedFilesInNodeModulesAction.text=Найти дублирующиеся индексированные файлы в node_modules
action.FlowJS.Restart.All.Servers.description=Перезапустить все Flow серверы
action.FlowJS.Restart.All.Servers.text=Перезапустить все Flow серверы
action.Generate.Constructor.JavaScript.text=Конструктор
action.Generate.GetAccessor.JavaScript.text=Getter
action.Generate.GetSetAccessor.JavaScript.text=Getter и Setter
action.Generate.Missing.Members.ES6.text=Реализовать методы…
action.Generate.Missing.Members.TypeScript.text=Реализовать члены…
action.Generate.SetAccessor.JavaScript.text=Setter
action.InstallNodeLocalDependencies$Root.text=Запустить 'npm install' в корне проекта
action.InstallNodeLocalDependencies$Root.text.template=Запустить ''{0}'' для {1}
action.InstallNodeLocalDependencies.text=Установить зависимости Node.js
action.JS.TypeScript.Include.Generated.Declarations.description=Включить дочерние файлы .d.ts в проект
action.JS.TypeScript.Include.Generated.Declarations.text=Включить дочерние файлы '.d.ts'
action.JasmineGenerateAfterEachMethodAction.text=Jasmine afterEach
action.JasmineGenerateBeforeEachMethodAction.text=Jasmine beforeEach
action.JasmineGenerateNewSpecAction.text=Jasmine Spec
action.JasmineGenerateNewSuiteAction.text=Jasmine Suite
action.JavaScript.SearchForComponentUsageAction.description=Показать использования выбранного компонента
action.JavaScript.SearchForComponentUsageAction.text=Показать использования компонента
action.JavaScript.ShowComponentUsages.description=Показать использования выбранного компонента
action.JavaScript.ShowComponentUsages.text=Показать использования компонента
action.JavaScriptGenerateDictionaries.text=Создать словари проверки орфографии JavaScript
action.LearnWebstormAction.description=Просмотреть советы по настройке и редактированию кода для более эффективной работы с WebStorm
action.LearnWebstormAction.text=Изучить WebStorm
action.NewJavaScriptFile.description=Создает JavaScript файл из указанного шаблона
action.NewJavaScriptFile.text=JavaScript файл
action.NewPackageJsonFile.description=Создает файл package.json
action.NewPackageJsonFile.text=package.json
action.NewTypeScriptFile.description=Создает новый TypeScript файл
action.NewTypeScriptFile.text=TypeScript файл
action.NodeServicesProfilerAction.text=Запустить профилирование сервисов Node.js
action.QUnitGenerateNewTestAction.text=QUnit Test
action.QUnitGenerateSetupAction.text=QUnit Setup
action.QUnitGenerateTearDownAction.text=QUnit TearDown
action.RestartEsLintServiceAction.description=Остановить работающий сервис ESLint, автоматически перезапускать при необходимости
action.RestartEsLintServiceAction.text=Остановить и автоматически запускать сервис ESLint при необходимости
action.RunJsbtTask.text=Запустить задачу Gulp/Grunt/npm
action.StopSingleEsLintServiceAction.text=Остановить и автоматически запускать сервис при необходимости
action.ToggleNodeCoreCodingAssistanceAction.text=Переключить помощь при написании кода для Node.js
action.TypeScript.Enable.Service.text=Языковой сервис TypeScript
action.TypeScript.Include.Sources.text=Включить JavaScript файлы
action.TypeScriptAddEnumTextInlayAction.text=Добавить явное значение перечисления
action.TypeScriptExtractTypeAlias.description=Извлечь псевдоним типа
action.TypeScriptExtractTypeAlias.text=Псевдоним типа…
action.already.set.for.containing.folder.or.project.description=Уже установлено для содержащей папки или проекта.
action.creates.new.file.description=Создает новый файл {0}
action.don.t.ask.again.text=Больше не спрашивать
action.don.t.use.library.description=Не использовать библиотеку
action.js.tagged.literal.injection.text=Инъекция JS Tagged Literal
action.jump.to.text=Перейти к…
action.name.disable.category=Отключить {0}
action.restart.service=Перезапустить сервис
action.show.error.details.text=Показать подробности ошибки
action.show.structure.text=Показать структуру
action.structureview.show.object.inherited=Унаследовано от Object
action.use.library.description=Использовать библиотеку
action.view.install.text=Просмотреть и установить…
actionscript.space.after.dots.in.rest.parameter=После '…' в rest параметре
actionscript.validation.message.get.method.access.type.is.different.from.setter=Ошибка компилятора Flash 174646\: Тип доступа метода get отличается от типа доступа set, ожидается ''{0}''
actionscript.validation.message.set.method.access.type.is.different.from.getter=Ошибка компилятора Flash 174646\: Тип доступа метода set отличается от типа доступа get, ожидается ''{0}''
add.import.binding.to.import=Добавить привязку импорта в import
add.import.specifier.to.import=Добавить спецификатор импорта в import
add.variable.to.require=Добавить переменную в вызов require
advanced.setting.js.FindInFiles.with.library.files=Искать в файлах библиотек при выборе "Директория" в поиске по файлам
advanced.setting.js.fallback.to.old.eval.outside.of.import.graph=Возвращаться к оценщику типов ИСР для файлов вне текущего графа импорта при использовании типов с сервера.
advanced.setting.js.fallback.to.old.eval.outside.of.import.graph.description=ИСР может попытаться оценить типы из файлов, которые не находятся в графе импорта текущего проекта TypeScript (tsconfig.json). В таких случаях сервер может загружать и анализовать много новых файлов для предоставления типов. Возврат к оценщику ИСР значительно улучшает производительность на больших проектах.
advanced.setting.js.js.advanced.annotator=Расширенный аннотатор JavaScript
advanced.setting.js.js.advanced.annotator.description=JavaScript аннотатор проверяет базовые семантические ошибки JS в JS / JSX. Расширенный аннотатор может находить больше ошибок, но может потреблять больше ресурсов CPU.
advanced.setting.js.jsx.advanced.annotator=Расширенный аннотатор JSX
advanced.setting.js.jsx.advanced.annotator.description=JSX аннотатор проверяет JSX теги в JSX и TSX. Расширенный аннотатор может находить больше ошибок, но может потреблять больше ресурсов CPU. Рассмотрите отключение этой опции, если вы используете языковой сервис TypeScript.
advanced.setting.js.jsx.client.components=Подсвечивать клиентские компоненты JSX
advanced.setting.js.jsx.client.components.description=Использует разные цвета для серверных/клиентских компонентов JSX. Может потреблять дополнительные ресурсы CPU
advanced.setting.js.semantic.highlighting.accuracy=Точность семантической подсветки
advanced.setting.js.semantic.highlighting.accuracy.basic=Базовая
advanced.setting.js.semantic.highlighting.accuracy.description=Семантическая подсветка назначает элементам кода разные цвета для различения локальных и глобальных переменных, функций и объектов и т.д. Более высокая точность глубже анализует код, но может потреблять больше ресурсов CPU.
advanced.setting.js.semantic.highlighting.accuracy.high=Высокая
advanced.setting.js.semantic.highlighting.accuracy.limited=Ограниченная
advanced.setting.js.semantic.highlighting.accuracy.normal=Нормальная
advanced.settings.js=JavaScript и TypeScript
and.more=и другие…
anonymous.to.named.intention.function.name=Имя функции\:
automatically.replace.with.template.string.on.typing=Автоматически заменять строковый литерал на шаблонную строку при вводе '${'
border.title.inspection.export.results.capitalized.location=Расположение
build.event.title.failed.to.list.tasks=Не удалось получить список задач {0}
buildTools.EditRunSettingsAction.text=Изменить настройки ''{0}'' [&E]…
buildTools.JsbtAddBuildfileAction.text=Добавить {0}
buildTools.JsbtReloadTasksAction.npm.text=Перезагрузить скрипты
buildTools.JsbtReloadTasksAction.text=Перезагрузить задачи
buildTools.JsbtRemoveBuildfileAction.text=Удалить {0}
buildTools.JsbtShowTasksAction.npm.text=Показать npm-скрипты
buildTools.JsbtShowTasksAction.text=Показать задачи {0}
buildTools.ShowSettingsAction.npm.text=Редактировать конфигурации npm [&E]…
buildTools.ShowSettingsAction.text=Настройки {0}…
buildTools.add.with=Добавить {0} с помощью {1}
buildTools.choose_buildfile.text=Выберите {0}
buildTools.edit.run.configuration=Редактировать конфигурацию запуска
buildTools.failed.to.list.tasks=Не удалось получить список задач
buildTools.failed.to.list.tasks.details.reference=подробности
buildTools.no.files.added=Файлы не добавлены
buildTools.no.such.file=Файл не существует
buildTools.no.tasks.found=Задачи не найдены
buildTools.searchEverywhere.npm.text=Запустить npm-скрипт {0}
buildTools.searchEverywhere.text=Запустить задачу {0}
buildTools.tooltip.click.to.show.error.details=Нажмите для просмотра подробностей об ошибке
buildTools.tree.sortBy.definitionOrder.text=Порядку определения
buildTools.tree.sortBy.name.text=Имени
buildTools.tree.sortBy.text=Сортировать по
bundler.configuration.automatic=Автоматически
bundler.configuration.automatic.hint={0} будет использовать правила разрешения модулей из конфигурационного файла {1}, расположенного в той же папке, что и текущий файл, или в любой из родительских папок.
bundler.configuration.automatic.how.it.works=Как это работает
bundler.configuration.detect.description=Обнаруживать конфигурационные файлы {0} для разрешения модулей\:
bundler.configuration.disabled=Отключено
bundler.configuration.field=Конфигурационный файл\:
bundler.configuration.field.required.error=В ручном режиме требуется указать путь к конфигурационному файлу
bundler.configuration.manual=Вручную
button.abort=Прервать
button.continue=Продолжить
button.install.update=Установить/Обновить
can.t.find.flow.executable=Не удаётся найти исполняемый файл Flow
cannot.modify.library.code=Невозможно изменить код библиотеки или SDK
cannot.parse.service.initialization.answer.0=Не удаётся разобрать ответ инициализации сервиса {0}\n
cannot.refactor.anonymous.function=Анализ точек вызова невозможен из-за существующего неизвестного использования.
change.method.signature.and.update.delegating.call.fix.family.name=Изменить сигнатуру метода и обновить делегирующий вызов
change.method.signature.and.update.delegating.call.fix.text=Изменить сигнатуру {0} для соответствия вызову {1} и обновить вызов
change.method.signature.and.update.delegating.call.noname.fix.text=Изменить сигнатуру для соответствия вызову {0} и обновить вызов
change.method.signature.delegating.default.text=делегирование
change.method.signature.fix.family.name=Изменить сигнатуру метода
change.method.signature.fix.text=Изменить сигнатуру {0}
change.signature.call.expression.contains.spreads=Вызов функции содержит spread-аргументы. Использование останется без изменений.
change.signature.column.name=Имя
change.signature.column.name.call.value=Значение в вызове
change.signature.column.name.default.parameter=Параметр по умолчанию
change.signature.column.name.initializer=Инициализатор
change.signature.column.name.modifier=Модификатор
change.signature.column.name.optional.flag=Опционально
change.signature.column.type=Тип
change.signature.conflict.eliminating.parameter.property.breaks.usages=Преобразование параметра-свойства в простой параметр нарушает использование поля {0}
change.signature.conflict.incompatible.implementation=Реализующий {0} имеет другое количество параметров, чем рефакторируемый {1}. {2} будет проигнорирован при рефакторинге.
change.signature.conflict.incompatible.override=Переопределяющий {0} имеет другое количество параметров, чем рефакторируемый {1}. {2} будет проигнорирован при рефакторинге.
change.signature.conflict.readonly.parameter.property.write.usage=Установка {0} как readonly нарушает использование не для чтения
change.signature.dialog.title=Изменить сигнатуру {0}
change.signature.method.references.arguments=Функция ссылается на аргументы, код может сломаться после изменения сигнатуры
change.signature.parameter.table.empty.message=Добавьте новые параметры кнопкой '+'
change.signature.tagged.template.issue=Невозможно обновить вызов tagged template. Использование останется без изменений.
change.signature.usage.view.declarations.header=Методы для рефакторинга
change.signature.value.column.title=Значение
changeSignature.vararg.not.last=Rest-параметр должен быть последним в сигнатуре метода
checkbox.collapse.array.literals=Литералы массивов
checkbox.collapse.object.literals=Литералы объектов
checkbox.collapse.one.line.function.literals=Однострочные функции в JavaScript и TypeScript
checkbox.collapse.xml.literals=XML-литералы
checkbox.enable=Включить
checkbox.move.simple.expressions.to.field.initializer=Переместить простые выражения в инициализатор поля
choose.base.component.title=Выберите суперкласс
choose.class.to.import.title=Класс для импорта
choose.declaration.element=<html><body>Выберите объявление TypeScript</body></html>
choose.destination.scope=Выберите целевую область
choose.field.type=Выберите тип поля
choose.implementing.class=<html><body>Выберите реализацию для <b>{0}</b> (найдено {1})</body></html>
choose.implementing.method=<html><body>Выберите реализацию для <b>{0}</b> (найдено {1})</body></html>
choose.overriding.function=<html><body>Выберите переопределяющую функцию для <b>{0}</b> (найдено {1})</body></html>
choose.overriding.method=<html><body>Выберите переопределяющий метод для <b>{0}</b> (найдено {1})</body></html>
choose.subclass=<html><body>Выберите подкласс для <b>{0}</b> (найдено {1})</body></html>
choose.super.class.title=Выберите суперкласс
choose.super.classifier=<html><body>Выберите суперкласс или интерфейс для <b>{0}</b> (найдено {1})</body></html>
choose.super.field=<html><body>Выберите суперполе для <b>{0}</b> (найдено {1})</body></html>
choose.super.function=<html><body>Выберите суперфункцию для <b>{0}</b> (найдено {1})</body></html>
choose.super.interface.title=Выберите суперинтерфейс
choose.super.method=<html><body>Выберите суперметод для <b>{0}</b> (найдено {1})</body></html>
class.0.cannot.be.created=Невозможно создать целевой класс {0}, так как существует квалифицированный элемент с таким же именем
class.already.contains.field.warning=Класс ''{0}'' уже содержит поле ''{1}''.\nПродолжить?
class.already.contains.method.warning=Класс ''{0}'' уже {1, choice, 1\#содержит|2\#наследует} метод ''{2}()''.\nПродолжить?
class.chooser.not.available.in.dumb.mode=Выбор недоступен во время обновления индекса.
class.does.not.have.inheritors.in.current.project={0} не имеет наследников в текущем проекте
class.names={0,choice,1\#класс|2\#классы} {1}
class.template.title=Класс
class.with.supers.template.title=Класс с суперклассами
code.vision.implementations.hint={0, choice, 1\#1 реализация|2\#{0,number} реализации|5\#{0,number} реализаций}
code.vision.inheritors.hint={0, choice, 1\#1 наследник|2\#{0,number} наследника|5\#{0,number} наследников}
code.vision.overrides.hint={0, choice, 1\#1 переопределение|2\#{0,number} переопределения|5\#{0,number} переопределений}
code.vision.performance.watcher.notification.configure=Настроить…
code.vision.performance.watcher.notification.disable.code.vision=Отключить подсказки
code.vision.performance.watcher.notification.message=Отключение подсказок Code Vision может улучшить производительность за счет снижения нагрузки на CPU.
code.vision.performance.watcher.notification.title=Вычисление подсказок Code Vision выполняется медленно
codestyle.ui.field.prefix=Префикс поля  [&F]\:
codestyle.ui.file.name.style=Соглашение об именах файлов  [&N]\:
codestyle.ui.generated.jsdoc.use.types.checkbox=Включать типы в JSDoc  [&T]
codestyle.ui.property.prefix=Префикс свойства  [&P]\:
collection.queried.but.not.update=Содержимое коллекции <code>\#ref</code> запрашивается, но никогда не записывается
collection.updated.but.not.queried=Содержимое коллекции <code>\#ref</code> обновляется, но никогда не запрашивается
command.name.add.explicit.value=Добавить явное значение ''{0}''
command.name.create.javascript.file=Создать файл JavaScript {0}
command.name.create.typescript.file=Создать файл TypeScript {0}
command.name.extract.named.type=Извлечь именованный тип
command.name.import=Импортовать {0}
complete.import.binding=Завершить привязку импорта
complete.import.name=Завершить имя импорта
configurable.JSCodeCompletionConfigurable.display.name=JavaScript
configurable.JSSmartKeysConfigurable.display.name=JavaScript
configurable.JSTemplateLangConfigurable.display.name=Шаблоны
configurable.MyConfigurable.display.name=JSX
configure.code.completion.settings=Настроить параметры автодополнения кода
configure.node.interpreter.path=Настроить путь к Node.js…
copying.files=копирование файлов
create.button.text=Создать [&C]
create.class.interfaces.label=Интерфейсы [&I]\:
create.class.name.label=Имя [&N]\:
create.class.ok.button.text=Создать
create.class.package.label=Пакет\:
create.class.superclass.label=Суперкласс [&S]\:
create.class.template.label=Шаблон [&T]\:
create.constructor.dialog.title=Создать конструктор
create.field.dialog.title=Создать поле
create.file.name=Создать файл ''{0}''
create.file.name.with=Создать файл ''{0}'' с {1}
create.file.name.with.and=Создать файл ''{0}'' с {1} и {2}
create.method.dialog.title=Создать метод
create.mobile.view=Создать представление ''{0}''
create.react.app.warning.deprecated=Использование <b>create-react-app</b> не рекомендуется для создания React-приложений. Предпочтительный подход при использовании React без фреймворка - использовать шаблон с <a href\="https\://vitejs.dev/guide/\#trying-vite-online">бандлером Vite</a>.
custom.template.variables=Пользовательские переменные шаблона [&C]\:
custom.variables.step.title.label.text=Пользовательские переменные в шаблоне ''{0}''  [&C]\:
declare.event.0=Объявить событие ''{0}''
declare.static=Объявить static [&S]
diagram.element.not.found={0} (не найден)
dialog.kind.0.file=Файл {0}
dialog.message.cannot.compile.typescript.config.file.incorrect=Невозможно скомпилировать TypeScript. Некорректный файл конфигурации.
dialog.message.cannot.create.argument.stubs.invoked.method.function=Невозможно создать заглушки аргументов\: вызываемый метод не является функцией
dialog.message.cannot.determine.package.json.directory=Невозможно определить каталог package.json
dialog.message.cannot.find.file=Не удаётся найти файл {0}
dialog.message.cannot.find.module.for.import=Невозможно построить путь модуля для импорта
dialog.message.cannot.find.module.types=Не удаётся найти модуль @types/{0}
dialog.message.cannot.find.npx.bundled.with=Не удаётся найти npx, поставляемый с {0}
dialog.message.cannot.infer.type.new.parameter=Невозможно определить тип нового параметра
dialog.message.cannot.locate.wrapper.config.file=Не удаётся найти файл конфигурации обертки
dialog.message.cannot.proceed.when.having.non.read.usages.in.embedded.expressions=Невозможно продолжить при наличии не читающих использований во встроенных выражениях
dialog.message.cannot.propagate.variable=Невозможно распространить переменную\: {0}
dialog.message.cannot.propagate.when.having.usages.declarations.in.different.files=Невозможно выполнить распространение, когда использования и объявления находятся в разных файлах
dialog.message.cannot.transform.object.array.destructuring.patterns.for.same.element=Невозможно преобразовать шаблоны деструктуризации объекта и массива для одного и того же элемента
dialog.message.command.supported.by=Команда ''{0}'' не поддерживается {1}
dialog.message.component.name=Имя компонента\:
dialog.message.expression.indexed.by.non.numeric.value=Выражение индексируется нечисловым значением
dialog.message.failed.to.download.0.1=Не удалось загрузить {0}. {1}
dialog.message.incomplete.destructuring.pattern.encountered.in.code=В коде обнаружен неполный шаблон деструктуризации
dialog.message.incorrect.path.to.typescript.package=Некорректный путь к пакету typescript
dialog.message.invalid.npm.package=Недопустимый пакет {0}\: файл или каталог не существует
dialog.message.invalid.npx.command=Недопустимая команда npx
dialog.message.invalid.package.file.specified.but.directory.with.package.json.expected=Недопустимый пакет {0}\: указан файл, но ожидается каталог с package.json
dialog.message.invalid.package.no.such.directory=Недопустимый пакет {0}\: такой каталог не существует
dialog.message.no.npm.script=Нет npm-скрипта ''{0}''
dialog.message.no.path.to.package.json.found=Путь к package.json не найден.
dialog.message.no.results.for.after=Нет результатов для {0} после {1}
dialog.message.no.such=Нет такого {0}
dialog.message.node.interpreter.is.located.in.another.wsl.distribution=Интерпретатор Node.js находится в другом дистрибутиве WSL, отличном от указанного пути проекта.
dialog.message.node.interpreter.must.be.located.in.wsl=Интерпретатор Node.js должен находиться в WSL вместе с указанным путем проекта.
dialog.message.node.interpreter.unspecified.error.text=Пожалуйста, укажите интерпретатор Node.js
dialog.message.package.yarn.installed.package.format.yarn.relative.path.to.package.json.package.name=Пакет {0}\: Формат установленного пакета Yarn\: ''yarn\:[относительный путь к package.json]\:[имя пакета]''.
dialog.message.please.select.distribution=Пожалуйста, выберите дистрибутив
dialog.message.please.specify.npm.scripts.to.run=Пожалуйста, укажите npm-скрипты для запуска
dialog.message.please.specify.package.json=Пожалуйста, укажите package.json
dialog.message.please.specify.package.json.correctly=Пожалуйста, корректно укажите package.json
dialog.message.please.specify.wsl.path.to.node.js.interpreter=Укажите путь к интерпретатору Node.js, установленному в WSL
dialog.message.some.usages.cannot.be.updated.properly=Некоторые использования не могут быть корректно обновлены.\nИспользования в импорте и экспорте, строковые использования или динамические ссылки нельзя заменить деструктуризацией.
dialog.message.some.usages.cannot.be.updated.properly.wrong.access=Некоторые использования не могут быть корректно обновлены.\nНельзя заменить использования, которые не обращаются к свойствам по имени или к элементам по индексу.
dialog.message.transforming.multiple.nested.patterns.not.supported=Преобразование множественных вложенных шаблонов не поддерживается для деструктуризации массива
dialog.message.unspecified=Не указан {0}
dialog.message.unspecified.package=Не указан пакет {0}
dialog.message.unspecified.package.name=Не указано имя пакета.
dialog.message.unspecified.suite.name=Не указано имя набора тестов
dialog.message.unspecified.test.name=Не указано имя теста
dialog.message.unsupported.destructuring.container=Неподдерживаемый контейнер деструктуризации\: {0}
dialog.message.usages.search.was.interrupted=Поиск использований был прерван
dialog.message.variables.from.destructuring.pattern.have.no.usages=Переменные из шаблона деструктуризации не имеют использований
dialog.message.write.usages.cannot.be.updated.with.destructuring=Использования записи нельзя обновить с помощью деструктуризации
dialog.title.cannot.convert=Невозможно преобразовать
dialog.title.cannot.introduce.new.interface=Невозможно добавить новый интерфейс
dialog.title.cannot.propagate=Невозможно распространить
dialog.title.configure.coding.assistance.for.node.js.api=Настройка помощника кодования для API Node.js
dialog.title.download.error=Ошибка загрузки
dialog.title.edit.run.debug.configuration=Редактировать конфигурацию запуска/отладки\: ''{0}''
dialog.title.grunt.settings=Настройки Grunt
dialog.title.gulp.settings=Настройки Gulp
dialog.title.main.file=Основной файл
dialog.title.missing.dependencies=Отсутствующие зависимости
dialog.title.move.members=Переместить члены
dialog.title.new.javascript.file=Новый файл JavaScript
dialog.title.new.typescript.file=Новый файл TypeScript
dialog.title.output.directory=Выходной каталог
dialog.title.select.navigation.target=Выберите цель навигации
dialog.title.select.parameters.to.convert.to.parameter.properties=Выберите параметры для преобразования в параметры-свойства
dialog.title.select.targets.to.convert.to.class=Выберите цели для преобразования в класс
dialog.title.wsl.node.interpreter={0} WSL Node интерпретатор
dialog.title.wsl.node.interpreter.edit=Редактировать
dialog.title.wsl.node.interpreter.edit.add=Добавить
directory.already.contains.file=Директория ''{0}'' уже содержит файл ''{1}''
duplicate.parameter.name=Дублирующееся имя параметра\: {0}
editor.notification.label.enable.babel.file.watcher.question=Включить File Watcher для транспиляции ECMAScript 6 в ECMAScript 5 с помощью Babel?
element.name.anonymous=<анонимный>
element.name.default=<по умолчанию>
entity.in.parent.description={0} в {1}
env.variable.empty={0} пуста
env.variable.undefined={0} не определена
environment.key.description.package_json.install.dependencies=Указывает, должна ли ИСР устанавливать зависимости из обнаруженного 'package.json' в файлах проекта.\nЗначения 'true' или 'false'
error.not.available.in.javascript.code={0} недоступно в JavaScript коде
error.wrong.caret.position.method.name=Курсор должен быть установлен на имени метода для рефакторинга.
es6.auto.import.options.completion.add.imports=Автоматически добавлять JavaScript импорты
es6.auto.import.options.title=TypeScript / JavaScript
es6.change.to.default.fix=Использовать импорт по умолчанию для ''{0}''
es6.change.to.named.import.fix=Использовать именованный импорт для ''{0}''
es6.changeSignature.call.value.not.allowed=Значение в вызове не допускается для параметра ''{0}'', так как оно не было указано для предшествующих параметров.
es6.changeSignature.no.call.value=Добавлен новый параметр ''{0}''.\nУкажите значение по умолчанию или значение для использования во всех существующих вызовах этого метода.
es6.code.style.path.mapping.always=Всегда
es6.code.style.path.mapping.different.paths=Только в файлах вне указанных путей
es6.code.style.path.mapping.never=Никогда
es6.default.export.not.declared=Экспорт по умолчанию не объявлен в импортуемом модуле
es6.extract.super.destination.label=Целевой файл  [&D]\:
es6.extract.super.different.name.expected=Ожидается другое имя
es6.extract.super.members.in.interface=Члены в новом интерфейсе
es6.extract.super.members.in.superclass=Члены в новом суперклассе
es6.extract.super.overload.declaration.without.implementation.conflict=Объявление перегрузки {0} без реализации не допускается в классе
es6.import.options.blacklist.title=Не импортовать точно из\:
es6.import.options.exts.help=Эта опция настраивает расширения в операторах import.<br><br>При выборе "Автоматически" ИСР добавляет расширения к именам vue файлов, файлов из проектов с "type"\: "module" в package.json и файлов с расширениями .mjs или .cjs.<br><br>При выборе "Всегда" ИСР всегда добавляет расширения к именам файлов.<br><br>При выборе "Никогда" ИСР всегда использует имена файлов без расширений.
es6.import.options.not.import.help=Эта опция настраивает точные пути, которые ИСР пропускает при автоматическом импорте символа. Вместо этого ИСР будет искать альтернативные пути для импорта символа. Пути должны соответствовать правилам glob-шаблонов.
es6.import.options.paths=Использовать псевдонимы путей\:
es6.import.options.paths.help=Эта опция настраивает стиль путей, используемых в операторах import.<br><br>При выборе "Всегда" ИСР всегда использует псевдонимы из конфигурации webpack, vite или jsconfig.json.<br><br>При выборе "Только в файлах вне указанных путей" ИСР использует относительные пути для импортов между файлами, для которых определен псевдоним. Во всех остальных файлах используются сопоставления путей.<br><br>При выборе "Никогда" псевдонимы никогда не используются.
es6.insert.await.fix=Вставить await
es6.missing.await.report.for.promises=Сообщать о промисах в операторах return
es6.missing.await.report.for.promises.hint=Наличие 'await' перед вызовом асинхронной функции помогает V8 предоставить асинхронный стек вызовов
es6.move.module.members.cannot.detect.js.language=Целевой файл не является JS файлом
es6.move.module.members.destination.contains.default.export=Целевой модуль содержит экспорт по умолчанию
es6.move.module.members.destination.does.not.support.jsx={0} содержит JSX теги, но целевой язык их не поддерживает
es6.move.module.members.destination.not.es6=Целевой файл {0} не является ES6 модулем
es6.move.module.members.has.local.usage.message=Неэкспортованный {0} используется в файле {1}
es6.move.module.members.incompatible.language=Целевой модуль имеет несовместимый язык
es6.move.module.members.non.es6.module.usage={0} используется в файле {1}, который не является ES6 модулем
es6.move.module.members.refactoring.create.file=Создать файл
es6.move.module.members.refactoring.create.file.message=Файл {0} не существует.\nСоздать его?
es6.move.module.members.refactoring.dialog.error.incorrect.module=Некорректный целевой модуль
es6.move.module.members.refactoring.dialog.error.invalid.file.name=Недопустимое имя целевого файла для данной операционной системы
es6.move.module.members.refactoring.dialog.error.modules.same=Исходный и целевой модули должны различаться
es6.move.module.members.refactoring.dialog.error.no.script.tag=Целевой файл не содержит тег script
es6.move.module.members.refactoring.dialog.error.no.selected.items=Не выбраны члены для перемещения
es6.move.module.members.refactoring.dialog.field.from=Из\:
es6.move.module.members.refactoring.dialog.field.to=В\:
es6.move.module.members.refactoring.dialog.move.member.to=Переместить член в
es6.move.module.members.refactoring.file.does.not.exist=Файл {0} не существует
es6.move.module.members.refactoring.name=Переместить члены модуля
es6.move.module.members.references.local.message=Выбранный {0} ссылается на неэкспортованный {1}
es6.move.module.members.references.unresolved.import.message=Выбранный {0} ссылается на неразрешённый импорт {1}
es6.move.module.members.syntax.errors=Перемещение {0} приведет к синтаксическим ошибкам из-за различий в языках
es6.move.module.members.table.title=Члены для перемещения
es6.prefer.short.import.name=Импорт можно сократить
es6.redundant.await.report.for.promises=Сообщать для промисов
es6.redundant.await.report.for.promises.hint=Всегда сообщает о избыточности 'return await', но это нарушает функцию асинхронных стеков V8
es6.replace.import.action.name=Заменить на {0}
es6.replace.import.family.name=Заменить на более короткий путь
es6.validate.import.error=Не удаётся разрешить символ ''{0}''
es6.validation.message.const.variable.without.initializer=Переменная 'const' без инициализатора не допускается
escape.jsdoc.copy.pasted.text=Экранировать ведущие звездочки JSDoc при копировании и вставке
escape.pasted.text=Экранировать текст при вставке в строковые литералы
eslint.action.fix.problems.description=Исправить проблемы ESLint вызовом 'eslint --fix'
eslint.additional.rules.directory.field.name=дополнительная директория правил
eslint.code.style.apply.message=Применить стиль кода из ESLint?
eslint.code.style.apply.text=Да
eslint.code.style.dismiss.text=Нет
eslint.configurable.additionalRulesDir.browseDialogTitle=Выберите дополнительную директорию правил ESLint
eslint.configurable.additionalRulesDir.label=Дополнительная директория правил  [&R]\:
eslint.configurable.config.autoSearch.description.bodyInnerHtml=ESLint будет автоматически искать файлы .eslintrc.* и package.json в директории проверяемого файла и во всех родительских директориях вплоть до корня файловой системы.<div style\="padding-top\:8px">Для использования package.json добавьте конфигурацию в свойство <code>eslintConfig</code>.</div>
eslint.configurable.config.select.config.text=Выберите файл конфигурации ESLint (*.eslintrc.*)
eslint.configurable.eslintPackage.label=Пакет ESLint [&E]\:
eslint.configurable.extraOptions.label=Дополнительные опции eslint  [&O]\:
eslint.configurable.label.working.directories=Рабочие директории [&W]\:
eslint.configurable.working.dir.field.empty.text=Определять по ближайшему .eslintrc или .eslintignore
eslint.configurable.working.directories.comment=Пути или <a href\='https\://github.com/isaacs/node-glob\#glob-primer'>glob-шаблоны</a>, разделенные точкой с запятой. Оставьте пустым для автоопределения.
eslint.configuration.file.field.name=Файл конфигурации ESLint
eslint.error.package.directory.expected=Ожидается директория пакета
eslint.files.pattern.comment=Используйте <a href\='https\://github.com/isaacs/node-glob\#glob-primer'>glob-шаблон</a>, например <code>**/*.{js,ts}</code>
eslint.fix.problems.family.name={0}\: Исправить текущую ошибку
eslint.fix.problems.text.current={0}\: Исправить текущую ошибку
eslint.fix.problems.text.with.error.code={0}\: Исправить ''{1}''
eslint.inspections.error.can.not.parse.message=Не удаётся разобрать сообщение, ожидался JSON объект, получено\: {0}
eslint.inspections.error.messages.not.array=Сообщения не являются массивом\: {0}
eslint.inspections.error.unexpected.language.service.response=Неожиданный ответ языковой службы\: {0}
eslint.inspections.error.unknown.message.severity=Неизвестная важность сообщения\: {0}\nтело\:\n{1}
eslint.run.for.files.label=Запускать для файлов [&F]\:
eslint.run.on.save=Запускать eslint --fix при сохранении [&U]
eslint.run.on.save.auto.configuration.comment=Автоматическая конфигурация ESLint
eslint.run.on.save.checkbox.on.actions.on.save.page=Запускать eslint --fix
eslint.run.on.save.disabled.comment=Интеграция ESLint отключена
eslint.run.on.save.link.enable.eslint=Включить ESLint…
eslint.run.on.save.manual.configuration.comment=Ручная конфигурация ESLint
eslint.version.0.is.not.supported.please.upgrade.eslint=Версия ESLint {0} не поддерживается. Пожалуйста, обновите ESLint.
extract.0.turn.refs=Извлечь {0} и использовать где возможно [&T]
extract.constant.type=&Тип [&T]\:
extract.function.declare.arrow.function=&Стрелочная функция
extract.function.function=Функция
extract.function.name=&Имя [&N]\:
extract.function.parameters=Параметры
extract.function.return.type=&Тип возвращаемого значения [&T]\:
extract.function.signature.preview=Предпросмотр сигнатуры
extract.interface.command.name=Извлечение интерфейса
extract.method.declare.static=Объявить static [&S]
extract.subclass.command.name=Извлечение подкласса {0} из {1}
extract.type.alias.command.name=Извлечение псевдонима типа
failed.to.download=Не удалось загрузить
fetch.client.generator.title=JavaScript Fetch
field.initializer.is.not.specified=Инициализатор поля не указан
file.name.masks.to.skip.from.analysis=Маски имен файлов для исключения из анализа\:
filetype.actionscript.description=ActionScript
filetype.js.testing.snapshot.description=JavaScript тестовый снапшот (Jest)
filetype.js.testing.snapshot.display.name=JavaScript тестовый снапшот
filetype.jshint.config.description=Конфигурация JSHint
filetype.jshint.config.display.name=Конфигурация JSHint
filetype.yarn.lock.description=Yarn lock
filetype.yarn.lock.display.name=Yarn Lock
find.usages.of.base.class=Метод {0} из {1}\nпереопределяет метод из {2}.\nВы хотите {3} базовый метод?
find.usages.of.base.interface=Метод {0} из {1}\nреализует метод из {2}.\nВы хотите {3} базовый метод?
flow.js.get.type=Flow JS\: Получить тип
flow.js.show.settings=Настроить Flow…
flow.js.version.not.supported=Версия Flow JS {0} не поддерживается
flow.js.widget.display.name=Flow JS
flow.js.widget.name=Flow
function.names={1}{0,choice,1\#функция|2\#функции}
function.returns=Типы возвращаемых значений функций
function.returns.description=Типы возвращаемых значений функций
generate.constructor.overloads.and.fields.chooser.title=Выберите перегрузки для использования и поля для инициализации
generate.delegate.method.conflict.message=Невозможно сгенерировать делегаты для одноименных членов через разные свойства
generate.delegate.method.conflict.message.title=Невозможно сгенерировать делегаты
generate.filter.button.description=Показать {0} в списке
generate.filter.button.tooltip=Показать {0}
generate.filter.fields=Поля и свойства
generate.filter.indexers=Индексаторы
generate.filter.methods=Методы
generate.to.string.chooser.title=Выберите поля для использования в функции toString
generating.0=Генерация {0}
generating.new.project=Новый проект
generating.template.processing=Обработка шаблона
generating.with.tips=Создать демонстрационный проект с советами по началу работы
generating.with.tips.comment=Проект счетчика на основе Vite
generation.bindable.event=&Привязываемое событие [&B]\:
generation.event.constant=&Константа события [&E]\:
group.Editor.JSLibrariesMenu.description=Выберите JavaScript библиотеки для использования с текущим файлом
group.Editor.JSLibrariesMenu.text=Использовать JavaScript библиотеку
grunt.before.run.task=Запустить задачу Grunt
grunt.before.run.task.descr=Запустить Grunt {0, choice, 0\#задачу|1\#задачу|2\#задачи}{1} [{2}]
grunt.gruntfile.not.found=Gruntfile не найден
grunt.rc.arguments.label=А&ргументы [&R]\:
grunt.rc.environmentVariables.label=&Окружение [&E]\:
grunt.rc.gruntCliPackage.label=Пакет grunt-cli [&P]\:
grunt.rc.gruntfile.browseDialogTitle=Выберите Gruntfile
grunt.rc.gruntfile.label=Gruntfile [&F]\:
grunt.rc.nodeInterpreter.label=Node &интерпретатор [&I]\:
grunt.rc.nodeOptions.label=Node &опции [&O]\:
grunt.rc.tasks.label=&Задачи [&T]\:
grunt.task.title=Задача Grunt
grunt.unspecified.gruntfile=Не указан Gruntfile
gulp.before.run.task=Запустить задачу gulp
gulp.before.run.task.descr=Запустить gulp {0, choice, 0\#задачу|1\#задачу|2\#задачи}{1} [{2}]
gulp.gulpfile.not.found=Gulpfile не найден
gulp.gulpfile.unspecified=Gulpfile не указан
gulp.rc.arguments.label=А&ргументы [&R]\:
gulp.rc.environmentVariables.label=&Окружение [&E]\:
gulp.rc.gulpPackage.label=Пакет Gulp [&G]\:
gulp.rc.gulpfile.browseDialogTitle=Выберите gulpfile.js
gulp.rc.gulpfile.label=Gulpfile [&F]\:
gulp.rc.nodeInterpreter.label=Node &интерпретатор [&I]\:
gulp.rc.nodeOptions.label=Node &опции [&O]\:
gulp.rc.tasks.label=&Задачи [&T]\:
gulp.task.title=Задача Gulp
header.declarations.to.be.refactored=Объявления для рефакторинга
icon.icons.nodes.readonlyMark.tooltip=только для чтения
ignore.unused.option.all=Все
ignore.unused.option.before.used=Перед использованием
ignore.unused.option.none=Нет
implement.members.abstract=Реализовать abstract члены
import.options.find.more.configuration.options=Найдите дополнительные параметры конфигурации в <a>Стиле кода</a>
initialize.fields.intention.visibility=Видимость\:
inlay.hints.max.one.usage.text={0,choice, 0\#не используется|1\#Показать использования}
inlay.hints.usages.text={0,choice, 0\#не используется|1\#1 использование|2\#{0,number}'{1,choice, |1\#+}' использований}
inlay.parameters.angular.show.names.for.all.args=Литеральные и именованные параметры объектов в Angular HTML шаблонах.
inlay.parameters.angular.show.names.for.pipes=<a href\='https\://angular.io/guide/pipes'>Пайпы в Angular HTML шаблонах.</a>
inlay.parameters.js.only.show.names.for.all.args=Литеральные и нелитеральные аргументы, выражения вызова, объекты и инициализаторы массивов.
inlay.parameters.js.only.show.names.for.pipes=<a href\='https\://github.com/tc39/proposal-pipeline-operator'>Параметры в операторах конвейера.</a>
inlay.parameters.js.only.show.names.for.tagged=<a href\='https\://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\#tagged_templates'>Аргументы в размеченных шаблонах.</a><br>Эта настройка действует только для нелитеральных аргументов и доступна только при включенной опции "Нелитеральные аргументы".
inlay.parameters.js.param.hints.show.names.for.all.args=Литеральные и именованные параметры объектов в вызовах методов.
inlay.parameters.js.param.hints.show.names.for.tagged=Аргументы в размеченных шаблонах.
inlay.parameters.vuejs.show.names.for.all.args=Литералы и именованные объекты.
inlay.parameters.vuejs.show.names.for.filters=<a href\='https\://v2.vuejs.org/v2/guide/filters.html'>Фильтры (Vue 2).</a>
inline.cannot.inline.has.supers=Невозможно встроить {0}, расширяющий другие типы
inline.cannot.inline.references.this.type=Невозможно встроить интерфейс, ссылающийся на тип 'this'
inline.type.used.in.reference.list=Невозможно встроить использование в список ''{0}''
insert.class.fix.name=Добавить квалификатор имени класса
insert.new.keyword.fix.name=Вставить ключевое слово new
insert.this.keyword.fix.name=Добавить квалификатор this
inspection.NodeCoreCodingAssistanceInspection.no.coding.assistance.message=Помощь при написании кода для Node.js отключена
inspection.message.installed.version.doesn.t.match.version.range=Установленная версия {0} не соответствует диапазону версий {1}
inspection.message.package.installed=Пакет {0} не установлен
inspection.message.package.version.specified=Версия пакета не указана
inspection.message.reference.includes.files.outside.project=Ссылка включает файлы вне проекта
inspection.message.sm.test.runner.magnitude.assertion.failed.title=Ошибка утверждения
inspection.update.package_json.dependency.action.text=Обновить ''{0}'' до последней версии {1}
inspection.update.package_json.dependency.message=Доступна новая версия ''{0}''\: {1}
intellilang.tagged.literal.expression.border.title=Тег шаблона
intellilang.tagged.literal.injection.name.label=Шаблон\:
intention.category.ecmascript6=JavaScript/ECMAScript 6
intention.category.javascript=JavaScript
intention.category.react=React
intention.category.typescript=TypeScript
intention.family.name.add.required.property=Добавить обязательное свойство
intention.family.name.enable.web.types=Включить поддержку HTMX
intention.family.name.introduce.parameter.properties.for.unused.parameters=Преобразовать в свойства параметров
intention.family.name.run.npm.install=Выполнить 'npm install'
intention.family.name.select.in.test.tree=Выбрать в дереве тестов
intention.family.name.suppress.with.ts.ignore=Подавить с помощью @ts-ignore
intention.family.name.surround.with.tag=Обернуть тегом
intention.name.add.file.to.tsconfig=Добавить файл ''{0}'' в tsconfig.json
intention.name.create.library.with.files.outside.project=Создать библиотеку с файлами вне проекта
intention.name.import.augmentation=Импортовать расширение {0}
intention.name.loading.service.fixes=Загрузка исправлений сервиса…
intention.name.navigate.to=Перейти к {0}
intention.name.run.npm=Выполнить ''{0}''
intention.name.surround.with.tag=Обернуть тегом <{0}>
interface.cannot.be.extracted.from.enum=Нельзя извлечь интерфейс из перечисления
interface.cannot.be.extracted.from.type.alias=Нельзя извлечь интерфейс из псевдонима типа
interface.function.declaration.should.have.no.body=Объявление функции интерфейса не должно иметь тела
interface.should.have.no.variable.declarations=Интерфейс не должен содержать объявлений переменных
interface.template.title=Интерфейс
introduce.constant.target.class=Целевой класс [&A]\:
introduce.field.class.constructor=Конструктор класса [&C]
introduce.field.current.method=Текущий метод [&M]
introduce.field.declaration=Объявление поля [&D]
introduce.field.initialize.in=Инициализовать в
introduce.field.type=&Тип [&T]\:
introduce.parameter.optional=Опциональный параметр [&O]
introduce.parameter.type=&Тип [&T]\:
introduce.variable.const=&const [&C]
introduce.variable.declaration=Объявление переменной
introduce.variable.let=&let [&L]
introduce.variable.make.constant=Сделать константой [&C]
introduce.variable.var=&var [&V]
introduce.variable.var.of.type=Переменная типа [&T]\:
invalid.field.type.expression=Недопустимый тип поля\: ''{0}''
invalid.identifier.value.0=Недопустимый идентификатор\: ''{0}''
invalid.parameter.type.expression=Недопустимый тип параметра ''{0}''
invalid.return.type.expression=Недопустимый тип возвращаемого значения ''{0}''
item.already.exists={0} {1} уже существует
javascript.abstract.class.can.not.be.instantiated.message=Нельзя создать экземпляр абстрактного класса
javascript.ambient.declaration.const.should.be.primitive=Инициализатор 'const' в ambient-контексте должен быть примитивным литералом или ссылкой на литерал перечисления
javascript.ambient.declaration.should.have.no.body=Ambient-объявление не должно иметь тела
javascript.ambient.declaration.should.have.no.initializer=Ambient-объявление не должно иметь инициализатора
javascript.argument.type.mismatch=Тип аргумента {1} не может быть присвоен типу параметра {0}
javascript.argument.types.mismatch=Типы аргументов не соответствуют параметрам
javascript.assign.parameter.to.field.intention.name=Присвоить параметр ''{0}'' полю
javascript.assigned.expression.type.mismatch=Тип присваиваемого выражения {1} не может быть присвоен типу {0}
javascript.assume.uppercase.functions.to.be.constructors=Считать конструкторами только функции в верхнем регистре
javascript.auto.import.options.add.imports.on.the.fly=Однозначные импорты на лету
javascript.auto.import.options.add.on.code.completion=При автодополнении кода
javascript.auto.import.options.show.popup=С подсказкой автоимпорта
javascript.badcharacter=Некорректный символ
javascript.blockcomment=Комментарии//Блочный комментарий
javascript.braces=Скобки и операторы//Фигурные скобки
javascript.brackets=Скобки и операторы//Квадратные скобки
javascript.cannot.return.expression.from.function.with.void.result.type=Нельзя вернуть значение из функции с типом результата void
javascript.cannot.return.expression.from.function.with.void.result.type.fix=Удалить возвращаемое значение
javascript.change.jsdoc.type.family.name=Изменить тип элемента в JSDoc
javascript.change.language.level.family=Изменить версию JavaScript
javascript.change.language.level.message=Изменить версию JavaScript на {0}
javascript.change.signature.invalid.function.name.0=Недопустимое имя функции\: ''{0}''
javascript.change.signature.invalid.parameter.declaration=Недопустимый параметр\: ''{0}''
javascript.changeSignature.call.value.not.allowed=Значение по умолчанию не разрешено для параметра ''{0}'', так как оно не указано для предыдущих параметров.
javascript.changeSignature.no.call.value=Добавлен новый обязательный параметр ''{0}''.\nУкажите значение по умолчанию для использования во всех существующих вызовах этого метода.
javascript.check.global.definitions=Проверять присваивания в глобальной области видимости
javascript.class=Классы//Имя класса
javascript.comma=Скобки и операторы//Запятая
javascript.completion.several.definitions=(несколько определений)
javascript.constructor.call.without.new.message=Вызов конструктора без <code>new</code>
javascript.constructor.with.lower.case.name.used.message=Имена конструкторов обычно начинаются с заглавной буквы. Опечатка?
javascript.create.class.intention.name=Создать класс ''{0}''
javascript.create.constant.field.intention.name=Создать константное поле ''{0}''
javascript.create.constant.holding.arrow.function.intention.name=Создать константу ''{0}'', содержащую стрелочную функцию
javascript.create.constant.intention.name=Создать константу ''{0}''
javascript.create.constructor.intention.name=Создать конструктор в классе ''{0}''
javascript.create.event.handler.intention.name=Создать обработчик события ''{0}''
javascript.create.field.holding.arrow.function.intention.name=Создать поле ''{0}'', содержащее стрелочную функцию
javascript.create.field.intention.name=Создать поле ''{0}''
javascript.create.function.intention.family=Создать функцию или метод JavaScript
javascript.create.function.intention.name=Создать функцию ''{0}''
javascript.create.function.property.intention.name=Создать функциональное свойство ''{0}''
javascript.create.get.property.intention.name=Создать свойство ''get'' ''{0}''
javascript.create.interface.intention.name=Создать интерфейс ''{0}''
javascript.create.method.intention.name=Создать метод ''{0}''
javascript.create.property.holding.arrow.function.intention.name=Создать свойство ''{0}'', содержащее стрелочную функцию
javascript.create.property.intention.name=Создать свойство ''{0}''
javascript.create.set.property.intention.name=Создать свойство ''set'' ''{0}''
javascript.create.variable.holding.arrow.function.intention.name=Создать переменную ''{0}'', содержащую стрелочную функцию
javascript.create.variable.intention.family=Создать переменную или свойство JavaScript
javascript.create.variable.intention.name=Создать переменную ''{0}''
javascript.declare.variable.in.previous.var.statement.intention.family=Вставить объявление var в предыдущий оператор var
javascript.declare.variable.in.previous.var.statement.intention.name=Вставить объявление var для ''{0}'' в предыдущий оператор var
javascript.declare.variable.intention.family.name=Вставить объявление var
javascript.declare.variable.intention.name=Вставить объявление {0} для ''{1}''
javascript.deprecated.symbol.replace.fix=Заменить устаревший код на {0}
javascript.deprecated.symbol.replace.fix.family=Заменить устаревший код предложенной заменой
javascript.deprecated.symbol.used.name.message=Используется устаревший символ, обратитесь к документации для поиска лучшей альтернативы \#loc
javascript.deprecated.symbol.used.name.message2=С версии {0} символ помечен как устаревший, используйте {1} в качестве замены \#loc
javascript.destructuring.initializer=Инициализатор {0}
javascript.destructuring.variable.only=Только переменная в деструктуризации
javascript.doccomment=Комментарии//Документация//Текст
javascript.doctag=Комментарии//Документация//Тег
javascript.doctagvalue=Комментарии//Документация//Значение
javascript.dot=Скобки и операторы//Точка
javascript.element.default.instead.named=Используется импорт по умолчанию вместо именованного импорта
javascript.element.is.not.accessible.message=Элемент недоступен \#loc
javascript.element.need.to.be.exported=Элемент не экспортован
javascript.element.need.to.be.imported=Элемент не импортован
javascript.element.need.to.be.included.to.config=Соответствующий файл не включен в tsconfig.json
javascript.equality.comparison.with.coercion.display.name=Оператор равенства может вызвать приведение типов
javascript.equality.comparison.with.coercion.error.string=Сравнение \#ref может вызвать неожиданное приведение типов \#loc
javascript.equality.comparison.with.coercion.family.name=Заменить без приведения типов
javascript.equality.comparison.with.coercion.fix=Заменить на ''{0}''
javascript.equality.comparison.with.coercion.option.always=Все
javascript.equality.comparison.with.coercion.option.always.except.null=Все, кроме сравнения с null или typeof
javascript.equality.comparison.with.coercion.option.only.suspicious=Только подозрительные выражения
javascript.equality.comparison.with.coercion.options.label=Подсвечивать использование '\=\=' и '\!\='\:
javascript.expected.class.or.descendant=Ожидается класс {0} или его потомок
javascript.export.only.member=Элемент только для экспорта
javascript.exported.class=Классы//Экспортуемый класс
javascript.exported.function=Идентификаторы//Экспортуемая функция
javascript.exported.variable=Идентификаторы//Экспортуемая переменная
javascript.expression.type.implicitly.coerced.to.unrelated.type=Тип выражения {1} неявно приводится к несвязанному типу {0}
javascript.extract.method.title=Извлечь функцию
javascript.falsy.typeof.guard=Проверка ''typeof'' всегда ложна\: ''{0}'' всегда имеет тип ''{1}''
javascript.find.usages.destructuring.target.dialog=Сокращенная переменная деструктуризации инициализована с {0}.\nКакие использования вы хотите найти?
javascript.fix.add.enum.values=Добавить значения перечисления
javascript.fix.add.override.modifier=Добавить модификатор override
javascript.fix.add.string.enum.values=Добавить строковые значения перечисления
javascript.fix.change.parameter.type=Изменить тип параметра ''{0}'' на ''{1}''
javascript.fix.change.type=Изменить тип ''{0}'' на ''{1}''
javascript.fix.create.constructor.invoke.super=Создать конструктор, соответствующий super
javascript.fix.create.extends=Расширить ''{0}'' классом ''{1}''
javascript.fix.create.implements=Реализовать ''{1}'' в ''{0}''
javascript.fix.create.inheritor.family=Наследовать от супертипа
javascript.fix.create.invoke.super=Вставить вызов конструктора суперкласса
javascript.fix.create.parameter=Создать параметр ''{0}''
javascript.fix.generate.argument.stubs=Сгенерировать заглушки аргументов
javascript.fix.implement=Реализовать {0}
javascript.fix.implement.chooser.all=Все классы
javascript.fix.implement.chooser.title=Реализовать член в
javascript.fix.implement.family=Реализовать в производных классах
javascript.fix.implement.members=Реализовать члены
javascript.fix.implement.methods=Реализовать методы
javascript.fix.initialize.parameter=Инициализовать параметр
javascript.fix.message.change.parameters.to.expected=Изменить параметры на ожидаемые
javascript.fix.message.change.return.type.to.expected=Изменить возвращаемый тип на ожидаемый
javascript.fix.optimize.imports=Оптимизовать импорты
javascript.fix.property.spelling.family=Исправить возможную опечатку в имени свойства
javascript.fix.property.spelling.text=Исправить написание на ''{0}''
javascript.fix.remove.abstract.keyword=Удалить модификатор 'abstract'
javascript.fix.remove.access.modifier=Удалить модификатор доступа
javascript.fix.remove.circular.dependency=Удалить циклическую зависимость
javascript.fix.remove.comma=Удалить запятую
javascript.fix.remove.constructor=Удалить конструктор
javascript.fix.remove.default=Удалить блок default
javascript.fix.remove.dynamic.modifier=Удалить модификатор dynamic
javascript.fix.remove.externally.visible.symbol=Удалить внешне видимый символ
javascript.fix.remove.final.modifier=Удалить модификатор final
javascript.fix.remove.initializer=Удалить инициализатор
javascript.fix.remove.modifier=Удалить модификатор
javascript.fix.remove.namespace.reference=Удалить ссылку на пространство имён
javascript.fix.remove.override.modifier=Удалить модификатор override
javascript.fix.remove.parameter=Удалить параметр
javascript.fix.remove.parameters=Удалить параметры
javascript.fix.remove.setter.parameter.initializer=Удалить значение по умолчанию параметра
javascript.fix.remove.static.modifier=Удалить модификатор static
javascript.fix.remove.type.reference=Удалить ссылку на тип
javascript.fix.remove.virtual.modifier=Удалить модификатор virtual
javascript.fix.remove.visibility.modifier=Удалить модификатор видимости
javascript.fix.set.element.visibility=Сделать {0} {1}
javascript.fix.set.method.return.type=Сделать возвращаемое значение ''{0}'' типом ''{1}''
javascript.fix.visibility.family=Исправить проблемы с видимостью
javascript.formatting.options.panel.comments=Комментарии
javascript.formatting.options.panel.naming.conventions=Соглашения об именовании
javascript.formatting.web.spacing.within.group=Внутри
javascript.formatting.web.spacing.within.interpolations=Интерполяции
javascript.formatting.web.wrapping.interpolations=Интерполяции
javascript.formatting.web.wrapping.new-line-after-start-delimiter=Новая строка после '{{'
javascript.formatting.web.wrapping.new-line-before-end-delimiter=Новая строка перед '}}'
javascript.function.arrow=Скобки и операторы//Стрелочная функция
javascript.global.decorator=Декоратор
javascript.global.function=Идентификаторы//Глобальная функция
javascript.global.variable=Идентификаторы//Глобальная переменная
javascript.ignore.unused.catch.parameters=Игнорировать неиспользуемые параметры catch
javascript.ignore.unused.function.parameters=Игнорировать неиспользуемые параметры\:
javascript.illegal.variable.type.void=Недопустимый тип переменной\: 'void'
javascript.implement.all.interfaces=Реализовать все члены
javascript.implement.members.abstract=Реализовать абстрактные члены
javascript.implement.required.interfaces=Реализовать все необходимые члены
javascript.import.options.use.resource.root=Использовать пути относительно корней проекта, ресурсов или исходников
javascript.incorrect.array.type.in.for-in=Тип ключа массива должен быть String
javascript.incorrect.variable.type.mismatch=Тип переменной {1} не может быть присвоен типу {0}
javascript.indexed.property.instead.of.computed.name=Квадратные скобки доступа к индексированному свойству находятся на отдельной строке. Ожидается вычисляемое имя?
javascript.initializer.type.mismatch=Тип инициализатора {1} не может быть присвоен типу переменной {0}
javascript.inline.element.is.not.used={0} никогда не используется
javascript.insert.cast.fix=Вставить приведение типа
javascript.insert.generic.wrapper.fix.family.name=Обернуть обобщенным типом
javascript.insert.primitive.wrapper.fix.family.name=Обернуть примитивным типом
javascript.insert.symbol.fix=Вставить {0}
javascript.insert.wrapper.fix.text=Обернуть с помощью ''{0}''
javascript.instance.member.function=Объект//Метод
javascript.instance.member.is.not.accessible.message=Член экземпляра недоступен \#loc
javascript.instance.member.variable=Объект//Свойство
javascript.intention.add.default.export.family.name=Добавить export default
javascript.intention.add.export.family.name=Добавить export
javascript.intention.add.export.fix.text=Сделать {0} экспортуемым в файле {1}
javascript.intention.add.template.argument=Вставить аргумент строкового шаблона
javascript.intention.call.chain.to.pipe=Заменить вложенные вызовы на конвейерное выражение
javascript.intention.code.optimizations.text=Оптимизация сгенерированного кода
javascript.intention.create.getter=Создать getter для ''{0}''
javascript.intention.create.getter.desc=Создать getter
javascript.intention.create.getter.setter=Создать getter и setter для ''{0}''
javascript.intention.create.getter.setter.desc=Создать getter и setter
javascript.intention.create.setter=Создать setter для ''{0}''
javascript.intention.create.setter.desc=Создать setter
javascript.intention.expand.nullish.coalescing=Развернуть оператор нулевого слияния
javascript.intention.expand.opt.chain=Развернуть опциональную цепочку
javascript.intention.expand.opt.chain.and.nullish.coalescing=Развернуть опциональную цепочку и оператор нулевого слияния
javascript.intention.expand.opt.chain.and.or.coalescing=Развернуть опциональную цепочку и использовать оператор ?\:
javascript.intention.expand.opt.chain.family=Развернуть опциональную цепочку или оператор нулевого слияния в явные проверки
javascript.intention.expand.or.coalescing=Использовать оператор ?\:
javascript.intention.explicit.fields=Объявить явные поля класса
javascript.intention.explicit.fields.dialog.title=Выберите поля для явного объявления
javascript.intention.explicit.fields.single=Объявить явное поле класса
javascript.intention.init.fields=Инициализовать новые поля из параметров
javascript.intention.init.fields.dialog.title=Выберите параметры для инициализации полей
javascript.intention.opt.chain.chain.and.coalesce=Использовать опциональную цепочку и оператор нулевого слияния
javascript.intention.opt.chain.chain.only=Использовать опциональную цепочку
javascript.intention.opt.chain.coalesce.only=Использовать оператор нулевого слияния
javascript.intention.opt.chain.conditional.only=Использовать '||'
javascript.intention.opt.chain.family=Использовать опциональную цепочку или оператор нулевого слияния
javascript.intention.pipe.to.call.chain=Заменить конвейерное выражение на вложенные вызовы
javascript.intention.promise.to.async.name=Преобразовать в async-функцию
javascript.intention.remove.export.family.name=Удалить export
javascript.intention.remove.export.inaccessible.conflict.text={0} используется в {1}
javascript.interface=Интерфейс
javascript.interface.can.not.be.instantiated.message=Интерфейс не может быть инстанциирован
javascript.introduce.breaks.operator.precedence=Невозможно выполнить рефакторинг.\nСоздание изменит приоритет операторов в выражении.
javascript.introduce.constant.error.expression.has.void.type=Невозможно создать константу.\nТип выбранного выражения void.
javascript.introduce.constant.error.no.expression.selected=Невозможно создать константу.\nВыделенный фрагмент не является выражением.
javascript.introduce.constant.error.not.constant.expression.selected=Невозможно создать константу.\nВыделенный фрагмент не является константным выражением.
javascript.introduce.constant.in.es5=Невозможно выполнить рефакторинг.\nНельзя создать константу в коде ECMAScript 3 или ECMAScript 5.
javascript.introduce.constant.title=Создать константу
javascript.introduce.element.already.exists={0} с таким именем уже существует в этой области видимости.
javascript.introduce.field.before.super.call=Невозможно создать поле.\nНельзя обращаться к 'this' до вызова 'super'.
javascript.introduce.field.constructor=Конструктор
javascript.introduce.field.current.method=Текущий метод
javascript.introduce.field.error.expression.has.void.type=Невозможно создать переменную.\nТип выбранного выражения void.
javascript.introduce.field.error.no.enclosing.class=Невозможно создать поле.\nНет охватывающего класса.
javascript.introduce.field.error.no.expression.selected=Невозможно создать поле.\nВыделенный фрагмент не является выражением.
javascript.introduce.field.field.declaration=Объявление поля
javascript.introduce.field.initialize.in.scope=Инициализовать в [&I]\:
javascript.introduce.field.keyboard.hint=Нажмите {0} для вызова клавиатурных сокращений
javascript.introduce.field.make.readonly=Сделать readonly [&R]
javascript.introduce.field.title=Создать поле
javascript.introduce.field.visibility=Видимость [&V]\:
javascript.introduce.in.embedded.expression=Невозможно выполнить рефакторинг.\nНельзя создать во встроенном выражении
javascript.introduce.incorrect.context=Невозможно создать переменную.\nВыделение содержит ссылку на 'this'
javascript.introduce.parameter.error.expression.has.void.type=Невозможно создать параметр.\nТип выбранного выражения void.
javascript.introduce.parameter.error.no.containing.function=Невозможно создать параметр.\nНе найдена содержащая функция.
javascript.introduce.parameter.error.no.expression.selected=Невозможно создать параметр.\nВыделенный фрагмент не является выражением.
javascript.introduce.parameter.error.not.async.context=Невозможно создать параметр для выражения, содержащего 'await'.\nНе все использования находятся внутри async-функции
javascript.introduce.parameter.error.target.not.async=Невозможно создать параметр для выражения, содержащего 'await'.\nЦелевая функция не является async-функцией
javascript.introduce.parameter.error.yield=Невозможно создать параметр для выражения, содержащего 'yield'.
javascript.introduce.parameter.generate.jsdoc=Сгенерировать JSDoc
javascript.introduce.parameter.introduced.variable.value=Значение [&V]\:
javascript.introduce.parameter.optional.parameter=Опциональный параметр
javascript.introduce.parameter.title=Извлечь параметр
javascript.introduce.throw.expressions.unsupported=Невозможно выполнить рефакторинг.\nВыражения throw в настоящее время не поддерживаются в рефакторингах 'Extract'.
javascript.introduce.variable.arrow.await.referenced=Невозможно создать.\nВыделение содержит await-выражения
javascript.introduce.variable.arrow.function.parameter.referenced=Невозможно создать.\nВыделение содержит ссылки на параметры стрелочной функции
javascript.introduce.variable.error.expression.has.void.type=Невозможно создать переменную.\nТип выбранного выражения void.
javascript.introduce.variable.error.no.expression.selected=Невозможно создать переменную.\nВыделенный фрагмент не является выражением.
javascript.introduce.variable.invalid.name=Введите корректное имя.
javascript.introduce.variable.make.constant=Сделать константой
javascript.introduce.variable.name.prompt=Имя [&N]\:
javascript.introduce.variable.replace.all.occurrences=Заменить все вхождения (найдено {0} вхождений) [&A]
javascript.introduce.variable.title=Извлечь переменную
javascript.introduce.variable.title.local=Создать локальную переменную
javascript.introduce.variable.xml.embedded=Невозможно создать переменную во встроенном выражении
javascript.invalid.delete.target.message=Недопустимая цель оператора delete, ожидается ссылка на поле
javascript.invalid.extended.unicode.escape=Расширенная Unicode-последовательность допускает только значения между 0x0 и 0x10FFFF
javascript.invalid.invoker.target=Недопустимая цель вызова
javascript.invalid.number.of.parameters=Неверное количество аргументов, ожидается {0}
javascript.invalid.string.escape=Строка//Экранированная последовательность//Недопустимая
javascript.jsdoc.private.member.is.not.accessible.message=Приватный член недоступен \#loc
javascript.jsdoc.protected.member.is.not.accessible.message=Защищённый член недоступен \#loc
javascript.jsx.client.component=JSX клиентский компонент
javascript.keyword=Ключевое слово
javascript.kind.unknown=неизвестный элемент
javascript.known.props.only=Объектный литерал может содержать только известные свойства, но следующие являются лишними\: {0}
javascript.label=Идентификаторы//Метка
javascript.label.visibility.package_local=&Internal  [&I]
javascript.label.visibility.private=При&ватный  [&V]
javascript.label.visibility.protected=Защи&щённый  [&O]
javascript.label.visibility.public=Пу&бличный  [&B]
javascript.language.service.cannot.get.results=Не удаётся получить результат от языковой службы
javascript.language.service.cannot.start=Не удаётся запустить процесс языковой службы
javascript.language.service.default.empty.text=Нет ошибок
javascript.language.service.default.project.errors=Показать ошибки проекта
javascript.language.service.start.timeout=Превышено время ожидания запуска процесса языковой службы
javascript.language.service.tracking.disabled=Отслеживание ошибок отключено
javascript.language.service.tracking.is.not.started=Сервис не запущен
javascript.language.simple.name=JavaScript
javascript.language.term.attribute=атрибут
javascript.language.term.attribute.value=Значение атрибута
javascript.language.term.class=класс
javascript.language.term.const=константа
javascript.language.term.const.field=константное поле
javascript.language.term.constructor=конструктор
javascript.language.term.decorator=декоратор
javascript.language.term.default.export=экспорт по умолчанию
javascript.language.term.definition=определение
javascript.language.term.destructuring.property=свойство деструктуризации
javascript.language.term.entity.name=имя сущности
javascript.language.term.enum=enum
javascript.language.term.export.specifier=спецификатор экспорта
javascript.language.term.exported.default.binding=экспортованная привязка по умолчанию
javascript.language.term.external.module.reference=ссылка на внешний модуль
javascript.language.term.field=поле
javascript.language.term.file=файл
javascript.language.term.function=функция
javascript.language.term.import.specifier=спецификатор импорта
javascript.language.term.import.statement=оператор import
javascript.language.term.imported.default.binding=импортованная привязка по умолчанию
javascript.language.term.inner.class=внутренний класс
javascript.language.term.inner.function=внутренняя функция
javascript.language.term.inner.interface=внутренний интерфейс
javascript.language.term.interface=интерфейс
javascript.language.term.jsdoc.tag=JSDoc тег
javascript.language.term.label=метка
javascript.language.term.local.const=локальная константа
javascript.language.term.local.variable=локальная переменная
javascript.language.term.method=метод
javascript.language.term.module=модуль
javascript.language.term.namespace=namespace
javascript.language.term.namespace.export=экспорт пространства имён
javascript.language.term.namespace.import=импорт пространства имён
javascript.language.term.package=пакет
javascript.language.term.parameter=параметр
javascript.language.term.property=свойство
javascript.language.term.readonly.field=поле только для чтения
javascript.language.term.tag=тег
javascript.language.term.top.level=верхнего уровня
javascript.language.term.type.alias=псевдоним типа
javascript.language.term.type.parameter=параметр типа
javascript.language.term.variable=переменная
javascript.language.term.xml.tag=xml тег
javascript.library.built.in=встроенный
javascript.linecomment=Комментарии//Строчный комментарий
javascript.linter.action.edit.config=Редактировать {0}
javascript.linter.action.edit.property=Редактировать {0} в {1}
javascript.linter.action.edit.settings.text=Настройки {0}…
javascript.linter.action.fix.problems.file.text={0}\: Исправить текущий файл
javascript.linter.action.fix.problems.name=Исправить проблемы {0}
javascript.linter.action.fix.problems.name.finish=Завершено исправление проблем {0}
javascript.linter.action.fix.problems.name.start=Начато исправление проблем {0}
javascript.linter.action.fix.prompt=Переформатовать выбранные файлы с помощью {0}?
javascript.linter.configurable.config.autoSearch.title=Автоматический &поиск  [&S]
javascript.linter.configuration.file.title=Конфигурационный файл
javascript.linter.error.can.not.find.document=Не удаётся найти документ для {0}
javascript.linter.error.can.not.find.psi.file=Не удаётся найти PSI файл для {0}
javascript.linter.error.empty.path=Пустой путь
javascript.linter.error.failed.to.lint=Не удалось выполнить Lint для {0}
javascript.linter.error.invalid.path.to.package=Укажите правильный путь к пакету ''{0}''
javascript.linter.error.no.path.to.package=Укажите путь к пакету ''{0}''
javascript.linter.error.no.such.file=Файл не существует
javascript.linter.error.notification.problem.with.reformatting=Проблема с форматованием {0}\:<br/>{1}
javascript.linter.error.package.not.installed=Установите пакет ''{0}''
javascript.linter.error.specify.correct.path.to=Укажите правильный путь к {0}
javascript.linter.import.error.bin.file.not.found=Не удалось найти ''{0}'' в пакете ''{1}''
javascript.linter.import.error.entry.point.not.found=Не удалось найти точку входа в пакете ''{0}''
javascript.linter.import.error.generic=Ошибка применения правил стиля кода из конфигурационного файла, возможно, файл некорректен.
javascript.linter.import.error.package.not.found=Не удалось найти пакет ''{0}''
javascript.linter.import.error.timeout.processing.configuration.file=Превышено время обработки конфигурационного файла
javascript.linter.import.nothing.to.import={0}\: Все известные правила уже применены
javascript.linter.import.notification={0}\: Стиль кода проекта и настройки редактора обновлены на основе ''{1}''.
javascript.linter.import.notification.edit=Редактировать ''{0}''
javascript.linter.import.notification.reset=Сбросить
javascript.linter.import.notification.restored=Восстановлены настройки стиля кода и редактора по умолчанию
javascript.linter.import.notification.rules.applied=Применены следующие {0}\: {1}.
javascript.linter.import.translate.config.file.error=Не удалось применить правила стиля кода
javascript.linter.import.translate.config.progress.title=Применение правил стиля кода {0}
javascript.linter.intention.family.name.show.details={0}\: показать подробности
javascript.linter.intention.name.details=Подробности
javascript.linter.progress.reformatting.with=Переформатование с помощью {0}…
javascript.linter.radio.button.configuration.file=&Конфигурационный файл\:
javascript.linter.suppress.all.rules.for.file.description=Подавить все правила {0} для текущего файла
javascript.linter.suppress.all.rules.for.line.description=Подавить все правила {0} для текущей строки
javascript.linter.suppress.rule.for.file.description=Подавить ''{0}'' для текущего файла
javascript.linter.suppress.rule.for.line.description=Подавить ''{0}'' для текущей строки
javascript.linter.suppress.rules.for.file.family.name=Подавить для текущего файла
javascript.linter.suppress.rules.for.line.family.name=Подавить для текущей строки
javascript.linter.use.severity.from.config.label=Использовать уровень серьезности правил из конфигурационного файла
javascript.local.function=Идентификаторы//Локальная функция
javascript.local.variable=Идентификаторы//Локальная переменная
javascript.member.from.unopened.namespace.message=Член из неоткрытого пространства имён \#loc
javascript.metadata=Метаданные
javascript.missed.argument.for.parameter=Отсутствует аргумент для параметра {0}
javascript.missing.read.property=Неразрешённое свойство для чтения \#loc
javascript.missing.write.property=Неразрешённое свойство для записи \#loc
javascript.module.dependencies.empty.got.it.text=<div align\='left'>Текущий файл или папка не имеет зависимостей.<br/>Пожалуйста, попробуйте с другим файлом или папкой.</div>
javascript.module.dependencies.got.it.text=<div align\='left'>Эта диаграмма визуализует зависимости модулей выбранного файла или каталога.<br/>Чтобы увидеть зависимости для нескольких файлов или каталогов, выберите их в <i>Обзоре проекта</i><br/>и выберите <i>Диаграммы – Показать диаграмму</i> в контекстном меню выделения.</div>
javascript.module.dependencies.got.it.title=Диаграмма зависимостей модулей
javascript.module.name=Имя модуля
javascript.mutable.variable.accessible.from.closure=Изменяемая переменная доступна из замыкания
javascript.no.call.signatures=Присвоенный тип не содержит сигнатуры вызова
javascript.not.a.constructor.call.message=Не является вызовом конструктора
javascript.number=Число
javascript.object.is.null={0} равно null
javascript.object.is.null.or.undefined={0} равно null или undefined
javascript.object.is.possibly.null={0} возможно равно null
javascript.object.is.possibly.null.or.undefined={0} возможно равно null или undefined
javascript.object.is.possibly.undefined={0} возможно не определено
javascript.object.is.undefined={0} не определено
javascript.object.null.or.undefined.desc=Объект имеет значение 'null' или 'undefined'
javascript.octal.literals.are.not.allowed.es5.message=Восьмеричные литералы с префиксом '0' устарели и не рекомендуются к использованию
javascript.octal.literals.are.not.allowed.es6.message=Восьмеричные литералы с префиксом '0' не допускаются. Используйте префикс '0o'
javascript.octal.literals.are.not.allowed.in.strict.mode=Восьмеричные литералы не допускаются в строгом режиме
javascript.octal.literals.warn.always=Предупреждать об устаревших восьмеричных литералах в коде ES5-
javascript.octal.sequences.are.not.allowed.message=Восьмеричные escape-последовательности не допускаются
javascript.operation=Скобки и операторы//Операция
javascript.parameter=Идентификаторы//Параметр
javascript.parens=Скобки и операторы//Круглые скобки
javascript.parser.message.are.not.supported.by.dialect={0} не поддерживаются текущей версией JavaScript
javascript.parser.message.expected.as=Ожидается 'as'
javascript.parser.message.expected.at=Ожидается @
javascript.parser.message.expected.case.or.default=Ожидается 'case' или 'default'
javascript.parser.message.expected.checks=Ожидается 'checks'
javascript.parser.message.expected.class=Ожидается 'class'
javascript.parser.message.expected.colon=Ожидается \:
javascript.parser.message.expected.colon.or.comma=Ожидается \: или ,
javascript.parser.message.expected.comma=Ожидается ,
javascript.parser.message.expected.comma.or.rbrace=Ожидается , или }
javascript.parser.message.expected.comma.or.rparen=Ожидается , или )
javascript.parser.message.expected.declaration=Ожидается объявление
javascript.parser.message.expected.declare=Ожидается 'declare'
javascript.parser.message.expected.dot=Ожидается .
javascript.parser.message.expected.eqgt=Ожидается \=>
javascript.parser.message.expected.equal=Ожидается \=
javascript.parser.message.expected.exports=Ожидается 'exports'
javascript.parser.message.expected.expression=Ожидается выражение
javascript.parser.message.expected.forloop.in.or.semicolon=Ожидается 'in' или ;
javascript.parser.message.expected.forloop.left.hand.side.expression.or.variable.declaration=Ожидается левостороннее выражение или объявление переменной перед 'in'
javascript.parser.message.expected.forloop.using.not.allowed.in.for-in='using' не разрешено в цикле 'for-in'
javascript.parser.message.expected.formal.parameter.name=Ожидается имя формального параметра
javascript.parser.message.expected.from=Ожидается 'from'
javascript.parser.message.expected.function.name=Ожидается имя функции
javascript.parser.message.expected.gt=Ожидается >
javascript.parser.message.expected.identifier=Ожидается идентификатор
javascript.parser.message.expected.identifier.lbrace.or.lbracket=Ожидается идентификатор, { или [
javascript.parser.message.expected.identifier.or.value=Ожидается идентификатор или значение
javascript.parser.message.expected.identifier.string.literal.or.lbrace=Ожидается идентификатор, строковый литерал или {
javascript.parser.message.expected.identifier.string.literal.or.numeric.literal=Ожидается идентификатор, строковый литерал или числовой литерал
javascript.parser.message.expected.identifier.string.literal.or.rbrace=Ожидается идентификатор, строковый литерал или }
javascript.parser.message.expected.import.specifier=Ожидается спецификатор импорта
javascript.parser.message.expected.import.value=Ожидается привязка или спецификатор импорта
javascript.parser.message.expected.in=Ожидается 'in'
javascript.parser.message.expected.instanceof=Ожидается 'instanceof'
javascript.parser.message.expected.lbrace=Ожидается {
javascript.parser.message.expected.lbrace.or.semicolon=Ожидается { или ;
javascript.parser.message.expected.lbracket=Ожидается [
javascript.parser.message.expected.lparen=Ожидается (
javascript.parser.message.expected.meta=Только 'meta' принимается как мета-свойство для импорта
javascript.parser.message.expected.mult.or.lbrace=Ожидается * или {
javascript.parser.message.expected.name=Ожидается имя
javascript.parser.message.expected.name.or.lbrace=Ожидается имя пакета или {
javascript.parser.message.expected.namespace=Ожидается 'namespace'
javascript.parser.message.expected.newline.or.semicolon=Требуется перевод строки или точка с запятой
javascript.parser.message.expected.one.of=Ожидается одно из {0}
javascript.parser.message.expected.parameter.name=Ожидается имя параметра
javascript.parser.message.expected.property.name=Ожидается имя свойства
javascript.parser.message.expected.question=Ожидается ?
javascript.parser.message.expected.rbrace=Ожидается }
javascript.parser.message.expected.rbracket=Ожидается ]
javascript.parser.message.expected.readonly=Ожидается 'readonly'
javascript.parser.message.expected.rparen=Ожидается )
javascript.parser.message.expected.semicolon=Ожидается ;
javascript.parser.message.expected.statement=Ожидается оператор
javascript.parser.message.expected.string.literal=Ожидается строковый литерал
javascript.parser.message.expected.target=Только 'target' принимается как мета-свойство для new
javascript.parser.message.expected.tuple.comma.or.rbracket=Ожидается , или ]
javascript.parser.message.expected.type=Ожидается тип
javascript.parser.message.expected.type.keyword=Ожидается 'type'
javascript.parser.message.expected.type.member=Ожидается член типа
javascript.parser.message.expected.type.name=Ожидается имя типа
javascript.parser.message.expected.typename=Ожидается имя типа
javascript.parser.message.expected.typename.or.*=Ожидается * или имя типа
javascript.parser.message.expected.value=Ожидается значение
javascript.parser.message.expected.variable.name=Ожидается имя переменной
javascript.parser.message.expected.while.keyword=Ожидается 'while'
javascript.parser.message.expected.xml=Ожидается ключевое слово XML контекста
javascript.parser.message.expected.xml.element=Ожидается XML элемент
javascript.parser.message.missing.attribute.name=Отсутствует имя атрибута
javascript.parser.message.missing.back.quote=Отсутствует `
javascript.parser.message.missing.or_rbrace=Отсутствует |}
javascript.parser.message.missing.rbrace=Отсутствует }
javascript.parser.message.missing.rbracket=Отсутствует ]
javascript.parser.message.missing.rparen=Отсутствует )
javascript.parser.message.missing.tag.name=Отсутствует имя тега
javascript.parser.message.unclosed.comment=Незакрытый комментарий
javascript.parser.message.unclosed.string.literal=Незакрытый строковый литерал
javascript.parser.message.unexpected.end.of.file=Неожиданный конец файла
javascript.parser.message.unexpected.token=Неожиданный токен {0}
javascript.parser.property.expected=Ожидается свойство
javascript.potentially.invalid.target.of.indexed.property.access=Потенциально некорректная цель доступа к индексированному свойству
javascript.potentially.invalid.usage.of.class.this=Потенциально некорректный доступ к полю класса через 'this.' во вложенной функции
javascript.potentially.invalid.usage.of.this=Потенциально некорректное использование this
javascript.private.constructor.is.not.accessible.message=Private-конструктор недоступен \#loc
javascript.private.member.is.not.accessible.message=Private-член недоступен \#loc
javascript.property.is.read.only.message=Свойство только для чтения \#loc
javascript.property.is.write.only.message=Свойство только для записи \#loc
javascript.protected.constructor.is.not.accessible.message=Protected-конструктор недоступен \#loc
javascript.protected.member.is.not.accessible.message=Protected-член недоступен \#loc
javascript.qualified.class.name.expected=Ожидается полное имя класса
javascript.qualified.name.is.not.imported.message=Полное имя не импортовано \#loc
javascript.redundant.typeof.guard=Избыточная проверка ''typeof''\: ''{0}'' всегда имеет тип ''{1}''
javascript.refactoring.asdoc.for.abstracts=ASDoc для абстрактных элементов
javascript.refactoring.cannot.find.usages.of.definition.to.inline=Не удаётся найти использования определения для встраивания
javascript.refactoring.cannot.inline.ambient.function=Невозможно встроить объявление без реализации
javascript.refactoring.cannot.inline.complex.expression.evaluation=Невозможно встроить вычисление сложного выражения
javascript.refactoring.cannot.inline.constructor=Невозможно встроить конструктор
javascript.refactoring.cannot.inline.destructuring.rest.variable=Невозможно встроить rest-переменную деструктуризации
javascript.refactoring.cannot.inline.destructuring.variable.with.default=Невозможно встроить переменную деструктуризации со значением по умолчанию
javascript.refactoring.cannot.inline.function.defined.in.library=Невозможно встроить функцию, определённую во внешней библиотеке
javascript.refactoring.cannot.inline.function.referencing.arguments=Невозможно встроить функцию, ссылающуюся на arguments
javascript.refactoring.cannot.inline.function.referencing.rest.parameter=Невозможно встроить функцию, ссылающуюся на rest-параметр
javascript.refactoring.cannot.inline.function.with.multiple.returns=Невозможно встроить функцию с несколькими точками выхода
javascript.refactoring.cannot.inline.interface.method=Невозможно встроить метод интерфейса
javascript.refactoring.cannot.inline.jsx.usage=Невозможно встроить использование JSX-тега
javascript.refactoring.cannot.inline.not.initialized.variable=Невозможно встроить неинициализованную переменную
javascript.refactoring.cannot.inline.overrided.or.overridden.method=Невозможно встроить метод, участвующий в иерархии
javascript.refactoring.cannot.inline.recursive.function=Невозможно встроить рекурсивную функцию
javascript.refactoring.extract.function.already.exists.in.this.scope={0} уже существует в этой области видимости
javascript.refactoring.extract.function.bad.selection=Выбранный блок должен представлять набор операторов или выражение
javascript.refactoring.extract.function.function.used.before.declaring=Выделенный фрагмент содержит функцию, используемую до объявления
javascript.refactoring.extract.function.multiple.exit.points=Выбранный фрагмент имеет несколько точек выхода
javascript.refactoring.extract.function.no.loop.for.break=Нет соответствующего цикла для оператора break внутри фрагмента кода
javascript.refactoring.extract.function.no.loop.for.continue=Нет соответствующего цикла для оператора continue внутри фрагмента кода
javascript.refactoring.extract.function.no.switch.for.break=Нет соответствующего 'switch' для оператора break внутри фрагмента кода
javascript.refactoring.extract.function.title=Извлечь функцию
javascript.refactoring.extract.function.yield.and.return=Выбранный фрагмент одновременно содержит выражения yield и операторы return
javascript.refactoring.function.to.es6.class.command=Преобразовать функцию {0} в класс
javascript.refactoring.function.to.es6.class.defineProperty.warning.text=Предупреждение\: преобразование свойств, созданных с помощью "Object.defineProperty", "Object.defineProperties" или "Object.create" в синтаксис ES6 может повлиять на их перечисляемость и настраиваемость
javascript.refactoring.inline.all.message=Встроить все ссылки и удалить {0} ({1})  [&A]
javascript.refactoring.inline.dialog.title=Встроить {0}
javascript.refactoring.inline.function.title=Встроить функцию
javascript.refactoring.inline.this.only=Встроить только эту ссылку и сохранить {0} [&K]
javascript.refactoring.inline.variable.title=Встроить переменную
javascript.refactoring.searching.usages=Поиск использований
javascript.refactoring.variable.used.as.lvalue=Переменная для встраивания используется в левой части присваивания
javascript.refactoring.variable.value.is.changed.when.accessed.from.closure=Значение переменной изменяется при доступе из замыкания
javascript.regexp=Регулярное выражение
javascript.rename.choose.target.message=Что вы хотите переименовать?
javascript.rename.containing.file.message=Хотите также переименовать файл в {0}?\nИспользования {1} и пути к файлу в операторах import будут обновлены соответственно.
javascript.rename.destructuring.target.dialog.title=Сокращенная переменная деструктуризации инициализована с помощью {0}
javascript.rename.element.with.related.elements.title=Переименовать {0}
javascript.rename.reference.intention.name=Переименовать ссылку
javascript.rename.related.declaration.message=Хотите также переименовать {0}?\nИспользования {0} в операторах import будут обновлены соответственно.
javascript.rename.shorthand.property.description=Свойство
javascript.rename.shorthand.target.dialog.title=Сокращенное свойство инициализовано с помощью {0}
javascript.rename.symbol.intention.name=Переименовать символ
javascript.report.unused.definitions=Сообщать о неиспользуемых определениях
javascript.report.unused.properties=Сообщать о неиспользуемых свойствах
javascript.returned.expression.type.mismatch=Тип возвращаемого выражения {1} не может быть присвоен типу {0}
javascript.semicolon=Скобки и операторы//Точка с запятой
javascript.service.node.error=Путь к интерпретатору Node некорректен. Пожалуйста, проверьте настройки интерпретатора
javascript.starting.service=Запуск сервиса {0}
javascript.static.member.function=Классы//Статический метод
javascript.static.member.is.not.accessible.message=Статический член недоступен \#loc
javascript.static.member.variable=Классы//Статическое свойство
javascript.strictly.check.global.vars=Сообщать об ошибках для необъявленных глобальных символов
javascript.strictly.check.object.properties=Сообщать об ошибках для необъявленных свойств
javascript.string=Строка//Текст строки
javascript.surround.with.cast=Type(expr)
javascript.surround.with.do.while=do / while
javascript.surround.with.for=for
javascript.surround.with.function=функция
javascript.surround.with.function.expression=функциональное выражение
javascript.surround.with.if=if
javascript.surround.with.if.cond=if (cond)
javascript.surround.with.if.else=if / else
javascript.surround.with.if.else.cond=if (cond) / else
javascript.surround.with.not.parenthesis=\!(expr)
javascript.surround.with.object.literal=литерал объекта
javascript.surround.with.parenthesis=(expr)
javascript.surround.with.try.catch=try / catch
javascript.surround.with.try.catch.finally=try / catch / finally
javascript.surround.with.try.finally=try / finally
javascript.surround.with.while=while
javascript.surround.with.with=with
javascript.suspicious.type.guard.desc=Ненадежная проверка типа
javascript.suspicious.typeof.guard=Неверная проверка ''typeof''\: ''{0}'' не может иметь тип ''{1}''
javascript.template.context.type=JavaScript [&R]
javascript.template.literal.placeholder.delimiters=Шаблонный литерал//Разделители плейсхолдеров
javascript.term.does.not.evaluate.to.function=Выражение метода не является типом Function
javascript.term.does.not.evaluate.to.function.line.break=Выражение не является вызываемым. Если это не должен быть вызов, проверьте отсутствие точки с запятой
javascript.term.does.not.evaluate.to.function.nullable=Выражение метода может быть null или undefined
javascript.term.does.not.evaluate.to.function2=Свойство не может быть вызвано как функция
javascript.term.does.not.evaluate.to.function2.fix=Удалить список аргументов
javascript.term.nullable.indexer.qualifier=Индексируемое выражение может быть null или undefined
javascript.type.is.not.assignable.to.type=Тип {1} не может быть присвоен типу {0}
javascript.undeclared.variable.name.message=Переменная {0} объявлена неявно \#loc
javascript.unfiltered.for.in.loop=Возможна итерация по неожиданным (пользовательским/унаследованным) членам, вероятно отсутствует проверка hasOwnProperty
javascript.unknown.metadata.attribute=Неизвестный атрибут метаданных
javascript.unknown.metadata.tag=Неизвестный метатег
javascript.unresolved.circle.definition=Циклическое определение импорта
javascript.unresolved.file.or.dir=Невозможно разрешить {0} {1}
javascript.unresolved.function.name.message=Неразрешённая функция или метод <code>{0}()</code> \#loc
javascript.unresolved.symbol.message=Неразрешённый символ
javascript.unresolved.type.name.message=Неразрешённый тип {0} \#loc
javascript.unresolved.variable.name.message=Неразрешённая переменная {0} \#loc
javascript.unresolved.variable.null.or.undefined.qualifier.message=Квалификатор ''{0}'' может быть null или undefined \#loc
javascript.unresolved.variable.null.qualifier.message=Квалификатор ''{0}'' может быть null \#loc
javascript.unresolved.variable.or.type.name.message=Неразрешённая переменная или тип {0} \#loc
javascript.unresolved.variable.or.type.name.message2=Неразрешённая переменная или тип {0}
javascript.unresolved.variable.undefined.qualifier.message=Квалификатор ''{0}'' может быть undefined \#loc
javascript.unused.import.remove=Удалить неиспользуемый 'import'
javascript.unused.import.remove.specifier=Удалить неиспользуемый элемент
javascript.valid.string.escape=Строка//Экранированная последовательность//Допустимая
javascript.validate.imports.name=Неразрешённое импортованное имя
javascript.validation.destructuring.without.initializer=Деструктурирующее объявление должно иметь инициализатор
javascript.validation.fqn.to.replace.with.import=Полное имя может быть заменено инструкцией import
javascript.validation.generators.yield.not.assignable.to.return=Тип ''{1}'' не может быть присвоен типу ''{0}''
javascript.validation.generators.yield.not.in.generator=Выражение 'yield' допустимо только в теле генератора.
javascript.validation.generators.yield.not.iterable=Тип выражения не имеет определённого [Symbol.iterator] или [Symbol.asyncIterator]
javascript.validation.initialized.var.in.for.loop=Инициализаторы переменных не допускаются в циклах ''{0}''
javascript.validation.message.abstract.get.accessor.not.implemented=Абстрактный get-аксессор {0} из класса {1} не реализован
javascript.validation.message.abstract.method.not.implemented=Абстрактный метод {0} из класса {1} не реализован
javascript.validation.message.abstract.set.accessor.not.implemented=Абстрактный set-аксессор {0} из класса {1} не реализован
javascript.validation.message.accessor.could.not.be.nested.under.other.function=Методы-аксессоры не могут быть вложены в другие функции
javascript.validation.message.arguments.is.readonly='arguments' доступен только для чтения
javascript.validation.message.arguments.with.rest.parameter=Объект 'arguments' недоступен при использовании rest-параметра
javascript.validation.message.assignment.to.const=Попытка присвоить значение константе или readonly переменной
javascript.validation.message.assignment.to.const.fix.remove.readonly=Удалить модификатор readonly
javascript.validation.message.assignment.to.const.fix.replace=Заменить на let
javascript.validation.message.attribute.was.specified.multiple.times=Модификатор {0} указан несколько раз
javascript.validation.message.base.constructor.in.not.derived=Вызов конструктора базового класса допустим только в производном конструкторе
javascript.validation.message.baseMethod.before.super.call='super' не допускается перед вызовом конструктора суперкласса
javascript.validation.message.break.without.target=Невозможно определить цель для 'break'
javascript.validation.message.can.not.override.final.method=Невозможно переопределить final метод из {0}
javascript.validation.message.circular.dependency=Циклическая зависимость
javascript.validation.message.class.method.incompatible=Метод ''{0}'' в классе ''{1}'' не может быть присвоен тому же методу в базовом классе ''{2}''
javascript.validation.message.class.method.not.implemented=Метод {0} из класса {1} не реализован
javascript.validation.message.class.name.expected.here=Здесь ожидается имя класса
javascript.validation.message.class.property.incompatible=Свойство ''{0}'' в классе ''{1}'' не может быть присвоено тому же свойству в базовом классе ''{2}''
javascript.validation.message.class.property.not.implemented=Свойство {0} из класса {1} не реализовано
javascript.validation.message.class.setter.cannot.have.return.type=Аксессор 'set' не может иметь тип возвращаемого значения
javascript.validation.message.comma.is.not.allowed.after.last.parameter=После последнего параметра запятая не допускается
javascript.validation.message.comma.is.not.allowed.after.rest.element=После rest-элемента запятая не допускается
javascript.validation.message.conflicting.definition.was.found.with.the.same.name=В пространстве имён {1} обнаружено конфликтующее унаследованное объявление {0}
javascript.validation.message.const.variable.without.initializer=Переменная 'const' без инициализатора. Будет невозможно присвоить осмысленное значение позже.
javascript.validation.message.constructor.cannot.be.static=Конструктор не может быть статическим
javascript.validation.message.constructor.cannot.have.custom.visibility=Конструктор должен быть public или не иметь указанной видимости
javascript.validation.message.constructor.field.not.allowed=Классы не могут иметь нестатическое поле с именем 'constructor'
javascript.validation.message.continue.outside.loop='continue' вне тела цикла
javascript.validation.message.continue.without.target=Невозможно определить цель для 'continue'
javascript.validation.message.duplicate.catch.block=Дублирующийся блок catch \#loc
javascript.validation.message.duplicate.catch.block.fix=Удалить дублирующийся блок catch
javascript.validation.message.duplicate.declaration=Дублирующееся объявление
javascript.validation.message.duplicate.declaration.fix.remove=Удалить тип(ы)
javascript.validation.message.duplicate.declaration.fix.text=Перейти к предыдущему объявлению ''{0}''
javascript.validation.message.duplicate.declaration.fix.text.no.name=Перейти к предыдущему объявлению
javascript.validation.message.duplicate.default.export.declaration=Модуль не может иметь несколько экспортов по умолчанию
javascript.validation.message.duplicate.default.export.in.module=Экспорт по умолчанию можно использовать только в модуле в стиле ECMAScript
javascript.validation.message.duplicate.export.declaration=Экспорт конфликтует с уже экспортованным объявлением ''{0}''
javascript.validation.message.duplicate.label=Дублирующаяся метка
javascript.validation.message.dynamic.can.be.applied.to.class=Атрибут dynamic может применяться только к объявлению класса
javascript.validation.message.es5.function.declarations.allowed.on.top.level.or.function=Объявление функции не на верхнем уровне программы или функции запрещено
javascript.validation.message.eval.cannot.be.assigned='eval' нельзя присваивать в строгом режиме
javascript.validation.message.extend.final.class=Невозможно наследоваться от final класса ''{0}''
javascript.validation.message.extend.multiple.classes=Класс не может наследоваться от нескольких классов
javascript.validation.message.final.modifier.allowed.only.for.methods=Модификатор final может применяться только к классам и методам класса
javascript.validation.message.flowjs.path=Некорректный путь Flow
javascript.validation.message.for.await.no.async.context='for await' можно использовать только в 'async' функции
javascript.validation.message.for.await.top.level=Использован 'for await' верхнего уровня
javascript.validation.message.function.method.invalid.overridden.parameter.type=Несовместимое переопределение, должен иметь тип ''{0}''
javascript.validation.message.function.override.for.interface=Несовместимое переопределение метода из {0}
javascript.validation.message.function.override.for.object.method=Метод, унаследованный от Object, не требует override
javascript.validation.message.function.override.incompatible.access.modifier=Несовместимое переопределение, должен иметь модификатор доступа ''{0}''
javascript.validation.message.function.override.incompatible.signature=Несовместимое переопределение, должна быть сигнатура ''{0}''
javascript.validation.message.function.override.incompatible.signature.generic=Несовместимое переопределение
javascript.validation.message.function.override.incompatible.signature2=Несовместимое переопределение, должен быть возвращаемый тип ''{0}''
javascript.validation.message.function.override.incompatible.signature3=Несовместимое переопределение, должен иметь вид ''{0}''
javascript.validation.message.function.override.without.override.modifier=Метод переопределяет метод суперкласса {0} без ключевого слова override
javascript.validation.message.function.override.without.parent.method=Метод не переопределяет метод суперкласса
javascript.validation.message.get.method.should.be.valid.type=Тип возвращаемого значения геттера не должен быть {0}
javascript.validation.message.get.method.should.have.no.parameter=Определение геттера не должно иметь параметров
javascript.validation.message.get.method.type.is.different.from.setter=Тип метода get-аксессора несовместим с типом set-аксессора, ожидается ''{0}''
javascript.validation.message.identifier.not.allowed.in.strict.mode=''{0}'' не может использоваться как идентификатор в строгом режиме
javascript.validation.message.implements.for.interface.not.allowed=Список implements не разрешен для интерфейса
javascript.validation.message.implements.is.not.allowed=Конструкция implements не разрешена в стандартном ECMAScript
javascript.validation.message.incompatible.override=Несовместимое переопределение члена из {0}
javascript.validation.message.index.no.type=Параметр сигнатуры индекса должен иметь аннотацию типа
javascript.validation.message.index.wrong.type=Тип параметра сигнатуры индекса должен быть присваиваемым к 'string | number | symbol'
javascript.validation.message.interface.call.signature.not.implemented=Сигнатура вызова из интерфейса {0} не реализована
javascript.validation.message.interface.cannot.be.final.modifiers=Интерфейс не может быть final
javascript.validation.message.interface.get.accessor.not.implemented=Get-аксессор свойства {0} из интерфейса {1} не реализован
javascript.validation.message.interface.index.signature.not.implemented=Сигнатура индекса из интерфейса {0} не реализована
javascript.validation.message.interface.members.cannot.be.final.modifiers=Члены интерфейса не могут быть final
javascript.validation.message.interface.members.cannot.have.access.modifiers=Члены интерфейса не могут иметь модификаторы доступа
javascript.validation.message.interface.members.cannot.have.namespace.attributes=Члены интерфейса не могут иметь атрибуты пространства имён
javascript.validation.message.interface.method.invalid.access.modifier=Несовместимая реализация, должен иметь модификатор доступа 'public'
javascript.validation.message.interface.method.invalid.signature=Несовместимая реализация, должна быть сигнатура ''{0}''
javascript.validation.message.interface.method.invalid.signature2=Несовместимая реализация, должен быть возвращаемый тип ''{0}''
javascript.validation.message.interface.method.invalid.signature3=Несовместимая реализация, должен иметь get / set ''{0}''
javascript.validation.message.interface.method.not.implemented=Метод {0} из интерфейса {1} не реализован
javascript.validation.message.interface.name.expected.here=Здесь ожидается имя интерфейса
javascript.validation.message.interface.property.not.implemented=Свойство {0} из интерфейса {1} не реализовано
javascript.validation.message.interface.set.accessor.not.implemented=Set-аксессор свойства {0} из интерфейса {1} не реализован
javascript.validation.message.jsdoc.types.are.used=Типы JSDoc можно использовать только внутри документационных комментариев
javascript.validation.message.missed.super.constructor.call=Пропущен вызов конструктора суперкласса
javascript.validation.message.missing.catch.or.finally=Отсутствует блок catch или finally
javascript.validation.message.must.be.lvalue=Недопустимая левая часть в {0}
javascript.validation.message.nested.classes.are.not.allowed=Вложенные классы не разрешены
javascript.validation.message.one.visibility.modifier.allowed=Разрешен только один модификатор видимости (public, protected, internal, private)
javascript.validation.message.only.one.default.is.allowed=В switch разрешена только одна ветка default
javascript.validation.message.override.can.be.applied.to.method=Override может применяться только к объявлению функции
javascript.validation.message.parameter.is.not.allowed.after.rest.parameter=После rest-параметра не разрешены другие параметры
javascript.validation.message.parameter.non.optional.after.optional=Обязательный параметр не может следовать за необязательным
javascript.validation.message.parameter.rest.optional=Rest-параметр не может быть необязательным
javascript.validation.message.parameter.should.be.initialized=Параметр должен быть инициализован
javascript.validation.message.redeclaration.of.block.scope=Переменные блочной области видимости не могут быть объявлены повторно
javascript.validation.message.redeclaration.of.block.scope.in.scope.of.var=Переменные блочной области видимости не могут иметь одинаковые имена с переменными 'var' или параметрами в той же области видимости
javascript.validation.message.redeclaration.of.var.in.scope.of.block.scope=Переменные 'var' не могут иметь одинаковые имена с переменными блочной области видимости в пределах их видимости
javascript.validation.message.redefining.is.not.allowed=Переопределение {0} не разрешено
javascript.validation.message.redundant.type=Явный аргумент типа {0} может быть заменен на {1}
javascript.validation.message.redundant.type.remove=Явный аргумент типа {0} может быть удален
javascript.validation.message.referencing.arguments.caller.callee.is.not.allowed=Ссылки на 'caller' и 'callee' из arguments не разрешены
javascript.validation.message.referencing.function.arguments.property.is.not.allowed=Ссылка на свойство функции 'arguments' не разрешена
javascript.validation.message.remove.unneeded.comma.fix=Удалить лишнюю запятую
javascript.validation.message.rest.parameter.should.not.be.initialized=Rest-параметр не должен быть инициализован
javascript.validation.message.return.outside.function.definition='return' вне определения функции
javascript.validation.message.return.statement.required=Для невойдового типа возвращаемого значения требуется оператор return
javascript.validation.message.return.value.of.type.is.required=Требуется возвращаемое значение типа {0}
javascript.validation.message.set.method.should.be.void.or.without.type=Тип возвращаемого значения сеттера должен быть не указан или void
javascript.validation.message.set.method.should.have.one.parameter=Определение сеттера должно иметь ровно один параметр
javascript.validation.message.set.method.type.is.different.from.getter=Тип метода set-аксессора несовместим с типом get-аксессора, ожидается ''{0}''
javascript.validation.message.setter.parameter.cannot.have.initializer=Определение сеттера не может иметь необязательные параметры
javascript.validation.message.static.method.cannot.be.final=Статический метод не может быть final
javascript.validation.message.static.modifier.is.allowed.only.for.class.members=Модификатор static разрешен только для членов класса
javascript.validation.message.super.constructor.call.should.be.in.constructor=Вызов конструктора суперкласса должен быть в теле конструктора
javascript.validation.message.super.referenced.from.static.context='super' используется в статическом контексте
javascript.validation.message.super.referenced.without.class.instance.context='super' используется без контекста экземпляра класса
javascript.validation.message.this.before.super.call='this' не разрешен до вызова конструктора суперкласса
javascript.validation.message.this.referenced.from.static.context='this' используется в статическом контексте
javascript.validation.message.unexpected.type.for.rest.parameter=Rest-параметр не должен иметь тип
javascript.validation.message.unknown.metadata.annotation.used=Использован неизвестный атрибут метаданных
javascript.validation.message.unneeded.comma=Лишняя запятая
javascript.validation.message.unresolved.component=Неразрешённый компонент {0}
javascript.validation.message.use.namespace.reference.or.access.modifier=Используйте пространство имён ИЛИ модификатор доступа
javascript.validation.multiple.var.in.for.loop=В циклах ''{0}'' разрешена только одна переменная
javascript.validation.new.target.not.in.function=Мета-свойство 'new.target' разрешено только в теле объявления функции, функционального выражения или конструктора
javascript.validation.unused.import=Неиспользуемый import
javascript.vector.literal.element.type.mismatch=Тип элемента векторного литерала {1} не может быть присвоен типу {0}
javascript.visibility.internal=internal
javascript.visibility.private=private
javascript.visibility.protected=protected
javascript.visibility.public=public
javascript.with.statement.is.not.allowed.in.strict.mode.message=Оператор with не разрешен в строгом режиме
jest.cannot.find.bin.file.for.package.dialog.message=Не удаётся найти исполняемый файл для пакета ''{0}''
jest.coverage.cannot.find.lcov.info.notification.content=Не удаётся показать покрытие Jest\: {0} не найден.
jest.coverage.directory.not.found.notification.content=Не удаётся прочитать опцию coverageDirectory из конфигурации Jest
jest.coverage.notification.title=Покрытие Jest
jest.go.to.snapshot.text=Перейти к снапшоту ''{0}''
jest.package.placeholder.text=Путь к каталогу пакета с jest, react-scripts или альтернативой react-scripts
jest.rc.configurationFile.label=&Конфигурационный файл\:
jest.rc.configurationFile.title=Выбрать конфигурационный файл Jest
jest.rc.jestOptions.emptyText=CLI опции, например --watch или --env\=jsdom
jest.rc.jestOptions.label=Опции Jest\:
jest.rc.jestPackageField.label=Пакет Jest [&J]\:
jest.snapshot.label=Снапшот Jest
jest.snapshot.update.all.tests.text=<link>Нажмите, чтобы обновить все неудачные снапшоты</link>
jest.snapshot.update.rc.name=Обновить снапшот для {0}
jest.snapshot.update.single.test.text=<link>Нажмите, чтобы обновить снапшот</link> для ''{0}''
jest.snapshot.update.test.file.text=<link>Нажмите, чтобы обновить неудачные снапшоты</link> в {0}
jquery.documentation.not.found=Документация jQuery не найдена
js.accessibility.check.inspection.name=Обращение к недоступным членам @private и @protected
js.add.braces.to.arrow.function=Добавить фигурные скобки в стрелочную функцию
js.add.members.to.type=Добавить члены {0} в ''{1}''
js.add.members.to.type.desc=Добавить члены в класс или интерфейс
js.add.then.fix=Добавить '.then()'
js.align.multiline.extends.list=Выравнивать при многострочности
js.align.properties.none=Не выравнивать
js.align.properties.on.colon=По двоеточию
js.align.properties.on.value=По значению
js.annotator.assignment.pattern.rhs=Шаблоны присваивания должны быть в левой части присваивания
js.annotator.inspection.name=Не соответствует спецификации ECMAScript
js.annotator.newline.before.arrow=Перенос строки перед стрелкой не допускается
js.annotator.replace.with.fat.arrow=Заменить на толстую стрелку
js.annotator.rest.element.must.be.last=Rest-элемент должен быть последним
js.annotator.thin.arrow.used=Использована тонкая стрелка
js.annotator.unary.operator.within.exponential=Унарный оператор ''{0}'' не может стоять непосредственно перед выражением возведения в степень. Добавьте скобки для устранения неоднозначности.
js.annotator.yield.cannot.be.used.inside.generator='yield' не может использоваться как идентификатор внутри генератора
js.anonymous.to.named.function=Преобразовать анонимную функцию в именованную
js.arrangement.group.arrow.fields.with.methods=Группировать поля, инициализованные стрелочными функциями, с методами
js.array.new.line.after.left.bracket=Новая строка после '['
js.array.new.line.before.right.bracket=Поместить ']' на новую строку
js.arrow.function.braces.can.be.removed.fix.family.name=Удалить фигурные скобки вокруг тела стрелочной функции
js.arrow.function.braces.can.be.removed.key=Избыточные фигурные скобки вокруг тела стрелочной функции
js.arrow.function.braces.can.be.removed.problem.description=Фигурные скобки вокруг тела стрелочной функции можно удалить
js.assigning.to.primitive.type.property=Значение, присвоенное примитиву, будет потеряно
js.assignment.issues.group.name=Проблемы присваивания
js.assignment.used.as.condition.fix=Заменить ''\='' на ''{0}''
js.assignment.used.as.condition.name=Присваивание используется как условие
js.assignment.used.as.condition.text=<code>\#ref</code> используется как условие
js.await-using.in.synchronous.function=Директиву 'await using' можно использовать только в 'async' функции
js.await.in.synchronous.function=Оператор 'await' можно использовать только в 'async' функции
js.await.promise.double.await.inspection=Избыточный 'await await'
js.await.promise.reject.inspection=Избыточный 'await Promise.reject()'
js.await.promise.resolve.fix=Заменить на ''{0}''
js.await.promise.resolve.inspection=Избыточный 'await Promise.resolve()'
js.await.promise.return.await.inspection=Избыточный 'return await'
js.await.promise.trivial.await.inspection=Избыточный 'await' для типа, не являющегося промисом
js.bitwise.operator.usage.name=Использование побитовых операторов
js.bitwise.operator.usage.popup=Использован побитовый оператор
js.bitwise.operator.usage.quickfix=Заменить на {0}
js.blank.lines.around.function=Вокруг функции\:
js.blank.lines.around.method=Вокруг метода\:
js.breadcrumbs.callback.for=колбэк для {0}()
js.chained.call.dot.on.next.line='.' на новой строке
js.check.function.signature.guess.optionality=Считать нетипизованные параметры обязательными
js.check.function.signature.guess.optionality.hint=Если отключено, все нетипизованные параметры считаются опциональными
js.checkbox.make.readonly=Сделать только для чтения [&R]
js.class.context.type=Класс/Интерфейс
js.class.member.expression.context.type=Выражение члена класса
js.class.member.initialization.inspection.name=Использование возможно неинициализованного свойства в статическом инициализаторе
js.class.member.initialization.inspection.text=Поле ''{1}'' объявлено после ''{0}'' и возможно еще не инициализовано
js.class.member.initialization.inspection.text.id=Поле ''{0}'' ссылается на само себя
js.class.member.statement.context.type=Объявление члена класса
js.closure.compiler.syntax.cyclic.inheritance=Циклическое наследование с участием {0}
js.closure.compiler.syntax.empty.type=Пустой тип недоступен
js.closure.compiler.syntax.implements.not.interface={0} не аннотирован с помощью @interface
js.closure.compiler.syntax.inspection.name=Некорректное использование тегов JSDoc
js.closure.compiler.syntax.invalid.type=Неверный синтаксис типа
js.code.style.align.caption=Выравнивание
js.code.style.align.from.clause.caption=Выравнивать конструкции 'from'
js.code.style.align.var.statements=При многострочности
js.code.style.align.var.statements.and.assignments=При группировке
js.code.style.array.group.name=Массивы
js.code.style.do.not.align.var.statement=Не выравнивать
js.code.style.file.name.camel.style=Верблюжий регистр (appComponent)
js.code.style.file.name.lisp.style=Регистр через дефис (app-component)
js.code.style.file.name.mixed.style=Регистр через дефис с суффиксом (my-app.component)
js.code.style.file.name.pascal.style=Регистр Паскаля (AppComponent)
js.code.style.file.name.relaxed.style=Использовать регистр текущего файла
js.code.style.file.name.snake.style=Змеиный регистр (app_component)
js.code.style.issues.group.name=Проблемы стиля кода
js.code.style.object.literals.category.name=Объекты
js.code.style.punctuation.tab.title=Пунктуация
js.code.style.tab.name=JavaScript
js.code.vision.component.usages=Использования компонента
js.code.vision.component.usages.action=Показать использования компонента
js.code.vision.component.usages.description=Кликабельная подсказка для вызова "Найти использования" для компонента.
js.code.vision.component.usages.tooltip=Нажмите, чтобы найти использования компонента
js.command.name.auto-import-symbols=Автоматически импортовать внешние символы
js.commandline.configure.language.version=Настраивает версию JavaScript для проекта
js.commandline.configure.nodejs=Настраивает интерпретаторы NodeJS и устанавливает пакеты для файлов package.json
js.comment.matches.signature.inspection.name=Несоответствие JSDoc и сигнатуры функции
js.comment.matches.signature.inspection.problem1=Параметр {0} не описан в JSDoc
js.comment.matches.signature.inspection.problem2=Параметр {0}, описанный в JSDoc, отсутствует в сигнатуре функции
js.comment.matches.signature.inspection.quickfix=Обновить JSDoc комментарий
js.comparison.with.nan.inspection.name=Сравнение с NaN
js.comparison.with.nan.inspection.problem=Сравнение на равенство с NaN всегда возвращает false
js.comparison.with.nan.inspection.problem2=Сравнение на неравенство с NaN всегда возвращает true
js.comparison.with.nan.inspection.quickfix=Заменить на {0}isNaN(…)
js.component.usage.in.template.group.display.name=Использование в шаблоне
js.component.usage.type.display.name=компонент
js.consecutive.commas.in.array.literal.inspection.insert.undefined=Вставить 'undefined'
js.consecutive.commas.in.array.literal.inspection.message=Последовательные запятые в литерале массива
js.consecutive.commas.in.array.literal.inspection.name=Последовательные запятые в литерале массива
js.constructor.cant.have.return.type=Конструктор не может иметь возвращаемый тип
js.convert.for.each.to.for.of.intention.family=Заменить 'forEach' на цикл 'for..of'
js.convert.for.each.to.indexed.intention.family=Заменить 'forEach' на индексированный цикл 'for'
js.convert.for.in.to.for.of.family.name=Преобразовать 'for..in' в 'for..of'
js.convert.for.in.to.for.of.inspection.text=Используется 'for..in' вместо 'for..of'
js.convert.for.in.to.for.of.text=Преобразовать 'for..in' в 'for..of'
js.convert.for.of.to.indexed.intention.family=Заменить 'for..of' на индексированный цикл 'for'
js.convert.indexed.for.to.for.of.family.name=Преобразовать индексированный 'for' в 'for..of'
js.convert.indexed.for.to.for.of.inspection.text=Используется индексированный 'for' вместо 'for..of'
js.convert.indexed.for.to.for.of.text=Преобразовать индексированный 'for' в 'for..of'
js.convert.indexed.for.to.foreach.intention.family=Преобразовать индексированный 'for' в вызов 'forEach'
js.convert.let.to.const.inspection.text=Используется 'let' вместо 'const'
js.convert.map.to.for.of.intention.family=Заменить вызов массива 'map' на цикл 'for..of'
js.convert.module.exports.into.es6.export.family.name=Преобразовать в export
js.convert.module.exports.into.es6.export.inspection.text=Используется 'module.exports' вместо 'export'
js.convert.module.exports.into.es6.export.text=Преобразовать в export
js.convert.parameters.to.object.intention.name=Преобразовать параметры в объект
js.convert.parameters.to.object.non.call.usage.will.not.be.updated=Использование не в вызове не будет обновлено
js.convert.parameters.to.object.usage.will.not.be.updated.for.contextual.type=Метод переопределяет другой метод. Базовый метод не будет обновлен
js.convert.parameters.to.object.usage.will.not.be.updated.for.spread=Вызов с нетерминальными spread-аргументами не будет обновлен
js.convert.parameters.to.object.with.interface.intention.name=Преобразовать параметры в объект и создать интерфейс
js.convert.require.into.es6.import.family.name=Преобразовать require() в import
js.convert.require.into.es6.import.inspection.text=Используется 'require()' вместо 'import'
js.convert.require.into.es6.import.inspection.withConditional.option=Преобразовывать require() во внутренних областях видимости при использовании действия "Исправить все"
js.convert.require.into.es6.import.inspection.withConditional.option.description=Преобразовывать require() во внутренних областях видимости (например, в операторах 'if' или внутренних функциях)
js.convert.require.into.es6.import.text=Преобразовать require() в import
js.convert.to.anonymous.function=Преобразовать в анонимную функцию
js.convert.to.anonymous.function.family.name=Преобразовать стрелочную функцию в анонимную
js.convert.to.arrow.function=Преобразовать в стрелочную функцию
js.convert.to.es6.class=Преобразовать в класс
js.convert.to.es6.class.family.name=Преобразовать функцию и её объявления членов в класс
js.convert.to.foreach.intention.name=Преобразовать 'for-in' в вызов 'forEach'
js.convert.to.named.function=Преобразовать в именованную функцию
js.convert.to.named.function.to.class.method=Преобразовать в метод класса
js.convert.var.to.const.text=Преобразовать в const
js.convert.var.to.let.or.const=Преобразовать в let/const
js.convert.var.to.let.or.const.family.name=Преобразовать var в let/const
js.convert.var.to.let.or.const.inspection.conservative.option=Консервативно преобразовывать var при использовании действия "Исправить все"
js.convert.var.to.let.or.const.inspection.conservative.option.description=Объявления могут быть перемещены в начало функции или перед первым использованием переменной.\nЧтобы отключить это поведение при использовании действия "Исправить все", установите флажок "Консервативно преобразовывать var".
js.convert.var.to.let.or.const.inspection.text=Используется 'var' вместо 'let' или 'const'
js.convert.var.to.let.text=Преобразовать в let
js.copy.qualified.to.clipboard=Копировать полное имя в буфер обмена
js.create.derived.type.abstract.class=Реализовать абстрактный класс
js.create.derived.type.class=Создать производный класс
js.create.derived.type.family=Создать производный класс / Реализовать интерфейс
js.create.derived.type.interface=Реализовать интерфейс
js.create.switch.cases=Создать отсутствующие ветки 'switch'
js.create.switch.cases.fix=Создать отсутствующие ветки\: {0}
js.declaration.is.not.at.scope.start=Оператор var не находится в начале области видимости
js.declarations.at.scope.start.inspection='var' объявлен не в начале функции
js.deprecated.symbols.inspection.name=Использован устаревший символ
js.destructuring.merge.inspection=Деструктуризация свойств с одинаковым ключом
js.destructuring.merge.inspection.fix=Объединить свойства деструктуризации
js.destructuring.merge.inspection.text=Свойства деструктуризации с идентичными ключами можно объединить
js.dialect.settings.caption=
js.dialect.settings.dialog.title=Версии языка JavaScript
js.dialect.settings.empty.text=Добавьте директории кнопкой + и выберите версии JavaScript
js.dialect.settings.override.question=Переопределить версии языка для дочерних директорий и файлов?
js.dialect.settings.override.title=Переопределить настройки версий языка
js.dialect.settings.tableTitle=Язык
js.dialects.customized.label=Настроено по директориям
js.documentation.fires=Генерирует\:
js.documentation.jsdoc.aliases=Псевдонимы\:
js.documentation.jsdoc.dialect=Диалект\:
js.documentation.jsdoc.supported-also-by=Также поддерживается\:
js.documentation.more.overload=+{0} перегрузка
js.documentation.more.overloads=+{0} перегрузок
js.dot.property.access.context.type=Доступ к свойству через точку
js.duplicate.declaration.inspection.name=Дублирующееся объявление
js.edit.object.literal=Редактировать значения свойств объектного литерала
js.expand.shorthand.property.quick.fix=Развернуть сокращенное свойство
js.expression.context.type=Выражение
js.extends.keyword.wrap=Ключевое слово extends
js.extends.list.wrap=Список extends
js.extjs.unresolved.ext.xtype.inspection.name=Неразрешённый Ext JS xtype
js.file.references.inspection.ignore.complex.cases=Игнорировать сложные случаи
js.file.references.inspection.name=Неразрешённая ссылка на файл
js.file.watcher.6to5.description=Транспилирует код ECMAScript 6 в ECMAScript 5 используя Babel
js.fix.change.member.access.to.sharp=Сделать приватным используя '\#'
js.flow.enable.flow.service.error=Неверный путь к Flow
js.flow.enable.flow.service.error.empty=Путь к исполняемому файлу Flow пуст
js.flow.enable.flow.service.error.message={0}. Отключите все сервисы Flow или укажите правильный путь к исполняемому файлу.
js.flow.enable.flow.service.error.on.checking=Ошибка при проверке пути Flow\: {0}
js.flow.enable.other.services=Навигация, автодополнение и подсказки типов
js.flow.enable.type.checking=Проверка типов
js.flow.has.unsaved.files=Подсветка не была выполнена, так как некоторые файлы изменены
js.flow.process.log=Лог процесса Flow
js.flow.services.label=Использовать Flow сервер для\:
js.flow.settings.auto.save=Автоматически сохранять все измененные файлы
js.flow.settings.auto.save.warning.lsp=Это позволит Flow всегда отображать актуальный статус ошибок.
js.flow.settings.executable.dialog.title=Выберите пакет или исполняемый файл Flow
js.flow.settings.executable.label=Пакет или исполняемый файл Flow  [&F]\:
js.flowjs.annotation.inspection.name=Проверка типов Flow
js.flowjs.config.inspection.message=Нет связанного .flowconfig
js.flowjs.config.inspection.name=Отсутствует .flowconfig
js.flowjs.config.inspection.to.current.path.name=Добавить .flowconfig в текущую директорию
js.flowjs.config.inspection.to.module.path.name=Добавить .flowconfig в корень содержимого модуля
js.flowjs.config.inspection.to.project.path.name=Добавить .flowconfig в корень проекта
js.flowjs.flag.comment.placement.inspection.error=Комментарий с флагом Flow не в начале файла
js.flowjs.flag.comment.placement.inspection.fix=Переместить комментарий с флагом Flow в начало файла
js.flowjs.flag.comment.placement.inspection.name=Неправильно расположенный флаг @flow
js.flowjs.flag.without.language.version=Флаг Flow без версии языка Flow
js.flowjs.group.name=Проверка типов Flow
js.format.cstyle.comments=Выравнивать многострочные
js.frameworks.sencha.xtype.not.found=Не найден Ext JS класс для xtype ''{0}''
js.function.brace.style=В объявлении функции
js.function.call.parentheses=Скобки вызова функции
js.function.call.wrap=Аргументы вызова функции
js.function.declaration.parentheses=Скобки объявления функции
js.function.expression.brace.style=В функциональном выражении
js.function.metrics.group.name=Метрики функций
js.function.parameters.wrap=Параметры объявления функции
js.generated.explicit.return.expression.types=Возвращаемых значений функциональных выражений
js.generated.explicit.return.types=Возвращаемых значений объявлений функций
js.generated.explicit.types=Предпочитать явные типы для\:
js.generated.explicit.var.types=Переменных и полей
js.generated.types=Типы
js.generated.types.settings.link=Настройки стиля кода для явных типов
js.generated.use.as.cast=Предпочитать приведение типов через 'as'
js.generated.use.public.modifier=Использовать модификатор 'public'
js.import.options.merge.import=Объединять импорты членов из одного модуля
js.import.options.sort.members=Сортировать импортуемые члены
js.import.options.sort.module.name=Сортировать импорты по модулям
js.import.options.use.explicit.js.extension=Использовать расширение файла\:
js.import.options.use.explicit.js.extension.auto=Авто
js.import.options.use.explicit.js.extension.no=Никогда
js.import.options.use.explicit.js.extension.yes=Всегда
js.import.options.use.explicit.js.extension.yes.ts=Всегда ".js"
js.import.options.use.import-type=Использовать модификатор type в импортах\:
js.import.options.use.import-type.always=Всегда с type
js.import.options.use.import-type.auto=Авто
js.import.options.use.import-type.help=Эта опция настраивает использование оператора TypeScript 'import type' или спецификатора типа при импорте типа.<br><br>При выборе "Всегда с type" всегда используется 'import type' или спецификатор типа.<br><br>При выборе "Никогда" все типы импортуются как значения, без ключевого слова 'type'.<br><br>При выборе "Авто" ИСР проверяет версию TypeScript и tsconfig.json для выбора наиболее подходящего варианта.
js.import.options.use.import-type.never=Никогда
js.import.options.use.node.resolution=Использовать импорт директории при наличии index.js (разрешение модулей в стиле Node)
js.imports.dependencies.group.name=Импорты и зависимости
js.incompatible.types.comparison.inspection.name=Сравнение выражений несовместимых типов
js.incompatible.types.comparison.message=Условие всегда {0, choice, 0\#false|1\#true}, так как типы ''{1}'' и ''{2}'' не пересекаются
js.indexer.to.property.intention=Заменить на доступ к свойству
js.infer.parameter.types.intention=Вывести типы параметров из использования
js.infer.parameter.types.intention.failure.readonly.text=Невозможно вывести типы из использования\: файл только для чтения
js.infer.parameter.types.intention.failure.text=Невозможно вывести типы из использования
js.infer.parameter.types.intention.failure.title=Невозможно вывести типы
js.infer.parameter.types.intention.jsdoc=Вывести типы параметров JSDoc из использования
js.infer.parameter.types.intention.progress.text=Выведение типов
js.inject.dont.format.intention.text=Отключить форматование для внедренного содержимого
js.inject.with.comment.intention.family.name=Аннотировать внедрение комментарием
js.inspection.amd.modules.dependencies.family.name=Отсутствует зависимость AMD модуля
js.inspection.async.group.name=Async код и промисы
js.inspection.bitwise.group.name=Проблемы побитовых операций
js.inspection.convert.to.es6.group.name=Помощь в миграции на ES2015
js.inspection.es6.modules.dependencies.family.name=Отсутствует оператор import
js.inspection.function.expression.is.used.instead.of.arrow=Используется функциональное выражение вместо стрелочной функции
js.inspection.group.name=Общие
js.inspection.group.path=JavaScript и TypeScript
js.inspection.missing.amd.dependency=Отсутствует зависимость AMD модуля
js.inspection.missing.import=Отсутствует оператор import
js.inspection.missing.module.dependency=Отсутствует зависимость модуля
js.inspection.package.json.dependencies=Несоответствие зависимостей в package.json
js.inspection.package.json.update.dependency.to.latest.version=Обновить зависимости package.json до последних версий
js.inspection.promise.ignored.display.name=Игнорируется результат вызова метода, возвращающего промис
js.inspection.promise.ignored.problem.descriptor=Промис, возвращаемый из {0}, игнорируется
js.inspection.promise.value.expected.problem.descriptor=Промис, возвращаемый из {0}, используется там, где ожидается значение
js.inspection.switch.group.name=Проблемы оператора switch
js.iterate=Итерация с помощью 'for..of'
js.iterate.async=Итерация с помощью 'for await..of'
js.join.declaration.assignment.inspection.fix=Объединить объявление и присваивание переменной
js.join.declaration.assignment.inspection.name=Объявление переменной можно объединить с первым присваиванием
js.join.vars.intention=Объединить последующие объявления переменных
js.jquery.efficiency.inspection.allow.attribute.and.pseudo.selectors=Разрешить атрибуты и псевдо-селекторы
js.jquery.efficiency.inspection.attribute.used.message=jQuery селекторы атрибутов могут быть неэффективны
js.jquery.efficiency.inspection.duplicated.selector=Дублирующийся jQuery селектор
js.jquery.efficiency.inspection.name=jQuery селектор можно оптимизовать
js.jquery.efficiency.inspection.pseudoselector.used.message=jQuery псевдо-селекторы могут быть неэффективны
js.language.version.combo.es5=ECMAScript 5.1
js.language.version.combo.es6=ECMAScript 6+
js.language.version.combo.es6.description=ECMAScript 2015+, некоторые предложения и JSX
js.language.version.combo.flow=Flow
js.language.version.combo.flow.description=Flow и JSX в ECMAScript 6
js.language.version.label=Версия языка JavaScript
js.last.comma.in.array.literal.inspection.name=Ненужная последняя запятая в литерале массива
js.last.comma.in.object.literal.inspection.name=Ненужная последняя запятая в литерале объекта
js.library.attach.debug=Подключить отладочную версию [&D]…
js.library.attach.release=Подключить релизную версию [&R]…
js.library.configurable.name=Библиотеки
js.library.documentation=Документация
js.library.download.fix=Загрузить библиотеку
js.library.download.stubs.label=Заглушки сообщества TypeScript
js.library.downloading.library=Загрузка библиотеки
js.library.successfully.downloaded=Успешно загружено {0}
js.library.unresolved.url.inspection.name=Отсутствует локально сохранённая библиотека для HTTP-ссылки
js.linter.guesser.linter.disabled={0} отключен.
js.linter.guesser.linter.enabled.because.of.config.file={0} включен\: конфигурационный файл находится в проекте.
js.linter.guesser.linter.enabled.because.of.dependency={0} включен\: ''{1}'' указан в package.json.
js.linter.guesser.linter.enabled.because.of.package.json.section={0} включен\: ''{1}'' находится в package.json.
js.linters.detect.automatically.caption=Определять пакет и конфигурационный файл из ближайшего package.json
js.linters.inspection.group.name=Инструменты контроля качества кода
js.make.single.var.statement=Сделать единое var-объявление
js.method.can.be.static=Метод может быть 'static'
js.method.can.be.static.option=Проверять только 'private' методы
js.mismatched.update.collection.inspection.name=Несоответствие запроса и обновления коллекции
js.mismatched.update.collection.update.method.names=Имена методов обновления\:
js.missing.await.symbol.inspection.for.generator.name=Асинхронные генераторы должны перебираться с помощью цикла for-await
js.missing.await.symbol.inspection.for.returns=Всегда используйте 'await' для вызовов асинхронных функций во избежание ошибок и для поддержки асинхронных стеков V8
js.missing.await.symbol.inspection.name=Отсутствует await для вызова асинхронной функции
js.missing.switch.branches.ignore.with.default=Игнорировать операторы switch с веткой по умолчанию
js.missing.switch.branches.inspection.desc=В операторе ''switch'' отсутствуют case\: {0}
js.missing.switch.branches.inspection.name=В операторе 'switch' отсутствуют ветви
js.module.uml.presentable.name=Зависимости JavaScript модулей
js.move.to.scope.start=Переместить var-объявление в начало области видимости
js.move.type.to.file.family=Переместить в файл с соответствующим именем
js.move.type.to.file.text=Переместить {0} в файл {1}
js.named.to.anonymous.family.name=Преобразовать в функциональное выражение
js.named.to.arrow.text=Преобразовать в {0} со стрелочной функцией
js.named.to.function.expression.text=Преобразовать в переменную с функциональным выражением
js.named.to.function.hoisting.conflict.text=Функция используется до объявления. После преобразования в переменную использование будет нарушено
js.nested.template.literal.fix=Встроить вложенный литерал
js.nested.template.literal.inspection=Избыточная вложенность в шаблонной строке
js.node.services.profiler.disable=Остановить профилирование Node.js сервисов
js.node.services.profiler.enable=Запустить профилирование Node.js сервисов
js.param.hints.blacklist.pattern.explanation=Чтобы отключить подсказки для метода или функции, используйте один из следующих шаблонов\:<p style\="margin-left\: 5px"><code><b>(*info)</b></code> - все методы с одним параметром, где имя параметра заканчивается на <em>info</em><br><code><b>(key, value)</b></code> - все методы с параметрами <em>key</em> и <em>value</em><br><code><b>*.put(key, value)</b></code> - все методы <em>put</em> с параметрами <em>key</em> и <em>value</em><br><code><b>Console.log(*, *)</b></code> - метод <em>log</em> типа <em>Console</em> с ровно двумя параметрами</p><br><p>Имена или заполнители должны быть указаны для всех параметров, включая необязательные.<br>Полные имена методов должны включать имена классов или интерфейсов, или заполнитель для них.<br>Используйте действие "Не показывать подсказки для текущего метода" {0} для добавления шаблонов при редактировании кода.</p>
js.param.hints.show.names.for.all.args=Нелитеральные аргументы
js.param.hints.show.names.for.pipes=Операторы конвейера
js.param.hints.show.names.for.tagged=Аргументы размеченного шаблона
js.possibly.async.function.inspection='await' в не-асинхронной функции
js.possibly.async.function.quick.fix=Сделать функцию {0} асинхронной
js.possibly.async.function.quick.fix.family.name=Сделать функцию асинхронной
js.potentially.invalid.constructor.usages.inspection.name=Потенциально некорректное использование конструктора
js.potentially.invalid.target.of.indexed.property.access.inspection.name=Возможно некорректная цель доступа к индексированному свойству
js.potentially.invalid.usage.of.class.this.inspection.name=Потенциально некорректная ссылка на 'this' класса из замыкания
js.potentially.invalid.usage.of.this.inspection.name=Потенциально некорректная ссылка на 'this' из замыкания
js.primitive.type.improper.instantiation.inspection=Создание экземпляра {0} можно упростить
js.primitive.type.wrapper.usage.inspection=Используется объект-обертка примитивного типа
js.probable.bugs.group.name=Возможные ошибки
js.progress.title.auto-importing-symbols-on-paste=Автоматический импорт внешних символов при вставке…
js.property.can.be.replaced.with.shorthand=Свойство можно заменить сокращенной формой
js.property.can.be.replaced.with.shorthand.method=Свойство можно заменить сокращенным методом
js.property.to.indexer.intention=Заменить на доступ через индекс
js.pull.up.will.be.made.abstract=Не-абстрактный {0} станет абстрактным
js.quote.unquote.intention.plural={0} имен свойств
js.quote.unquote.intention.quote=Заключить в кавычки
js.quote.unquote.intention.quote.family=Заключить имена свойств в кавычки
js.quote.unquote.intention.singular={0} имени свойства
js.quote.unquote.intention.unquote=Убрать кавычки
js.quote.unquote.intention.unquote.family=Убрать кавычки из имен свойств
js.react.group.name=React
js.redundant.await.inspection=Избыточное выражение 'await'
js.redundant.switch.problems.inspection.default=Оператор 'switch' содержит только одну ветвь 'default'
js.redundant.switch.problems.inspection.default.unwrap=Развернуть оператор 'switch'
js.redundant.switch.problems.inspection.empty=Оператор 'switch' пуст
js.redundant.switch.problems.inspection.empty.remove=Удалить пустой оператор 'switch'
js.redundant.switch.problems.inspection.name=Оператор 'switch' избыточен и может быть заменен
js.redundant.switch.problems.inspection.side.effects=и извлечь побочные эффекты
js.redundant.switch.problems.inspection.single=Оператор 'switch' содержит только одну не-default ветвь
js.redundant.switch.problems.inspection.single.replace=Заменить 'switch' на 'if'
js.referencing.mutable.variable.from.closure.inspection.name=Ссылка на изменяемую переменную из замыкания
js.regex.flag.d=индексы совпадений - индексы для подстрок
js.regex.flag.g=глобальный поиск - вернуть все совпадения
js.regex.flag.i=игнорировать регистр - поиск без учета регистра
js.regex.flag.m=многострочный - посимвольный поиск для ^ и $
js.regex.flag.s=dotAll - . соответствует переносам строк
js.regex.flag.u=unicode - полная поддержка Unicode
js.regex.flag.y=sticky - поиск на точной позиции
js.remove.digit.separators=Удалить разделители чисел
js.remove.redundant.initializer.fix=Удалить избыточный инициализатор
js.remove.unused.assignment=Удалить неиспользуемое присваивание
js.rename.base.member=Переименовать базовый {0}
js.rename.component.usage.provide.name.error=Имя компонента должно быть корректным JavaScript идентификатором
js.rename.component.usage.provide.name.message=Введите новое имя компонента
js.rename.component.usage.provide.name.title=Переименовать компонент
js.rename.current.member=Переименовать текущий {0}
js.rename.file.to.match.type.name=Переименовать файл в {0} в соответствии с именем {1}
js.rename.file.to.match.type.name.family=Переименовать файл в соответствии с именем типа
js.rename.member.title={0} {1} {2} из {3}
js.rename.member.title.implements=реализует
js.rename.member.title.overrides=переопределяет
js.rename.search.for.component.usages=Искать использования к&омпонента [&O]
js.replace.string.concatenation.with.es6.template.fix.text=Заменить на строковый шаблон
js.replace.string.concatenation.with.es6.template.inspection.name=Используется конкатенация строк вместо шаблонной строки
js.replace.string.with.es6.template=Заменить на строковый шаблон
js.replace.with.literal=Заменить на литерал {0}
js.replace.with.shorthand.method.quick.fix=Заменить на сокращенный метод
js.replace.with.shorthand.property.quick.fix=Заменить на сокращенное свойство
js.replace.with.type.cast.to.primitive=Заменить на приведение типа к {0}
js.searching.for.component.usages=Поиск использований компонента…
js.separate.bytes=Разделить байты
js.separate.digits=Разделить цифры
js.separate.nibbles=Разделить полубайты
js.separate.thousands=Разделить тысячи
js.separate.thousands.in.integer.part=Разделить тысячи в целой части
js.separate.words=Разделить 16-битные слова
js.show.dynamic.usages=Показать динамические использования
js.show.type.info.action.error=Выражение не найдено
js.space.before.function.left.brace=Левая фигурная скобка функции
js.spaces.in.flow.category=В Flow
js.split.declarations=Разделить объявления
js.split.into.multiple.declarations=Разделить на несколько объявлений
js.statement.context.type=Оператор
js.strict.mode.inspection.error={0} не в строгом режиме
js.strict.mode.inspection.fix=Добавить директиву "use strict"
js.strict.mode.inspection.name=Используется нестрогий режим
js.strict.mode.inspection.redundant.pragma=Директива "use strict" избыточна
js.strict.mode.remove.pragma=Удалить директиву "use strict"
js.string.template.line.separators.multispan=Преобразовать в многострочный шаблон строки
js.string.template.line.separators.multispan.family.name=Преобразовать в многострочный шаблон строки
js.string.template.line.separators.visible=Преобразовать в видимые разделители строк
js.string.template.line.separators.visible.family.name=Преобразовать строковый шаблон для использования видимых разделителей строк
js.suspicious.bind.with.arrow.function=Подозрительное использование 'bind' со стрелочной функцией
js.suspicious.eq.plus.fix.name=Заменить на '+\='
js.suspicious.eq.plus.inspection.desc=Подозрительное присваивание '\=+'\: возможно, опечатка в '+\='
js.suspicious.eq.plus.inspection.name=Подозрительное присваивание '\=+'
js.suspicious.name.assignment=''{0}'' вероятно не следует присваивать ''{1}''
js.suspicious.name.combination.inspection.name=Подозрительная комбинация имен переменной/параметра
js.suspicious.name.parameter=''{0}'' вероятно не следует передавать как параметр ''{1}''
js.suspicious.name.return=''{0}'' вероятно не следует возвращать из метода ''{1}''
js.switch.no.default=В операторе 'switch' отсутствует ветка 'default'
js.switch.no.default.add=Создать отсутствующую ветку default
js.switch.to.jsx.inspection.dismiss=Закрыть
js.testing.autoWatch.action.name=Отслеживать изменения
js.testing.highlight.line=Подсветить строку с ошибкой в тестовом коде
js.testing.inspection.group.name=Модульное тестование
js.tool.window.limit=Показаны первые {0} ошибок.
js.tool.window.limit.all=Показать все {0} ошибок
js.top.level.await.expression.inspection=Выражение 'await' верхнего уровня
js.top.level.await.expression.inspection.description=Использовано выражение 'await' верхнего уровня
js.top.level.statement.context.type=Оператор верхнего уровня
js.trailing.comma.keep=Сохранить
js.trailing.comma.remove=Удалить
js.trailing.comma.whenMultiline=Добавлять при многострочности
js.undeclared.variable.inspection.name=Неявно объявленная глобальная переменная JavaScript
js.undefined.property.assignment.inspection.message=Свойство {0} не определено в типе {1}
js.undefined.property.assignment.inspection.name=Присваивание неопределённого свойства
js.unfiltered.for.in.loop.inspection.name=Нефильтрованный цикл for..in
js.unfiltered.for.in.loop.skip.primitives=Пропускать итерации по ссылке с инициализатором массива или объекта
js.unfiltered.for.in.loop.skip.primitives.tooltip=Включить, когда Object.prototype и Array.prototype не модифицированы
js.unnecessary.semicolon.fix.name=Удалить лишнюю точку с запятой
js.unnecessary.semicolon.inspection.name=Лишняя точка с запятой
js.unnecessary.semicolon.problem=Лишняя точка с запятой \#loc
js.unreachable.switch.branches.ignore.with.dynamic=Не показывать это предупреждение в контексте динамического типа
js.unreachable.switch.branches.inspection.desc=Недостижимая ветка 'case'
js.unreachable.switch.branches.inspection.name=Недостижимая ветка 'case' оператора 'switch'
js.unreachable.switch.branches.remove=Удалить недостижимую ветку 'case'
js.unresolved.variable.inspection.name=Неразрешённая ссылка
js.unused.assignment.inspection.name=Неиспользуемое присваивание
js.unused.es6.import.inspection.name=Неиспользуемый import
js.unused.global.symbol.inspection.name=Неиспользуемый глобальный символ
js.unused.local.symbol.inspection.name=Неиспользуемый локальный символ
js.unused.symbol=Неиспользуемый {0} \#ref
js.unused.symbol.full=Неиспользуемый {0}
js.unused.symbol.remove=Удалить неиспользуемый {0}
js.unused.symbols.group.name=Неиспользуемые символы
js.unwanted.symbols.group.name=Потенциально нежелательные конструкции кода
js.url.import.usage.inspection.download.module.0.quick.fix.failed=Не удалось загрузить модуль ''{0}''
js.url.import.usage.inspection.download.module.0.quick.fix.progress=Загрузка модуля ''{0}''
js.url.import.usage.inspection.download.module.0.quick.fix.success=Модуль ''{0}'' успешно загружен
js.url.import.usage.inspection.download.module.0.quick.fix.warning=Модуль ''{0}'' загружен с ошибками
js.url.import.usage.inspection.download.module.0.quick.fix.warning.urls=Неудачные URL\:
js.url.import.usage.inspection.download.module.quick.fix.name=Загрузить модуль
js.url.import.usage.inspection.name=Используется URL импорт
js.usage.type.call=Использование в вызове функции
js.validate.jsdoc.inspection.name=Синтаксические ошибки и неразрешённые ссылки в JSDoc
js.validate.signature.inspection.name=Несоответствие сигнатуры
js.validate.types.inspection.name=Несоответствие типов
js.validity.issues.group.name=Проблемы валидности
js.value.assigned.is.never.used=Присвоенное значение никогда не используется \#loc
js.value.assigned.to.is.never.used=Значение, присвоенное ''{0}'', никогда не используется \#loc
js.variable.initializer.is.redundant=Инициализатор переменной избыточен \#loc
js.variable.might.not.been.initialized=Переменная может быть не инициализована \#loc
js.variable.problems.ignore.desc=Игнорировать для var-переменных
js.variable.problems.inspection.desc=Переменная ''{0}'' объявлена в ветке ''{1}'', но используется в ветке ''{2}''
js.variable.problems.inspection.desc.ref.error=Ошибка ссылки при доступе
js.variable.problems.inspection.name=Переменная объявлена и используется в разных ветках 'case'
js.void.function.result.used.description=Используется возвращаемое значение функции void
js.void.function.result.used.name=Используется возвращаемое значение функции void
js.wrap.settings.class.decorators=Декораторы классов
js.wrap.settings.class.field.decorators=Декораторы полей класса
js.wrap.settings.class.method.decorators=Декораторы методов класса
js.wrap.settings.function.parameter.decorators=Декораторы параметров функции
js.wrap.settings.import=ES6 импорт/экспорт
js.wrap.settings.object.types=Типы объектов
js.wrap.settings.union.and.intersection.types=Объединенные и пересекающиеся типы
js.wrap.settings.var.group.name=Объявления переменных
jsdoc.tag=Комментарии//JSDoc//Тег
jsdoc.tag.namepath=Комментарии//JSDoc//Путь имени тега
jsdoc.text=Комментарии//JSDoc//Текст
jsdoc.type=Комментарии//JSDoc//Тип
jshint.clear.field.to.disable=Очистите поле для отключения
jshint.config.default.description=<div style\="padding-bottom\:10px"><div><b>.jshintrc</b></div><div style\="padding-left\:10px; padding-top\:4px;">При проверке JavaScript файла ИСР ищет .jshintrc, начиная с папки файла и двигаясь вверх до корня файловой системы.</div></div><div><div><b>package.json</b></div><div style\="padding-left\:10px; padding-top\:4px;">Добавьте вашу конфигурацию под свойством <code>jshintConfig</code> в файле package.json вашего проекта.</div></div>
jshint.config.error.cannot.locate.ext.config=JSHint\: не удаётся найти расширенную конфигурацию
jshint.config.error.cannot.parse.ext.config=JSHint\: не удаётся разобрать расширенную конфигурацию
jshint.config.error.failed.to.read.property=Не удалось прочитать свойство ''{0}'' из package.json
jshint.config.extends.cyclically=Циклическое расширение конфигурации JSHint
jshint.config.failed.to.read=Не удалось прочитать конфигурацию JSHint
jshint.config.option.custom.browser.title=Выберите конфигурационный файл JSHint (*.jshintrc)
jshint.config.option.custom.name=Пользовательский конфигурационный файл
jshint.config.option.default.name=По умолчанию
jshint.exception.balloon.action.configure.proxy.or.retry=<a href\=''{0}''>Настроить HTTP-прокси</a> или <a href\=''{1}''>Повторить</a>
jshint.exception.balloon.action.retry=<a href\=''{0}''>Повторить</a>
jshint.illegal.integer=Недопустимое целое число
jshint.inspection.message.config.not.found=Конфигурация JSHint не найдена
jshint.inspection.message.duplicate.options=Дублирующиеся опции JSHint\: {0}, {1}.
jshint.inspection.message.expected.value=Ожидаемое значение\: {0}
jshint.inspection.message.expected.values.x.or.y=Ожидаемые значения\: {0} или {1}
jshint.inspection.message.malformed.config=Некорректная конфигурация JSHint
jshint.inspection.message.not.loaded=JSHint {0} не загружен
jshint.inspection.message.object.or.array.expected=Ожидается объект или массив
jshint.inspection.message.prefix=JSHint\:
jshint.inspection.message.unexpected.jshint.option.name=Неожиданное имя опции JSHint
jshint.inspection.message.unexpected.value=Неожиданное значение
jshint.label.bundled.suffix=(встроенный)
jshint.label.no.version=Нет версии
jshint.latedef.false.text=Не предупреждать
jshint.latedef.nofunc.text=<html><body>Запретить использование переменной до её определения,<br>но разрешить объявления функций.</body></html>
jshint.latedef.true.text=Запретить использование переменной до её определения
jshint.option.asi.description.short=Подавлять предупреждения об отсутствующих точках с запятой
jshint.option.bitwise.description.short=Предупреждать об использовании побитовых операторов
jshint.option.boss.description.short=Подавлять предупреждения о присваиваниях внутри <code>if/for/…</code>
jshint.option.browser.description.short=Браузер
jshint.option.camelcase.description.short=Предупреждать об именовании переменных
jshint.option.curly.description.short=Предупреждать при отсутствии <code>{}</code> в блоках
jshint.option.debug.description.short=Подавлять предупреждения о коде отладки
jshint.option.devel.description.short=Разработка
jshint.option.edit.dialog.title=Установить опцию ''{0}''
jshint.option.elision.description.short=Подавлять предупреждения о пропущенных элементах массива ES3
jshint.option.enforceall.description.short=Предупреждать, когда код не соответствует самой строгой конфигурации
jshint.option.eqeqeq.description.short=Предупреждать о небезопасных сравнениях
jshint.option.eqnull.description.short=Подавлять предупреждения о <code>\=\= null</code>
jshint.option.es3.description.short=Предупреждать о несовместимости со спецификацией ES3
jshint.option.es5.description.short=Предупреждать о несовместимости со спецификацией ES5
jshint.option.esnext.description.short=EcmaScript.next
jshint.option.esversion.description.short=Предупреждать о несовместимости с указанной версией ECMAScript
jshint.option.evil.description.short=Подавлять предупреждения о <code>eval</code>
jshint.option.expr.description.short=Подавлять предупреждения об использовании выражений как операторов
jshint.option.forin.description.short=Предупреждать о небезопасном <code>for..in</code>
jshint.option.freeze.description.short=Предупреждать о перезаписи прототипов встроенных объектов
jshint.option.funcscope.description.short=Подавлять предупреждения об использовании переменных вне их объявленного блока
jshint.option.futurehostile.description.short=Предупреждать об использовании идентификаторов, определённых в будущих версиях JavaScript
jshint.option.gcl.description.short=Делает JSHint совместимым с Google Closure Compiler
jshint.option.globalstrict.description.short=Подавлять предупреждения об использовании глобального строгого режима
jshint.option.immed.description.short=Предупреждать об использовании немедленного вызова функций без обёртки в скобки
jshint.option.indent.description.short=Отступы
jshint.option.iterator.description.short=Подавлять предупреждения о свойстве <code>__iterator__</code>
jshint.option.lastsemic.description.short=Подавлять предупреждения об отсутствующих точках с запятой только для последнего оператора в однострочном блоке
jshint.option.latedef.description.short=Предупреждать об использовании переменной до её определения
jshint.option.laxbreak.description.short=Подавлять предупреждения о небезопасных переносах строк
jshint.option.laxcomma.description.short=Подавлять предупреждения о стиле кодования с запятой в начале
jshint.option.loopfunc.description.short=Подавлять предупреждения о функциях внутри циклов
jshint.option.maxcomplexity.description.short=Максимальная цикломатическая сложность в коде
jshint.option.maxdepth.description.short=Максимальная глубина вложенности блоков
jshint.option.maxerr.description.short=Максимальное количество ошибок
jshint.option.maxlen.description.short=Максимальная длина строки
jshint.option.maxparams.description.short=Максимальное количество формальных параметров в функции
jshint.option.maxstatements.description.short=Максимальное количество операторов в функции
jshint.option.module.description.short=Модуль ECMAScript 6
jshint.option.moz.description.short=Проверять использование расширений Mozilla JavaScript
jshint.option.multistr.description.short=Подавлять предупреждения о многострочных строках
jshint.option.newcap.description.short=Предупреждать об использовании конструктора с маленькой буквы
jshint.option.noarg.description.short=Предупреждать о <code>arguments.caller</code> и <code>.callee</code>
jshint.option.nocomma.description.short=Предупреждать об использовании оператора запятой
jshint.option.noempty.description.short=Предупреждать о пустых блоках
jshint.option.nomen.description.short=Запретить использование _ в переменных
jshint.option.nonbsp.description.short=Предупреждать о символах "неразрывного пробела"
jshint.option.nonew.description.short=Предупреждать об использовании <code>new</code> для побочных эффектов
jshint.option.nonstandard.description.short=Escape и unescape
jshint.option.notypeof.description.short=Подавлять предупреждения о недопустимых значениях оператора <code>typeof</code>
jshint.option.noyield.description.short=Подавлять предупреждения о функциях-генераторах без оператора yield
jshint.option.onevar.description.short=Один оператор var на функцию
jshint.option.passfail.description.short=Остановка при первой ошибке
jshint.option.plusplus.description.short=Предупреждать об использовании унарных операторов инкремента и декремента
jshint.option.predef.description.short=Предопределённые (разделённые ,)
jshint.option.predef.details=Определяет глобальные переменные и их статус присваивания\:\n<pre>DISQUS\:true, jQuery\:false</pre>\n<p/>Здесь JSHint позволит переопределить DISQUS,\nно выдаст ошибку при попытке переопределить jQuery.
jshint.option.proto.description.short=Подавлять предупреждения о свойстве <code>__proto__</code>
jshint.option.quotmark.description.short=Кавычки
jshint.option.scripturl.description.short=Подавлять предупреждения об использовании URL-адресов для скриптов
jshint.option.shadow.description.short=Подавлять предупреждения о затенении переменных
jshint.option.singlegroups.description.short=Запрещает использование группирующего оператора, когда он строго не требуется
jshint.option.smarttabs.description.short=Подавлять предупреждения о смешанных табуляциях и пробелах, когда последние используются только для выравнивания
jshint.option.strict.description.short=Предупреждать, когда код не в строгом режиме
jshint.option.sub.description.short=Подавлять предупреждения об использовании нотации <code>[]</code>, когда можно использовать точечную нотацию
jshint.option.supernew.description.short=Подавлять предупреждения о "странных" конструкциях
jshint.option.trailing.description.short=Предупреждать о завершающих пробелах
jshint.option.typed.description.short=Типизованные массивы
jshint.option.undef.description.short=Предупреждать о неопределённых переменных
jshint.option.unused.description.short=Предупреждать о неиспользуемых переменных
jshint.option.validthis.description.short=Подавлять предупреждения о возможных нарушениях строгого режима
jshint.option.varstmt.description.short=Предупреждать об использовании VariableStatements
jshint.option.white.description.short=Запретить неаккуратные пробелы
jshint.option.withstmt.description.short=Подавлять предупреждения об использовании оператора with
jshint.option.worker.description.short=Web Worker
jshint.option.wsh.description.short=Windows Script Host
jshint.options.tree.tooltip.set.a.new.value=Установить новое значение
jshint.progress.title=JSHint {0}
jshint.progress.title.downloading=Загрузка {0}
jshint.progress.title.updating.jshint=Обновление JSHint до {0}
jshint.quotmark.double.text=Разрешены только двойные кавычки
jshint.quotmark.false.text=Разрешены оба типа кавычек
jshint.quotmark.single.text=Разрешены только одинарные кавычки
jshint.quotmark.true.text=Разрешены только одинарные или только двойные кавычки
jshint.suppress.text.suppress.for.line=Подавить для строки
jshint.tree.link.set=Установить
jshint.unused.false.text=Не проверять ничего
jshint.unused.strict.text=Проверять все переменные и параметры
jshint.unused.true.text=<html><body>Проверять все переменные и параметры, но разрешить<br>неиспользуемые параметры после использованного параметра</body></html>
jshint.unused.vars.text=Проверять переменные, но не параметры функций
jshint.use.config.files=Использовать конфигурационные файлы
jshint.version.label=Версия [&V]\:
jsx.code.style.attribute.default.value=Добавить для атрибутов JSX\:
jsx.code.style.attribute.default.value.braces=Фигурные скобки
jsx.code.style.attribute.default.value.none=Нет
jsx.code.style.attribute.default.value.quotes=Кавычки
jsx.code.style.attribute.default.value.typebased=На основе типа
jsx.convert.html.attributes.to.jsx=Закрывать одиночные HTML-теги при вставке кода в JSX файлы
jsx.convert.html.attributes.to.react=Преобразовывать имена HTML-атрибутов при вставке кода в React JSX файлы
jsx.convert.html.to.jsx.command.name=Преобразовать HTML-код в JSX
jsx.convert.html.to.jsx.progress=Преобразование HTML-кода в JSX…
jsx.dom.nesting.inspection.message=''{0}'' не может быть дочерним элементом ''{1}''
jsx.dom.nesting.inspection.message.text=Текстовые узлы не могут быть дочерними элементами ''{0}''
jsx.dom.nesting.inspection.message.tr=''{0}'' не может быть дочерним элементом ''{1}''. Добавьте <tbody>, <thead> или <tfoot> в ваш код для соответствия DOM-дереву, генерируемому браузером.
jsx.dom.nesting.inspection.name=Недопустимая вложенность элементов DOM
jsx.html.context.type=JSX HTML
jsx.missing.namespace.inspection.name=Отсутствует пространство имён JSX
jsx.missing.namespace.inspection.text=JSX используется без импорта {0}
jsx.syntax.used.description=Используется синтаксис JSX
jsx.syntax.used.name=Используется синтаксис JSX
jsx.unresolved.component.name=Неразрешённый компонент JSX
jsx.unresolved.prop.name=Неразрешённое свойство JSX
label.choose.main.file=Выбрать основной файл
label.choose.output.directory=Выбрать выходную директорию
label.compiles.js.files=Компилирует .js файлы
label.compress.js.files=Сжимает .js файлы
label.exclude.methods.classes=Исключить методы классов\:
label.import.popup=Подсказка автоимпорта
label.method.should.be.defined=метод должен быть определен
label.minimum.language.level=Минимальный уровень языка\:
label.name.injection=Имя [&N]\:
label.namespace=Пространство имён\:
label.path=Путь [&P]\:
label.wsl.node.interpreter=WSL Node.js интерпретатор [&N]\:
linemarker.implemented=Реализовано
linemarker.implementing=Реализация
linemarker.implements.invalid=<недействительно>
linemarker.implements.several=Реализация методов нескольких интерфейсов
linemarker.implements.text=Реализует {0} в {1}
linemarker.javascript.sources=Исходный код JavaScript
linemarker.javascript.typescript=Маркеры строк JavaScript/TypeScript
linemarker.overridden=Переопределено
linemarker.overrides.text=Переопределяет {0} в {1}
linemarker.overriding=Переопределение
linemarker.typescript.declaration=Объявление TypeScript
list.item.class.field=Поле класса
list.item.declarations.function.members.to.be.converted.to.class.members=Объявления членов функции для преобразования в члены класса
list.item.declarations.that.were.not.converted=Объявления, которые не были преобразованы
list.item.function.converted.to.class=Функция преобразована в класс
list.item.function.to.be.converted.to.class=Функция для преобразования в класс
list.item.global.or.module.constant=Глобальная или модульная константа
list.item.google.javascript.style.guide=Руководство по стилю Google JavaScript
list.item.javascript.file=JavaScript файл
list.item.javascript.jsx.file=JSX файл
list.item.javascript.standard.style=Стандартный стиль JavaScript
list.item.local.constant=Локальная константа
list.item.typescript.file=TypeScript файл
list.item.typescript.jsx.file=TypeScript JSX файл
live.template.con.description=Конструктор с аргументом props
live.template.fsc.description=React Flow компонент-стрелочная функция
live.template.fsf.description=React Flow функциональный компонент
live.template.props.description=this.props.
live.template.rcc.description=React классовый компонент
live.template.rccp.description=React классовый компонент с PropTypes
live.template.rcfc.description=React классовый компонент с PropTypes и методами жизненного цикла
live.template.rsc.description=React компонент-стрелочная функция
live.template.rscp.description=React компонент-стрелочная функция с propTypes
live.template.rsf.description=React функциональный компонент
live.template.rsfp.description=React функциональный компонент с propTypes
live.template.rsi.description=React компонент-стрелочная функция с неявным возвратом
live.template.state.description=this.state.
livetemplate.description.arf=Обернуть стрелочной функцией
livetemplate.description.console.assert=console.assert()
livetemplate.description.console.error=console.error()
livetemplate.description.console.info=console.info()
livetemplate.description.console.log=console.log()
livetemplate.description.console.trace=console.trace()
livetemplate.description.console.warn=console.warn()
livetemplate.description.defi=Вставить выражение define()
livetemplate.description.exportall=Оператор export - export * from 'a'
livetemplate.description.exportfrom=Оператор export - export {b} from 'a'
livetemplate.description.exportitems=Оператор export - export {b}
livetemplate.description.flow=Вставить аннотацию @flow
livetemplate.description.fori=Создать цикл итерации
livetemplate.description.importdefault=Оператор import - import b from 'a'
livetemplate.description.importfrom=Оператор import - import {b} from 'a'
livetemplate.description.importns=Оператор import - import * as b from 'a'
livetemplate.description.itar=Итерация по элементам массива
livetemplate.description.iter=Итерация (for..of)
livetemplate.description.itera=Итерация (for await..of)
livetemplate.description.itin=Итерация (for..in)
livetemplate.description.moduleexports=Оператор экспорта - module.exports \= a
livetemplate.description.ref=Вставить комментарий с путем ссылки
livetemplate.description.ritar=Итерация по элементам массива в обратном порядке
livetemplate.description.us=Вставить оператор 'use strict'
lsp.executable.error=Исполняемый файл для {0} не найден.
lsp.interpreter.error=Локальный или WSL интерпретатор Node.js не настроен.
macro.js.component.type.of=jsComponentTypeOf(Array)
macro.js.suggest.default.variable.kind=jsSuggestDefaultVariableKind(Boolean)
make.method.static=Сделать 'static'
make.private=Сделать private
members.to.implement.chooser.title=Выберите члены для реализации
members.to.override.chooser.title=Выберите члены для переопределения
merged.process.output.text={0}{2, choice, 0\#\n\nСтандартная ошибка\:\n{1}|1\#}{4, choice, 0\#\n\nСтандартный вывод\:\n{3}|1\#}\n\n{5}
method.return.types.in.call.chains=Типы возвращаемых значений функций в цепочках вызовов
modules.selected=Выбрано
move.members.dialog.title=Переместить члены
move.members.refactoring.name=Переместить члены
multiple.inheritance=Множественное наследование
new.actionscript.class.dialog.title=Новый класс ActionScript
new.actionscript.interface.dialog.title=Новый интерфейс ActionScript
new.constructor.action.description=Создать конструктор класса
new.constructor.action.text=Конструктор
new.field.action.description=Создать новое поле в классе
new.field.action.text=Поле
new.method.action.description=Создать новый метод в классе
new.method.action.text=Метод
no.candidates=Нет кандидатов
no.executable.found.in.path=Исполняемый файл не найден в {0, choice, 0\#%PATH%|1\#$PATH}
no.members.to.implement=Не найдены члены для реализации
no.members.to.override=Не найдены члены для переопределения
no.methods.to.implement=Не найдены методы для реализации
no.methods.to.override=Не найдены методы для переопределения
no.variables.for.getter=Не найдены поля без геттера
no.variables.for.getter.setter=Не найдены поля без геттера и сеттера
no.variables.for.setter=Не найдены поля без сеттера
node.core.core_modules_fetch_timed_out.dialog.message=Не удаётся получить основные модули\: превышено время ожидания
node.core.enable_coding_assistance_intention.name=Включить помощь при написании кода для Node.js
node.core.failed_to_fetch_node_core_modules.dialog.message=Не удалось получить основные модули Node
node.core.make.sure.javascript.debugger.plugin.enabled.dialog.message=Убедитесь, что плагин 'JavaScript Debugger' включен
node.core.navigate_action_text.text=Настроить Node.js…
node.core.not_ready_for_core_modules_configuration.dialog.message=Не готово к настройке основных модулей
node.debug.cannot_connect_to_vm.error.message=Не удаётся подключиться к VM {0}
node.debug.cannot_get_localhost_IPv4.error.message=Не удаётся получить 127.0.0.1 IPv4
node.download.broken.installation.error=Установка Node.js повреждена.
node.download.cannot_find_interpreter.error=Не удалось найти загруженный интерпретатор Node.js.
node.download.dialog.error.failed_to_fetch_versions=Не удалось получить доступные версии Node.js
node.download.dialog.full.version.label=Версия\:
node.download.dialog.location.description=Выберите путь для загрузки Node.js\:
node.download.dialog.location.error.blank=Путь расположения пуст
node.download.dialog.location.error.existing_non_empty_directory=Расположение указывает на существующую непустую директорию
node.download.dialog.location.error.failed_to_resolve=Не удалось определить расположение
node.download.dialog.location.error.file.exists=Расположение указывает на существующий файл
node.download.dialog.location.label=Расположение\:
node.download.dialog.major.version.label=Релиз\:
node.download.dialog.no_version.label=Нет версии
node.download.dialog.ok_text=Загрузить
node.download.dialog.released_on.label=Дата выпуска\: {0}
node.download.dialog.unavailable.label=Недоступно
node.download.download.cancelled.error=Операция была отменена.
node.download.editor.suggestion=Для корректной работы {0} требуется Node.js.
node.download.failure.notification=Не удалось загрузить Node.js {0}. {1}
node.download.fetching.version=Получение версии Node.js…
node.download.node.archive=Загрузка Node.js {0}
node.download.open.settings=Открыть настройки
node.download.success.notification=Node.js {0} настроен.
node.download.supported_later.platform=Node.js поддерживает {0}, {1} в версии {2} или выше
node.download.unsupported.platform=Node.js не поддерживает {0}, {1}
node.execution.failed.to.prepare.target.environment.error=Не удалось подготовить окружение\: {0}
node.execution.starting.process.progress.title=Запуск ''{0}''…
node.interpreter.command_timed_out.dialog.message=Время выполнения команды ''{0}'' истекло (>{1} мс)
node.interpreter.download=Загрузить Node.js
node.interpreter.field.add.item.text=Добавить…
node.interpreter.field.popup.download.item=Загрузить…
node.interpreter.field.unexpected_value.text=Неожиданное значение {0}
node.interpreter.invalid_interpreter.error.message=Недопустимый ''{0}''
node.interpreter.label=Node интерпретатор [&I]\:
node.interpreter.no_local_interpreter.error.message=Нет локального интерпретатора Node.js
node.interpreter.node_from_path.reference.name=node
node.interpreter.not.found={0} не найден
node.interpreter.project_node.reference.name=Проект
node.interpreter.reference_not_found.text=не найден
node.interpreter.specified_interpreter_correctly.dialog.message=Правильно укажите интерпретатор Node.js
node.interpreter.unavailable.target=Недоступная цель\: {0}
node.interpreter.unresolved_reference.error.message=Неразрешённый интерпретатор ''{0}''
node.interpreter.unspecified.error.text=Укажите интерпретатор Node.js
node.interpreter.unspecified_interpreter.dialog.message=Укажите интерпретатор Node.js
node.interpreter.unspecified_interpreter_with_link.dialog.message=Укажите <a href\="">интерпретатор Node.js</a>
node.interpreter.unspecified_local_interpreter.dialog.message=Укажите локальный интерпретатор Node.js
node.js.add.interpreter.action=Добавить {0}…
node.js.configure.interpreter=Настроить {0}
node.js.downloading=Загрузка Node.js {0}
node.js.inspection.group.name=Node.js
node.js.interpreters=Интерпретаторы Node.js
node.js.invalid.node=Проект использует неверный путь к Node.js.<br>Он был обновлен для использования Node.js из {0}.
node.js.missing.require=Отсутствует оператор require()
node.js.quickfix.install.node.module.devDependencies.family.name=Установить модули как зависимости разработки
node.js.quickfix.install.node.module.error.no.interpreter.text=Не удаётся установить модуль Node.js\: укажите интерпретатор Node.js по умолчанию.
node.js.quickfix.install.node.module.error.no.interpreter.title=Установка модуля Node.js
node.js.quickfix.install.node.module.error.prefix.text=Не удаётся установить модуль Node.js\: {0}
node.js.quickfix.install.node.module.family.name=Установить модули
node.js.quickfix.install.node.module.text=Установить ''{0}''
node.js.quickfix.install.node.module.update.modules.family.name=Запустить 'npm install'
node.js.quickfix.install.node.module.with.dev.dependencies.text=Установить ''{0}'' как dev-зависимость
node.js.quickfix.run.command=Запустить ''{0}''
node.js.remote.interpreters.plugin.missing=Отсутствует плагин удалённого интерпретатора Node.js. Включите плагин в {0}.
node.js.select.file=Выберите файл {0}
node.js.set.project.interpreter.action=Установить как интерпретатор проекта
node.js.unresolved.api=Неразрешённые API Node.js
node.no.interpreter=Нет интерпретатора
node.npm.cannot_find_package_by_reference.dialog.message=Не удаётся найти пакетный менеджер ''{0}''
node.npm.cannot_find_project_package_manager.dialog.message=Не удаётся найти пакетный менеджер Node.js проекта
node.npm.cannot_resolve_package_manager.dialog.message=Не удаётся разрешить пакетный менеджер ''{0}''
node.npm.correct_path_to_npm_or_yarn_package.dialog.message=Укажите правильный путь к пакету npm или yarn\: каталог "{0}" не существует
node.npm.invalid_package_manager.binary_file_not_found.dialog.message=Укажите корректный пакетный менеджер\: не удаётся найти бинарный файл в каталоге ''{0}''
node.npm.package_manager_link.text=пакетный менеджер
node.npm.project_package_manager_disallowed_here.dialog.message=Здесь нельзя ссылаться на проектный пакет npm
node.npm.specify_npm_or_yarn_package.dialog.message=Укажите пакет npm или yarn
node.npm.unspecified_package_manager.dialog.message=Не указан пакетный менеджер
node.package.binary.file.hint=Путь к бинарному файлу {0}
node.package.cannot.find.bin.file.dialog.message=Не удаётся найти bin-файл для пакета ''{0}''
node.package.dropDownList.select=Выбрать…
node.package.empty.error.message=Имя проекта пусто
node.package.empty.hint=Путь к каталогу пакета {0}
node.package.empty.hint.pkg1.or.pkg2={0} или {1}
node.package.field.not_found.text=Не найдено
node.package.manager.label=Пакетный менеджер  [&M]\:
node.package.name.URL-friendly.characters.error.message=Имя папки проекта должно содержать только URL-совместимые символы
node.package.name.capital.letters.error.message=Имя папки проекта не должно содержать заглавных букв
node.package.name.core.module.error.message=''{0}'' нельзя использовать как имя проекта, так как это имя основного модуля Node.js
node.package.name.forbidden.error.message=''{0}'' нельзя использовать как имя проекта
node.package.name.leading.or.trailing.spaces.error.message=Имя папки проекта не должно содержать начальных или конечных пробелов
node.package.name.period.error.message=Имя папки проекта не должно начинаться с точки
node.package.name.special.characters.error.message=Имя папки проекта не должно содержать специальных символов ("~'\!()*")
node.package.name.too.long.error.message=Имя папки проекта не должно быть длиннее 214 символов
node.package.name.underscore.error.message=Имя папки проекта не должно начинаться с подчеркивания
node.package.none=Нет пакета
node.package.selector.multiple.packages.binary.file.title=Выберите каталог пакета или бинарный файл {0}
node.package.selector.multiple.packages.description=Выберите {0}
node.package.selector.multiple.packages.title=Выберите каталог пакета
node.package.selector.single.package.title=Выберите каталог пакета {0}
node.package_documentation.installed_version.text=Установленная версия\: {0}
node.package_documentation.latest_version.text=Последняя версия\: {0}
node.packages.cannot_find_working_directory.text=Не удаётся определить рабочий каталог для {0}\: {1}
node.wsl.network.connection.failure=Не удаётся установить сетевое соединение от WSL к хосту Windows (возможно, блокируется брандмауэром).\nПодробнее см.\: https\://jb.gg/wsl-firewall
node.wsl.unavailable.dialog.message=WSL недоступен
non.ascii.identifiers.inspection.name=Идентификаторы с символами не ASCII
non.ascii.identifiers.mixed.set=<html>Имя содержит как ASCII, так и не ASCII символы\: {0}</html>
non.ascii.identifiers.non.ascii.found=<html>Имя содержит символы не ASCII\: {0}</html>
non.ascii.identifiers.only.ascii=Разрешить только ASCII имена
non.parenthesized.single.parameter=Одиночный параметр без скобок
non.parenthesized.single.parameter.description=Одиночный параметр без скобок
not.installed.package=Не установленный пакет
notification.content.html.href.settings.show.inspection.settings.or.href.undo.undo.html=<html><a href\='settings'>Показать настройки инспекций</a> или <a href\='undo'>Отменить</a></html>
notification.content.notifications.are.enabled.for.all.package.json.files=Уведомления включены для всех файлов package.json
notification.content.notifications.are.enabled.for.current.package.json=Уведомления включены для текущего package.json
notification.content.show.details=Показать подробности
notification.group.code.vision.performance.watcher=JavaScript\: наблюдатель производительности Code Vision
notification.group.grunt.console=Статус задачи Grunt 'watch' изменен
notification.group.jest=Сбой выполнения тестов Jest
notification.group.linters=JavaScript линтеры
notification.group.narrowed.types=JavaScript\: Подсветка суженных типов отключена
notification.group.nodejs.assistance=Сбой помощи при написании кода Node.js
notification.group.nodejs.interpreter=Путь к интерпретатору Node.js обновлен
notification.group.package.json=Доступны зависимости из package.json
notification.group.package.json.disabled=Зависимости из package.json\: уведомления отключены
notification.group.project.generator=Сбой генерации JavaScript проекта
notification.group.vitest=Сбой выполнения Vitest
notification.title.cannot.download.types.node=Не удаётся загрузить @types/node
notification.title.cannot.enable.node.js.coding.assistance=Не удаётся включить помощь при написании кода Node.js
notification.title.cannot.generate=Не удаётся сгенерировать {0}
notification.title.coloring.types.narrowed.by.type.guard.was.disabled=Подсветка типов, суженных с помощью type guard, была отключена
notify.urls.more=…и ещё {0,number}
npm.before.run.task=Запустить npm скрипт
npm.before.run.task.descr=Запустить npm {0, choice, 0\#скрипт|1\#скрипт|2\#скрипта}{1} [{2}]
npm.dialog.message.cannot.resolve.package.manager=Не удаётся разрешить пакетный менеджер ''{0}''
npm.downloading_package=Загрузка {0}…
npm.failed_to_install_package.title.message=Не удалось установить {0}
npm.modules.inspection.content.of.require.module.not.installed.warning=Модуль не установлен
npm.modules.inspection.content.of.require.not.in.dependencies.warning=Модуль не указан в зависимостях package.json
npm.modules.install.global.types.dialog.title=Установка определений TypeScript
npm.modules.install.global.types.directory.error=Не удаётся создать необходимые каталоги
npm.modules.install.global.types.fix.name=Установить определения TypeScript для лучшей информации о типах
npm.no.scripts.found=Скрипты не найдены
npm.rc.command.label=Команда [&C]\:
npm.rc.environmentVariables.label=Окружение\:
npm.rc.nodeInterpreter.label=Node интерпретатор [&I]\:
npm.rc.nodeOptions.label=Опции Node\:
npm.rc.packageJson.browseDialogTitle=Выберите файл package.json
npm.rc.packageJson.label=package.json [&P]\:
npm.rc.scripts.label=Скрипты  [&T]\:
npm.rc.scriptsArguments.label=Аргументы [&R]\:
npm.searching_for_previously_installed_package=Поиск ранее установленного {0}…
npm.task.title=NPM скрипт
numeric.enum.values=Числовые значения enum
package.description=пакет {0}
package.downloader.create.package.directory=Создание каталога пакета…
package.json.install.types.fix.family.name=Установить @types для пакета
package.version.range.hint={0, choice, 0\#Разрешает|1\#Разрешает минорные обновления\:|2\#Разрешает патч-обновления\:} {1} ≤ версия \\&lt; {2}
package.version.range.info={0, choice, 0\#не установлено|1\#установлено\: ?|2\#установлено\: {1}}, последняя\: {2, choice, 0\#загрузка…|1\#не найдено|2\#{3}}
package_json.install_dependencies.notification.content=Из {0}
package_json.install_dependencies.notification.title=Установить зависимости
package_json.install_dependencies_multiple.notification.content=Из {0} и {1} других
package_json.notifications_are_disabled.notification.content=Уведомления об установке зависимостей из {0} отключены.<p> Включите их снова с помощью действия "{1}".
package_json.update_dependencies.notification.title=Обновить зависимости
parameter.type.is.not.specified=Тип для параметра ''{0}'' не указан.\nПродолжить?
parameters.in.parentheses=Параметры в скобках
parameters.in.parentheses.description=Параметры в скобках
please.specify.package.manager=Укажите <a href\="">пакетный менеджер</a>.
popup.advertisement.latest.available.versions.for.all.distribution.tags=Последние доступные версии для всех тегов дистрибутива
popup.advertisement.start.typing.package.name=Начните вводить имя пакета для получения более точных результатов из официального публичного реестра npm
popup.content.cannot.edit.selected.node.js.interpreter=Невозможно редактировать выбранный интерпретатор Node.js
popup.title.choose.class=Выбрать класс
popup.title.select.destructuring.assignment.target=Выбрать цель присваивания деструктуризации
popup.title.target.function=Целевая функция
postfix.template.condition.array.name=Массив
postfix.template.condition.non.void.name=Не Void
postfix.template.provider.name=JavaScript и TypeScript
process.terminated=Процесс завершен
progress.subtitle.install=Установка {0} с помощью {1}…
progress.text.initializing.opened.files=Инициализация открытых файлов
progress.text.modifying=Изменение {0}
progress.text.processing=Обработка {0}{1}
progress.title.compiling.typescript.files=Компиляция TypeScript файлов
progress.title.configuring.node.js.coding.assistance=Настройка помощника кодования Node.js…
progress.title.detect.overridden.methods=Проверка переопределённых методов
progress.title.downloading.documentation=Загрузка документации
progress.title.downloading.library=Загрузка библиотеки
progress.title.downloading.typings=Загрузка типизаций
progress.title.executing.performance.task.on.files=Выполнение задачи производительности для файлов
progress.title.install=Установить {0}
progress.title.install.npm.module=Установка npm модуля ''{0}''
project.generation=генерация проекта
protractor.rc.configurationFile.label=Файл конфигурации [&C]\:
protractor.rc.configurationFile.title=Выбрать файл конфигурации Protractor
protractor.rc.protractorOptions.emptyText=CLI опции, например --browser или --rootElement
protractor.rc.protractorOptions.label=Опции Protractor [&O]\:
protractor.rc.protractorPackage.label=Пакет Protractor [&P]\:
radio.set.options.manually=Установить опции вручную
radio.use.tsconfig.json=Использовать tsconfig.json
rc.browser.error.unspecified.url.text=URL не указан в {0}
rc.browser.liveEdit.tab.name=Браузер / Live Edit
rc.configuration.tab.name=Конфигурация
rc.environmentVariables.label=Переменные окружения [&E]\:
rc.nodeOptions.label=Опции Node [&O]\:
rc.testConfig.presentable.name=Все тесты в {0}
rc.testDirectory.presentable.name=Тесты в {0}
rc.testOrSuiteScope.emptyTest=Пустое имя теста
rc.testOrSuiteScope.suite.label=Имя набора\:
rc.testOrSuiteScope.suite.title=Редактировать имя набора
rc.testOrSuiteScope.test.label=Имя теста\:
rc.testOrSuiteScope.test.title=Редактировать имя теста
rc.testRunScope.all=Все тесты [&L]
rc.testRunScope.directory=Директория [&D]
rc.testRunScope.suite=Набор
rc.testRunScope.test=Тест [&T]
rc.testRunScope.testDirectory.browseTitle=Выбрать тестовую директорию
rc.testRunScope.testDirectory.label=Тестовая директория\:
rc.testRunScope.testFile=Тестовый файл [&F]
rc.testRunScope.testFile.browseTitle=Выбрать тестовый файл
rc.testRunScope.testFile.label=Тестовый файл\:
rc.workingDirectory.browseDialogTitle=Выбрать рабочую директорию
rc.workingDirectory.label=Рабочая директория [&W]\:
recursive.call=Рекурсивный вызов
refactoring.destructuring.vars.for.refactor.this=Деструктуризация объекта или массива…
refactoring.destructuring.vars.intention.const.to.var.warning=При преобразовании выделенные const переменные будут преобразованы в let переменные.\nХотите продолжить?
refactoring.destructuring.vars.intention.const.to.var.warning.title=Изменение ключевого слова переменной
refactoring.destructuring.vars.intention.deconstruct=Сгенерировать шаблон деструктуризации
refactoring.destructuring.vars.intention.depropagate=Заменить деструктуризацию на доступ к свойствам и индексам
refactoring.destructuring.vars.intention.guard.conflict=Тип выражения сужен до ''{0}'' с помощью type guard, который не будет иметь эффекта после рефакторинга
refactoring.destructuring.vars.intention.name=Внедрить деструктуризацию объекта или массива
refactoring.destructuring.vars.intention.name.array=Внедрить деструктуризацию массива
refactoring.destructuring.vars.intention.name.object=Внедрить деструктуризацию объекта
refactoring.destructuring.vars.intention.propagate=Распространить на объявление деструктуризации
refactoring.destructuring.vars.intention.replace.array=Заменить на деструктуризацию массива
refactoring.destructuring.vars.intention.replace.object=Заменить на деструктуризацию объекта
refactoring.destructuring.vars.intention.replace.promise=Заменить на 'await Promise.all'
refactoring.destructuring.vars.intention.replace.shorthand=Заменить на деструктуризацию и сокращенные свойства
reg.exp.tagged.template={0} в шаблонной строке с тегом ''{1}''
remove.type.prefix=Удалить префикс типа
remove.unnecessary.parentheses.fix.text=Удалить лишние скобки
rename.accessors.dialog.text=Хотите также переименовать аксессоры свойства в ''{0}''?
rename.accessors.dialog.title=Переименовать поле
rename.destructuring.property.description=Свойство деструктуризации ссылается на несколько членов. Связанные свойства должны быть переименованы, иначе код может стать несогласованным.
rename.destructuring.property.title=Переименовать свойство деструктуризации
rename.prompt.do.you.want.to.rename.base.method=Хотите переименовать базовый метод?
rename.react.hook.variable.description=Переименовать связанные переменные состояния в\:
rename.react.hook.variable.title=Переименовать переменные состояния
rename.type.members.destructuring.description=Обнаружено использование в свойствах деструктуризации. Связанные свойства должны быть переименованы, иначе код может стать несогласованным.
rename.type.members.title=Переименовать члены типа
rename.type.members.union.intersection.mapped.description=Обнаружены использования объединения, пересечения или mapped типов. Связанные свойства должны быть переименованы, иначе код может стать несогласованным.
replace.implements.keyword.fix.name=Заменить 'implements' на 'extends'
required.parameters.are.not.permitted.after.optional.parameters=Обязательные параметры не могут следовать после опциональных
return.type.is.not.resolved=Возвращаемый тип ''{0}'' не разрешен.\nПродолжить?
separator.deprecated.settings=Устаревшие настройки
service.configurable.default={0} (По умолчанию)
service.highlighting.progress=Подсветка сервиса {0}
settings.code.style.Trailing.comma=Замыкающая запятая [&T]\:
settings.code.style.always=всегда
settings.code.style.dont.use=Не использовать
settings.code.style.double=двойные
settings.code.style.in.new.code=в коде, сгенерированном ИСР
settings.code.style.indent.all.chained.calls.in.a.group=Отступ для всех цепочных вызовов в группе
settings.code.style.indent.chained.methods=Отступ для цепочки методов
settings.code.style.option.use=Использовать
settings.code.style.quotes=кавычки [&Q]
settings.code.style.semicolon.to.terminate.statements=точка с запятой [&S]
settings.code.style.single=одинарные
settings.code.style.use=Использовать
settings.javascript.field.names.completion=Предлагать имена для полей класса  [&F]
settings.javascript.lang.templates.configurable.name=Шаблоны
settings.javascript.linters.autodetect.configure.automatically=Автоматическая конфигурация {0}  [&A]
settings.javascript.linters.autodetect.configure.automatically.help.text={0} будет использовать пакет {1} в директории node_modules и конфигурационные файлы {2}, расположенные в той же папке, что и текущий файл, или в любой из родительских папок.
settings.javascript.linters.autodetect.configure.manually=Ручная конфигурация {0}  [&M]
settings.javascript.linters.autodetect.disabled=Отключить {0} [&D]
settings.javascript.linters.configurable.name=Инструменты контроля качества кода
settings.javascript.linters.eslint.configurable.name=ESLint
settings.javascript.linters.jshint.configurable.name=JSHint
settings.javascript.only.type.based.completion=Только дополнение на основе типов  [&C]
settings.javascript.only.type.based.completion.tooltip=Показывать меньше предложений дополнения на основе информации о типах. Может значительно улучшить производительность.
settings.javascript.opt.chain.completion=Предлагать элементы с опциональной цепочкой для nullable типов [&O]
settings.javascript.overrides.completion=Разворачивать тела методов при дополнении для переопределений
settings.javascript.root.configurable.name=JavaScript
settings.javascript.var.names.completion=Предлагать имена переменных и параметров [&V]
settings.javascript.var.names.completion.desc=Дополнение имен
settings.javascript.var.names.completion.names.only=без типов
settings.javascript.var.names.completion.types=Добавлять аннотации типов для предлагаемых имен параметров [&T]
settings.javascript.var.names.completion.types.everywhere=с типами везде
settings.javascript.var.names.completion.types.except.fields=с типами везде, кроме полей
settings.javascript.var.names.completion.types.for.params=с типами для параметров функций
settings.javascript.var.names.completion.types.for.params.fields=с типами для параметров и полей
settings.nodejs.coding.assistance.label=Помощь при кодовании для Node.js  [&A]\:
settings.nodejs.coding.assistance.manage.scopes.label=Управление областями…
settings.nodejs.name=Node.js
settings.typescript.root.configurable.name=TypeScript
space.after.dots.in.rest.spread=После '…' в rest/spread
space.after.generator.mult=После '*' в генераторе
space.after.name.value.separator=После разделителя имя-значение '\:'
space.after.type.colon=После двоеточия ссылки на тип '\:'
space.before.class.interface.module.lbrace=Левая фигурная скобка class/interface/module
space.before.class.lbrace=Левая фигурная скобка класса
space.before.function.left.parenth=В функциональном выражении
space.before.generator.mult=Перед '*' в генераторе
space.before.name.value.separator=Перед разделителем имя-значение '\:'
space.before.type.colon=Перед двоеточием ссылки на тип '\:'
spaces.after.unary.not=После унарного 'not' (\!) и '\!\!'
spaces.arrow.function=Стрелочная функция (\=>)
spaces.async.arrow.function=В асинхронной стрелочной функции
spaces.before.unary.not=Перед унарным 'not' (\!) и '\!\!'
spaces.within.array.initializer=Квадратные скобки массива
spaces.within.import.braces=Фигурные скобки ES6 import/export
spaces.within.indexer.brackets=Квадратные скобки доступа по индексу
spaces.within.interpolation.expressions=Выражения интерполяции
spaces.within.object.literal.braces=Фигурные скобки объектного литерала
spaces.within.object.type.braces=Фигурные скобки типа объектного литерала
spaces.within.type.assertion=Утверждения типа
spaces.within.unary.additive=Унарные аддитивные операторы (+,-,++,--)
spaces.within.union.and.intersection=Объединенные и пересекающиеся типы
standardjs.action.fix.problems.description=Исправить проблемы стандартного стиля кода
standardjs.codestyle.updated={0}\: Настройки стиля кода проекта обновлены
standardjs.codestyle.updated.config.section={0}\: Настройки стиля кода проекта обновлены на основе секции ''standard'' в package.json
standardjs.codestyle.updated.dependency={0}\: Настройки стиля кода проекта обновлены на основе зависимости ''standard'' в package.json
standardjs.edit.settings.caption=ESlint/Стандартный стиль кода
standardjs.editor.notification.action=Да
standardjs.editor.notification.can.be.enabled.text=Использовать стандартный стиль кода JavaScript для этого проекта?
standardjs.editor.notification.do.not.show.text=Нет
standardjs.error.unsupported.package=Неподдерживаемая версия пакета. Обновите пакет ''Standard'' как минимум до версии {0}.
standardjs.name=Стандартный стиль кода
start.template.string.interpolation.on.typing=Начинать интерполяцию строкового шаблона при вводе '$'
status.text.add.interpreter.with=Добавить интерпретатор с помощью {0}
status.text.javascript.language.service.default.project.errors=Показать ошибки проекта
status.text.javascript.language.service.suggestions=Показать предложения
status.text.no.errors.in.current.file=В текущем файле нет ошибок.
status.text.no.interpreters.added=Интерпретаторы не добавлены
status.text.project.structure.isn.t.available=Структура проекта недоступна
status.text.refresh.required=Требуется обновление
status.text.running.which.node=Выполняется `which node`…
status.text.service.doesn.t.contain.open.projects=Сервис не содержит открытых проектов
structural.search.anonymous.functions=Анонимные функции
structural.search.classes=Классы
structural.search.comparison.to.self=Сравнение с самим собой
structural.search.console.log.calls=Вызовы console.log()
structural.search.constants=Константы
structural.search.empty.functions=Пустые функции
structural.search.function.calls=Вызовы функций
structural.search.functions=Функции
structural.search.functions.with.boolean.parameters=Функции с булевыми параметрами
structural.search.var.statements=Операторы Var
structural.search.variables=Переменные
structural.search.while.loops=Циклы While
structural.search.with.statements=Операторы With
successfully.downloaded=Успешно загружено
superclass.cannot.be.extracted.from.enum=Невозможно извлечь суперкласс из enum
superclass.cannot.be.extracted.from.mxml.component=Невозможно извлечь суперкласс из MXML компонента.
superclass.cannot.be.extracted.from.type.alias=Невозможно извлечь суперкласс из псевдонима типа
superclass.label.text=Суперкласс [&S]\:
tab.title.compile.errors=Ошибки компиляции
tab.title.convert.to.class=Преобразовать в класс
tab.title.errors=Ошибки
tab.title.project.errors=Ошибки проекта
tab.title.refactoring.preview=предпросмотр рефакторинга
tab.title.refactoring.result=Результат рефакторинга
template.add.imports=Добавить однозначные импорты
terminal.add_node_modules_bin_to_path.label=Добавить ''node_modules/.bin'' из корня проекта в {0}
testing.select.in.test.tree.name=Выбрать ''{0}'' в дереве тестов
testing.snapshot.update.all.tests.text=<link>Нажмите, чтобы обновить все неудачные снапшоты</link>
testing.snapshot.update.single.test.text=<link>Нажмите, чтобы обновить снапшот</link> для ''{0}''
testing.snapshot.update.test.file.text=<link>Нажмите, чтобы обновить все неудачные снапшоты</link> в {0}
text.cannot.download=Невозможно загрузить {0}. {1}
text.html.front.end.template.a.href.http.html5boilerplate.com=<html>Фронтенд шаблон <a href\='http\://html5boilerplate.com'>http\://html5boilerplate.com</a></html>
text.html.sleek.intuitive.and.powerful.front.end.framework=<html>Элегантный, интуитивный и мощный фронтенд фреймворк для более быстрой и легкой веб-разработки <a href\='http\://getbootstrap.com'>http\://getbootstrap.com</a></html>
titled.separator.predefined=Предопределённые
top.level.package=пакет верхнего уровня
ts.add.import.all.family.name=Добавить все импорты
ts.add.import.hint.all.part=или все импорты с {0}
ts.add.import.hint.multiple.text=Добавить импорт для {0} с {1}
ts.add.import.hint.text=Добавить {0} с {1}
ts.add.import.statement.dialog.title=Добавить импорт
ts.change.import.action.command=Изменить импорт
ts.change.import.action.dialog.title=Импортовать из…
ts.change.import.action.family.name=Изменить путь импорта ES6
ts.change.import.action.many.title=Изменить импорт…
ts.change.import.action.one.title=Изменить на {0}
ts.convert.alias.to.enum.action.family.name=Преобразовать алиас типа в enum
ts.convert.alias.to.enum.action.title=Преобразовать алиас в enum
ts.convert.alias.to.interface.action.family.name=Преобразовать алиас типа в интерфейс
ts.convert.alias.to.interface.action.title=Преобразовать алиас в интерфейс
ts.convert.field.to.parameter.property=Преобразовать поле в свойство параметра
ts.convert.parameter.property.to.field=Преобразовать свойство параметра в поле
ts.generate.reference.path.name=Сгенерировать комментарий с путем ссылки
ts.param.hints.blacklist.pattern.explanation=<b>Уведомление об устаревании\:</b> <p style\="margin-left\: 5px">Начиная с TypeScript 4.4, для отображения подсказок используется метод <code>provideInlayHints</code>. Метод имеет собственную эвристику, поэтому этот список исключений больше не используется.
ts.switch.to.jsx.inspection.name=Изменить расширение файла на .tsx
ts.unresolved.variable.inspection.name=Неразрешённая ссылка TypeScript
type.annotations=Аннотации типов
type.is.not.resolved=Тип ''{0}'' не разрешен.\nПродолжить?
typescipt.import.options.paths.help=Эта опция настраивает стиль путей, используемых в импортах.<br><br>При выборе "Всегда" ИСР всегда использует алиасы из конфигурации tsconfig.json.<br><br>При выборе "Только в файлах вне указанных путей" ИСР использует относительные пути для импортов между файлами, для которых определен алиас. Во всех остальных файлах используются сопоставления путей.<br><br>При выборе "Никогда" алиасы не используются.
typescript.abstract.class.constructor.can.be.made.protected=Конструктор абстрактного класса может быть сделан protected
typescript.auto.import.options.add.imports=Автоматически добавлять импорты TypeScript
typescript.before.task.check.errors=Проверить ошибки
typescript.before.task.config.dialog.title=Выбрать tsconfig.json
typescript.before.task.config.path=Файл конфигурации\:
typescript.before.task.title=Настройки компиляции TypeScript
typescript.code.style.tab.name=TypeScript
typescript.color.scheme.type.guard.name=Типы//Сужено с помощью type guard
typescript.compiler.action.compile.all=Скомпилировать все
typescript.compiler.action.compile.all.compile.config=Компилировать файлы для конфигурации {0}
typescript.compiler.action.compile.all.description=Компилировать все файлы проекта
typescript.compiler.action.compile.current=Компилировать текущий файл
typescript.compiler.action.compile.description=Компилировать текущий проект
typescript.compiler.action.compile.simple=Компилировать TypeScript
typescript.compiler.action.compile.toolbar=Компилировать
typescript.compiler.action.compile.with.ellipsis=Компилировать…
typescript.compiler.action.no.compile.message=Файл не был скомпилирован, так как нет ссылки из основного файла
typescript.compiler.before.run=Компилировать TypeScript
typescript.compiler.configurable.name=TypeScript
typescript.compiler.configurable.options.command.line=Опции\:
typescript.compiler.configurable.options.command.line.localeNotSupportedForBundled=Настройка локали не поддерживается для встроенного TypeScript
typescript.compiler.configurable.options.compile.main=Компилировать только основной файл\:
typescript.compiler.configurable.options.compile.main.error=Некорректный путь к основному файлу
typescript.compiler.configurable.options.enable.no.config=Также для проектов без tsconfig.json
typescript.compiler.configurable.options.generate.source.map=Генерировать source maps
typescript.compiler.configurable.options.output.path=Использовать путь вывода\:
typescript.compiler.configurable.options.scope=Область компиляции\:
typescript.compiler.configurable.options.track.file.system=Перекомпилировать при изменениях
typescript.compiler.configurable.options.use.types.from.server=Использовать типы с сервера
typescript.compiler.configurable.options.use.types.from.server.description=Включает оценку на основе компилятора TypeScript.
typescript.compiler.configurable.options.use.types.from.server.versionWarning="Использовать типы с сервера" будет проигнорировано, так как выбранная версия TypeScript ниже 4.5
typescript.compiler.configurable.options.version=TypeScript\:
typescript.compiler.configurable.options.version.bundled=Встроенный
typescript.compiler.notification.editor.configure=Настроить TypeScript…
typescript.compiler.starting=TypeScript запускается…
typescript.compiler.structure.tab.title=Структура
typescript.config.inspection=Несогласованные свойства tsconfig.json
typescript.config.inspection.checkjs.info=Свойство checkJs требует свойства allowJs
typescript.config.inspection.config.options.fix=Добавить ''{0}'' в tsconfig.json
typescript.config.inspection.fix.pattern=Добавить свойство ''{0}''
typescript.config.inspection.libs=Отсутствует глобальная библиотека
typescript.config.inspection.libs.fix=Включить библиотеку ''{0}'' в tsconfig.json
typescript.config.inspection.missing.option=Отсутствует опция tsconfig.json
typescript.duplicate.typescript.union.inspection.name=Дублирующийся компонент union или intersection типа
typescript.enum.member.name=Enum//Элемент
typescript.enum.name=Enum//Имя enum
typescript.explicit.member.type.inspection.name=Явные типы
typescript.export.assignment.cannot.be.used.in.internal.modules=Экспорт присваивания не может использоваться во внутренних модулях
typescript.field.can.be.made.readonly=Поле может быть readonly
typescript.fix.change.member.access=Сделать ''{0}''
typescript.generics.should.not.be=Тип ''{0}'' не является дженериком
typescript.import.options.exts.help=Эта опция настраивает расширения в импортах.<br><br>При выборе "Авто" ИСР всегда добавляет расширения к именам vue файлов, файлов из проектов с "module"\: "node16" или "module"\: "nodenext" в tsconfig.json и "type"\: "module" в package.json, а также файлов с расширением .mts.<br><br>При выборе "Всегда" ИСР всегда добавляет расширение .js к именам файлов TypeScript.<br><br>При выборе "Никогда" ИСР всегда использует имена файлов без расширений.
typescript.import.options.paths=Использовать сопоставления путей из tsconfig.json\:
typescript.import.options.use.config=Использовать пути относительно tsconfig.json
typescript.include.js.sources.dialog.message=Включить JavaScript файлы из ''{0}'' в проект?
typescript.include.js.sources.dialog.title=Включить пакет {0}
typescript.include.js.sources.element=Искать объявления JavaScript
typescript.insert.cast.fix=Вставить приведение типа
typescript.insert.type.guard.fix.family=Вставить type guard
typescript.insert.type.guard.nc=Заменить квалификатор на ''{0}''
typescript.insert.type.guard.nc.self=Заменить на ''{0}''
typescript.insert.type.guard.postfix=Запросить как опциональное с ''{0}''
typescript.insert.type.guard.prefix=Добавить префикс ''{0}''
typescript.insert.type.guard.surround=Заключить в ''{0}''
typescript.inspection.group.name=TypeScript
typescript.intention.convert.import.require=Преобразовать import require в import from
typescript.intention.convert.import.require.text=Преобразовать в {0}
typescript.jsdoc.type=Комментарии//JSDoc тип
typescript.language.service.clean=Сброс кэша…
typescript.language.service.compile.file=Компиляция файла… {0}
typescript.language.service.compile.file.errors=Подсчет ошибок… {0}
typescript.language.service.compile.project=Компиляция проекта… {0}
typescript.language.service.compile.project.errors=Подсчет ошибок проекта… {0}
typescript.language.service.compile.project.open.file=Открытие файла… {0}
typescript.language.service.name=TypeScript Service
typescript.language.simple.name=TypeScript
typescript.make.constructor.protected=Сделать конструктор protected
typescript.make.field.readonly=Сделать поле readonly
typescript.missing.augmentation.import=Отсутствует импорт расширения
typescript.module.name=Имя модуля
typescript.narrowed.to=Сужено до ''{0}''
typescript.primitive.types.name=Типы//Примитивный тип
typescript.private.field.modifiers.mix=Поля с приватными именами не могут иметь модификаторы доступа 'public', 'private' или 'protected'
typescript.redundant.declaration=Объявление типа совпадает с выведенным типом и может быть удалено
typescript.redundant.instanceof.guard=Избыточная проверка ''instanceof''\: ''{0}'' имеет тип ''{1}'' или подтип ''{1}''
typescript.redundant.instanceof.inheritor.guard=Избыточная проверка ''instanceof''\: ''{0}'' имеет тип ''{1}'' или наследника ''{1}''
typescript.redundant.typescript.type.argument.inspection.name=Избыточные аргументы типа
typescript.reference.to.umd.global=Ссылка на глобальную переменную UMD
typescript.remove.type.declaration=Удалить объявление типа
typescript.rename.dynamic.references=Искать динамические ссылки [&D]
typescript.rename.javascript.references=Искать в файлах JavaScript [&J]
typescript.service.action.restart=Перезапустить {0}
typescript.service.no.config=Файл не включен ни в один tsconfig.json
typescript.service.no.main.reference=Файл не обработан, так как нет ссылок из основного файла
typescript.smart.cast=Суженный тип
typescript.smart.cast.hyperlink=Настроить шрифт и фон
typescript.specify.all.param.types.explicitly=Явно указать типы всех параметров
typescript.specify.type.explicitly=Явно указать тип
typescript.suspicious.constructor.parameter.assignment=Подозрительное присваивание параметра в конструкторе. Возможно, вы забыли добавить 'this.'?
typescript.suspicious.constructor.parameter.assignment.desc=Присвоенный параметр поля конструктора
typescript.suspicious.instanceof.guard=Некорректная проверка ''instanceof''\: тип ''{0}'' не связан с ''{1}''
typescript.type.alias.name=Типы//Псевдоним типа
typescript.type.guard.name=Тип переменной сужен с помощью type guard
typescript.type.guard.name.disable=Отключить подсветку суженных типов
typescript.type.parameter=Типы//Параметр типа
typescript.type.predicate.destructuring=Предикат типа не может ссылаться на элемент в шаблоне привязки.
typescript.type.predicate.incompatible.types=Предикат типа не может быть присвоен {0}
typescript.type.predicate.not.match.name=Не удаётся найти параметр {0}
typescript.type.predicate.not.return=Предикат типа разрешен только в позиции возвращаемого типа для функций и методов
typescript.type.predicate.rest=Предикат типа не может ссылаться на rest-параметр
typescript.type.this.predicate.not.return=Предикат типа на основе 'this' разрешен только в членах класса или интерфейса, get-аксессорах или позициях возвращаемого типа для функций и методов.
typescript.types.intersection=Пересечение
typescript.types.key=Ссылка на ключ
typescript.types.mapped=Отображение
typescript.types.merged=Объединенный
typescript.types.merged.accessor=Объединенный аксессор
typescript.types.merged.parts=Ссылающиеся свойства\:
typescript.types.module.not.installed.warning=Не удаётся разрешить определения для модуля ''{0}''
typescript.types.type.member=Свойство типа {0}
typescript.types.union=Объединение
typescript.validate.generic.types.fix.add=Добавить обобщенный аргумент
typescript.validate.generic.types.fix.delete=Удалить обобщенный аргумент
typescript.validate.generic.types.inspection.error.argument.number=Обобщенный тип ''{0}'' требует ''{1}'' аргумент(ов) типа
typescript.validate.generic.types.inspection.error.argument.number.between=Обобщенный тип ''{0}'' требует от {1} до {2} аргументов типа
typescript.validate.generic.types.inspection.error.not.empty.argument=Список аргументов типа не может быть пустым
typescript.validate.generic.types.inspection.error.not.empty.parameter=Список параметров типа не может быть пустым
typescript.validate.generic.types.inspection.name=Некорректный аргумент обобщенного типа
typescript.validate.optional.parameter.inspection.error=Параметр не может иметь знак вопроса и инициализатор
typescript.validate.optional.parameter.inspection.fix.question=Удалить знак вопроса
typescript.validate.template.literal.types=Тип шаблона {1} не может быть присвоен типу ограничения {0}
typescript.validation.async.incorrect.type.annotation=Асинхронная функция не может иметь аннотацию типа ''{0}''
typescript.validation.cannot.find.best.common.type=Невозможно вывести аргумент типа из использования
typescript.validation.class.extend.constructor.return.not.class=Тип возвращаемого значения базового конструктора ''{0}'' не является типом класса или интерфейса
typescript.validation.class.extend.cycled.definition=Циклическое определение класса
typescript.validation.class.extend.many.constructors=Все базовые конструкторы должны иметь одинаковый тип возвращаемого значения
typescript.validation.class.extend.no.type.arguments.type=Ни один базовый конструктор не имеет указанного количества аргументов типа
typescript.validation.class.extend.not.constructor.type=Тип ''{0}'' не является типом функции-конструктора
typescript.validation.dissatisfies.type.annotation=Тип ''{0}'' не удовлетворяет ожидаемому типу ''{1}''
typescript.validation.expressionWithTypeArguments.compatibleSignatureNotFound=Совместимая сигнатура не найдена
typescript.validation.generators.ambient=Генераторы не разрешены в контексте ambient
typescript.validation.generators.async.no.yield=Генератор неявно имеет тип 'AsyncIterableIterator<any>', так как не возвращает значений. Рекомендуется указать тип возвращаемого значения
typescript.validation.generators.incorrect.type.annotation=Генератор не может иметь аннотацию типа ''{0}''
typescript.validation.generators.incorrect.type.annotation.iterable=Тип ''{0}'' не может быть присвоен типу ''{1}''
typescript.validation.generators.no.yield=Генератор неявно имеет тип 'IterableIterator<any>', так как не возвращает значений. Рекомендуется указать тип возвращаемого значения
typescript.validation.generators.overload=Сигнатура перегрузки не может быть объявлена как генератор
typescript.validation.incorrect.rhs.in.private.brand=Правая часть должна быть объектом, найдено\: ''{0}''
typescript.validation.message.abstract.cannot.be.used=Модификатор ''{0}'' не может использоваться с модификатором ''abstract''
typescript.validation.message.abstract.cannot.have.body=Метод не может иметь реализацию, так как помечен как 'abstract'
typescript.validation.message.abstract.class.be.created=Невозможно создать экземпляр абстрактного класса ''{0}''
typescript.validation.message.abstract.class.should.be=Абстрактные методы могут быть только внутри абстрактного класса
typescript.validation.message.abstract.member.access.super=Нельзя обратиться к абстрактному методу ''{0}'' через выражение super
typescript.validation.message.abstract.overload=Сигнатуры перегрузки должны быть все либо abstract, либо не abstract
typescript.validation.message.constructor.cannot.be.abstract=Конструктор не может быть 'abstract'
typescript.validation.message.duplicate.modifier=Модификатор {0} уже встречается
typescript.validation.message.duplicate.modifier2=Модификатор доступа уже встречается
typescript.validation.message.function.implementation.missing=Отсутствует реализация функции или она не следует сразу за объявлением
typescript.validation.message.getter.and.setter.must.have.same.access.type=Getter и setter должны иметь одинаковый тип доступа
typescript.validation.message.invalid.modifier.cannot.be.here=Модификатор {0} не может использоваться здесь
typescript.validation.message.invalid.module.member.modifier=''{0}'' не является допустимым модификатором для члена модуля
typescript.validation.message.misordered.in.modifier=Модификатор 'in' должен предшествовать модификатору 'out'
typescript.validation.message.unexpected.type.for.rest.parameter=Rest-параметр должен быть типом массива или дженериком с ограничением массива
typescript.validation.message.unexpected.type.for.rest.parameter.fix=Заменить на тип массива
typescript.validation.message.unique.symbol.mutable.non.static.field.declaration=Свойство класса типа 'unique symbol' должно быть одновременно 'static' и 'readonly'
typescript.validation.message.unique.symbol.mutable.non.static.field.declaration.fix.add.static.readonly=Добавить модификаторы static и readonly
typescript.validation.message.unique.symbol.mutable.property.signature=Свойство интерфейса или литерала типа, имеющее тип 'unique symbol', должно быть 'readonly'
typescript.validation.message.unique.symbol.mutable.variable=Переменная типа 'unique symbol' должна быть 'const'
typescript.validation.message.unique.symbol.wrong.usage=Типы 'unique symbol' здесь не разрешены
typescript.validation.module.reference.with.extension=Ссылка на внешний модуль не может заканчиваться расширением
unnecessary.parentheses.display.name=Лишние скобки
unnecessary.parentheses.problem.descriptor=Скобки вокруг <code>\#ref</code> не нужны \#loc
unresolved.project.interpreter.notification.content=Для корректной работы {0} требуется Node.js, который не найден на вашем компьютере
unresolved.project.interpreter.notification.download.action.text=Скачать Node.js
unresolved.project.interpreter.notification.download.action.url=https\://nodejs.org/en/download
unwrap.with.kind=Развернуть ''{0}…''
variables.and.fields=Переменные и поля
variables.and.fields.description=Переменные и поля
varible.name.column.title=Имя
varible.value.column.title=Значение
visibility.level.details=Подробности
visibility.level.overview=Обзор
vitest.coverage.cannot.copy.lcov.info.notification.content=Невозможно показать покрытие Vitest\: не удалось скопировать файл
vitest.coverage.cannot.find.lcov.info.notification.content=Невозможно показать покрытие Vitest\: {0} не найден
vitest.coverage.directory.not.found.notification.content=Не удаётся прочитать опцию coverageDirectory из конфигурации Vitest
vitest.coverage.notification.title=Покрытие Vitest
vitest.coverage.presentable.text=Покрытие Vitest
vitest.rc.configurationFile.label=&Конфигурационный файл\:
vitest.rc.configurationFile.title=Выберите конфигурационный файл Vitest
vitest.rc.vitestOptions.emptyText=CLI опции, например --watch или --ui
vitest.rc.vitestOptions.label=Опции Vitest\:
vitest.rc.vitestPackageField.label=Пакет &Vitest\:
vitest.snapshot.update.rc.name=Обновить снапшот для {0}
web.bundler.analyzing.configs.progress=Анализ конфигурационных файлов веб-сборщиков
web.bundler.cannot.analyze=Не удаётся проанализовать {0}\: помощник кодования будет игнорировать правила разрешения модулей в этом файле
web.bundler.error.details=Подробности ошибки\: {0}
web.bundler.failed.to.load=Не удалось загрузить {0}
web.bundler.possible.reasons=Возможные причины\: этот файл не является корректным конфигурационным файлом или его формат в настоящее время не поддерживается ИСР
web.template.file-type.description=Шаблон {0}
yarn.package_requires_yarn.dialog.message=Пакет "{0}" требует Yarn {1}
yarn.pnp.library_name=Зависимости из {0}
yarn.pnp.requires.yarn.package_manager.dialog.message=Yarn PnP требует <a href\="">пакетный менеджер</a> Yarn
{0}.visibility.will.break.methods.hierarchy={0} с видимостью {1} не сможет участвовать в иерархии
