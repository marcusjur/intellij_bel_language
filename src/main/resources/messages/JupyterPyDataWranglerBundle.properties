action.DataWrangler.Jupyter.Code.Export.description=Экспортовать сгенерированный код в Notebook
action.DataWrangler.Jupyter.Code.Export.text=Экспортовать код в Notebook
action.DataWrangler.Jupyter.Show.description=Открыть Data Wrangler в отдельной вкладке
action.DataWrangler.Jupyter.Show.text=Открыть Data Wrangler
data.wrangler.jupyter.command.changeType.description=Изменяет тип столбца
data.wrangler.jupyter.command.changeType.label=Изменить тип столбца {0} на {1}
data.wrangler.jupyter.command.changeType.name=Изменить тип столбца
data.wrangler.jupyter.command.drop.description.full=Удаляет указанный столбец из датафрейма
data.wrangler.jupyter.command.drop.name=Удалить столбец
data.wrangler.jupyter.command.dropRows.description=Удалить диапазон строк
data.wrangler.jupyter.command.dropRows.label=Удалить строки с {0} по {1}
data.wrangler.jupyter.command.dropRows.name=Удалить строки
data.wrangler.jupyter.command.duplicates.description=Удалить дублирующиеся строки в столбцах
data.wrangler.jupyter.command.duplicates.description.full=Удалить дублирующиеся строки на основе указанного столбца в контексте Jupyter-notebook Python
data.wrangler.jupyter.command.duplicates.label={0} в столбце {1}
data.wrangler.jupyter.command.duplicates.name=Удалить дубликаты
data.wrangler.jupyter.command.encoding.description=One-hot кодование столбца {0}
data.wrangler.jupyter.command.encoding.name=One-hot кодование категориальных переменных
data.wrangler.jupyter.command.fillMissing.description=Заполнить пропущенные значения
data.wrangler.jupyter.command.fillMissing.label=Заполнить пропущенные значения в столбце {0} значением {1}
data.wrangler.jupyter.command.fillMissing.name=Заполнить пропуски
data.wrangler.jupyter.command.filter.condition.equal=равно
data.wrangler.jupyter.command.filter.condition.greater=больше чем
data.wrangler.jupyter.command.filter.condition.greaterOrEqual=больше или равно
data.wrangler.jupyter.command.filter.condition.less=меньше чем
data.wrangler.jupyter.command.filter.condition.lessOrEqual=меньше или равно
data.wrangler.jupyter.command.filter.condition.notEqual=не равно
data.wrangler.jupyter.command.filter.description=С условием\: {0} {1}
data.wrangler.jupyter.command.filter.description.full=Эта команда фильтрует строки в выбранном столбце таблицы на основе указанного условия и значения в среде Jupyter Notebook с использованием Python
data.wrangler.jupyter.command.filter.label={0} столбец {1}
data.wrangler.jupyter.command.filter.name=Фильтр
data.wrangler.jupyter.command.handleOutliersWithED.description=Удалить выбросы в зависимости от расстояния каждой точки данных от центра (среднего или медианы)
data.wrangler.jupyter.command.handleOutliersWithED.label=Удалить выбросы с помощью ED с порогом {0} в {1}
data.wrangler.jupyter.command.handleOutliersWithED.name=Обнаружение выбросов методом евклидова расстояния
data.wrangler.jupyter.command.handleOutliersWithIQR.description=Удалить выбросы с помощью межквартильного размаха
data.wrangler.jupyter.command.handleOutliersWithIQR.label=Удалить выбросы с помощью IQR с множителем {0} в {1}
data.wrangler.jupyter.command.handleOutliersWithIQR.name=Обнаружение выбросов методом IQR
data.wrangler.jupyter.command.handleOutliersWithMAD.description=Удалить выбросы с помощью медианы
data.wrangler.jupyter.command.handleOutliersWithMAD.label=Удалить выбросы с помощью MAD с порогом {0} в {1}
data.wrangler.jupyter.command.handleOutliersWithMAD.name=Обнаружение выбросов методом MAD
data.wrangler.jupyter.command.handleSkewed.description=Преобразование для уменьшения асимметрии
data.wrangler.jupyter.command.handleSkewed.label=Преобразование {0} в столбце {1}
data.wrangler.jupyter.command.handleSkewed.name=Уменьшить асимметрию
data.wrangler.jupyter.command.minMax.description=Нормализация методом Min-Max
data.wrangler.jupyter.command.minMax.label=Нормализовать столбец {0} с min\={1} и max\={2}
data.wrangler.jupyter.command.minMax.name=Min-Max масштабование
data.wrangler.jupyter.command.miss.description=Удалить строки с отсутствующими данными в столбце
data.wrangler.jupyter.command.miss.description.full=Удалить строки с пропущенными значениями в указанном столбце с помощью Jupyter и Python
data.wrangler.jupyter.command.miss.label={0} в столбце {1}
data.wrangler.jupyter.command.miss.name=Удалить пропущенные значения
data.wrangler.jupyter.command.name=Экспортовать код в Notebook
data.wrangler.jupyter.command.remove.description.full=Удаляет строки с пустыми значениями из таблицы в Jupyter notebooks
data.wrangler.jupyter.command.remove.name=Удалить строки со значениями NaN
data.wrangler.jupyter.command.removeCols.description=Удалить несколько столбцов
data.wrangler.jupyter.command.removeCols.label=Удалить столбцы
data.wrangler.jupyter.command.removeCols.name=Удалить несколько столбцов
data.wrangler.jupyter.command.replace.description=С {0} на {1}
data.wrangler.jupyter.command.replace.description.full=Динамическая операция замены строк, которую можно настроить с помощью параметров, таких как полное совпадение, учет регистра и поддержка регулярных выражений, что позволяет выполнять расширенные операции в pandas DataFrame
data.wrangler.jupyter.command.replace.label={0} в столбце {1}
data.wrangler.jupyter.command.replace.name=Найти и заменить
data.wrangler.jupyter.command.round.description=Округлить значения в столбце {1} до {0} знаков после запятой
data.wrangler.jupyter.command.round.label=Округлить числовые значения в столбце {0}
data.wrangler.jupyter.command.round.name=Округлить числа
data.wrangler.jupyter.command.split.description=Разделить столбец по разделителю
data.wrangler.jupyter.command.split.label=Разделить столбец {0} по разделителю {1}
data.wrangler.jupyter.command.split.name=Разделить столбец
data.wrangler.jupyter.command.standardization.description=Преобразовать данные так, чтобы среднее значение было 0, а стандартное отклонение 1
data.wrangler.jupyter.command.standardization.label=Z-Score нормализация для столбца {0}
data.wrangler.jupyter.command.standardization.name=Z-Score нормализация
data.wrangler.jupyter.command.string.transform.description.full=Простые преобразования строк, например изменение регистра
data.wrangler.jupyter.command.string.transform.name=Преобразовать столбец как строку