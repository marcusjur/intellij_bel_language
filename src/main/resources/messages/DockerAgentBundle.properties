ApiTasks.container.is.in.target.state.error=Возможно, контейнер уже находится в целевом состоянии
BuildDevcontainerFromRemoteDataWithSourcesFromGit.extracting.context.from.volume.progress=Извлечение контекста сборки из тома…
BuildDevcontainerWithGitModelExtractor.cleanup=Очистка временной рабочей директории ''{0}''…
BuildDevcontainerWithGitModelExtractor.create.temp.dir=Создание временной директории для сборки ''{0}''…
ContextFolderArchive.done=Готово
ContextFolderArchive.sending.build.context.to.docker.daemon=Отправка контекста сборки в демон Docker…
DevContainerPreparation.remove.previous=Удаление предыдущего Dev Container…
DevContainerPreparation.reuse.sources.volume.from.the.previous.dev.container=Повторное использование тома с исходниками из предыдущего Dev Container.
DevcontainerBuildingFacade.warning.using.mount.from.temp.folder=ПРЕДУПРЕЖДЕНИЕ\: Монтирование из ''{0}'' в ''{1}'' ссылается на временную папку, используемую для сборки. Это может привести к неожиданному поведению или неработающему devcontainer. Пожалуйста, проверьте, что конфигурация devcontainer соответствует сборке из git-репозитория.
DockerAgentApplication.cant.retrieve.image.id=Не удаётся получить ID образа из потока сборки
DockerAgentApplicationBase.unknown=<неизвестно>
DockerAgentContainerImpl.cannot.inspect.container.0.not.found=Не удаётся проверить контейнер {0} - не найден
DockerAgentContainerImpl.not.connected=Не подключено
DockerAgentDeploymentImpl.cannot.find.created.container=Не удаётся найти созданный контейнер\: {0}
DockerAgentDeploymentImpl.checking.implicitly.required.image.dependencies=Проверка неявно требуемых зависимостей образа\: {0}
DockerAgentDeploymentImpl.container.id=ID контейнера\: {0}
DockerAgentDeploymentImpl.container.name=Имя контейнера\: {0}
DockerAgentDeploymentImpl.creating.container=Создание контейнера…
DockerAgentDeploymentImpl.either.image.tag.or.id.is.required=Требуется указать тег или ID образа
DockerAgentDeploymentImpl.existing.container.found.removing=Найден существующий контейнер\: {0}, удаление…
DockerAgentDeploymentImpl.fallback.to.different.platform=Попытка получить образ для другой платформы\: {0}
DockerAgentDeploymentImpl.no.such.image=Образ {0} не существует
DockerAgentDeploymentImpl.starting.container=Запуск контейнера {0}
DockerAgentDeploymentImpl.unable.to.find.image.locally=Не удаётся найти образ ''{0}'' локально
DockerAgentDeploymentImpl.warning=Предупреждение\: {0}
DockerAgentImpl.cannot.connect.to.the.docker=Не удаётся подключиться к демону Docker по адресу {0}. Запущен ли демон Docker?
DockerAgentImpl.cannot.connect.to.the.docker.details=Не удаётся подключиться к демону Docker по адресу {0}. Запущен ли демон Docker? (Подробности\: {1})
DockerAgentImpl.cannot.connect.to.the.docker.without.host=Не удаётся подключиться к демону Docker. Запущен ли демон Docker?
DockerAgentImpl.cant.locate.certificate.files=Не удаётся найти файлы сертификатов в {0}
DockerAgentImpl.certificates.path.is.not.specified=Путь к сертификатам не указан
DockerAgentImpl.docker.host.is.not.specified=Хост Docker не указан
DockerAgentImpl.docker.scheme.is.not.specified=Схема не указана
DockerAsyncCmdAbstractPipe.disconnected.from.container=Отключено от контейнера.
DockerAttachPipe.connected=Подключено.
DockerCallbackWithTtySink.error.response.from.daemon=Ошибка от демона\: {0}
DockerCallbackWithTtySink.internal.error=Внутренняя ошибка\: {0}
DockerCliImageBuilder.image.build.failed.message=Сборка образа завершилась с кодом {0}.
DockerCliImageBuilder.output.command=КОМАНДА\:
DockerDefaultImageBuilder.building.image=Сборка образа…
DockerDefaultImageBuilder.not.connected.to.docker=Нет подключения к Docker
DockerDevcontainerModelExtractor.can.not.find.directory=Не удаётся найти директорию ''{0}''
DockerDevcontainerModelExtractor.can.not.find.file=Не удаётся найти файл ''{0}''
DockerDevcontainerModelExtractor.can.not.parse.file=Не удаётся разобрать файл ''{0}''
DockerDevcontainerModelExtractor.creating.temporary.folder=Создание временной папки для извлечения модели…
DockerDevcontainerModelExtractor.extract.devcontainer.model.from.repository=Извлечение модели devcontainer из репозитория…
DockerDevcontainerModelExtractor.model.successfully.extracted=Файлы модели успешно извлечены…
DockerDevcontainerModelExtractor.process.failed.with.non.zero.exit.code=Процесс завершился с ненулевым кодом\: {0}
DockerDevcontainerModelExtractor.temporary.folder.created=Временная папка создана\: {0}
DockerRegistryProvider.error.incorrect.credentials=Неверные учетные данные
DockerResponseItemTtyHandler.authentication.is.required=требуется аутентификация
DockerResponseItemTtyHandler.from=(из {0})
DockerSearchContext.BadResponseException.message=Код ответа\: {0} от URL\: {1}
Dockerfile.done=Готово
Dockerfile.preparing.build.context.archive=Подготовка архива контекста сборки…
Done.status=готово
Error.status=ошибка
LifecycleScript.command.failed=Команда жизненного цикла\: `{0}` завершилась с кодом\: {1}
PullImageResultCallbackImpl.status.download.complete=Загрузка завершена
PullImageResultCallbackImpl.status.downloading=Загрузка
PullImageResultCallbackImpl.status.extracting=Извлечение
PullImageResultCallbackImpl.status.pull.cancelled=Получение отменено
PullImageResultCallbackImpl.status.pull.complete=Получение завершено
UserFriendlyMessage.error.code=Код ошибки\: {0}
devcontainer.feature.missing.mandatory.identifier=Отсутствует обязательный идентификатор
devcontainer.features.cannot.retrieve.manifest=Не удаётся получить манифест\: {0}
devcontainer.features.downloading.manifest=Загрузка манифеста функции {0}…
devcontainer.features.extract.tar.creating.directory=Создание директории {0}
devcontainer.features.extract.tar.error.skip=Пропуск файла вне целевой директории\: {0}
devcontainer.features.extract.tar.writing.file=Запись файла {0}
devcontainer.features.failed.to.download.tar.file.from.0=Не удалось загрузить .tar файл из {0}
devcontainer.features.file.not.found=Файл {0} не найден.
devcontainer.features.http.request.failed=HTTP-запрос завершился с кодом состояния\: {0}
devcontainer.features.missing.authentication.data=Отсутствуют данные аутентификации
devcontainer.features.missing.token=Отсутствует токен\: {0}
devcontainer.features.server.did.not.provide.authentication.method=Сервер не предоставил метод аутентификации
devcontainer.features.setting.up=Настройка функций контейнера\:
devcontainer.features.unknown.authentication.method=Неизвестный метод аутентификации
devcontainer.invalid.feature.reference=Неверная ссылка на функцию, должна содержать как минимум registry/path/id
devcontainers.feature.can.not.get.manifest=Не удаётся получить манифест для функции {0}
devcontainers.feature.can.t.be.found=Функция не найдена в {0}
devcontainers.feature.creating.base.image=Создание {0}…
devcontainers.feature.install.script.is.missing=Отсутствует install.sh для {0}.
devcontainers.feature.installation.data.not.found=Данные установки {0} не найдены.