action.Angular2ExtractComponentAction.text=Извлечь компонент…
action.Angular2VisualizeGeneratedTcbAction.description=Визуализовать сгенерированный TCB Angular шаблона
action.Angular2VisualizeGeneratedTcbAction.text=Визуализовать сгенерированный Angular шаблон TCB
action.angularCliAdd.text=Зависимость Angular…
action.angularCliGenerate.text=Angular схематика…
action.angularCliGenerate.title=Сгенерировать {0}
angular.action.goto-declaration.component=Объявление компонента [&D]
angular.action.goto-declaration.directive=Объявление директивы [&D]
angular.action.goto-related.component-class=Класс компонента
angular.action.goto-related.group-name=Angular компонент
angular.action.goto-related.inline=<inline>
angular.action.goto-related.module=Класс модуля
angular.action.goto-related.styles=Стили{0}
angular.action.goto-related.template=Шаблон
angular.action.goto-related.tests=Тесты{0}
angular.action.goto-type-declaration.component-template=Шаблон компонента [&T]
angular.action.new-project.description=Angular CLI позволяет легко создать новое Angular приложение, готовое к работе сразу после установки.
angular.action.new-project.label-additional-parameters=Дополнительные параметры\:
angular.action.new-project.label-content-root-folder=Корневая папка контента
angular.action.new-project.label-defaults=Использовать настройки проекта по умолчанию [&D]
angular.action.new-project.label-project-name=Проект
angular.action.new-project.label-standalone=Создать новый проект с автономными компонентами [&S]
angular.action.new-project.name=Angular CLI
angular.action.new-project.presentable-package-name=Angular CLI [&C]\:
angular.action.new-project.wrong-folder-name=Недопустимое имя {0} ''{1}''. Имя {0} должно начинаться с буквы и содержать только буквенно-цифровые символы или дефисы. При добавлении дефиса сегмент после дефиса также должен начинаться с буквы.
angular.action.ng-add.button-close=Закрыть
angular.action.ng-add.button-install=Установить
angular.action.ng-add.cant-add-new-dependency=Невозможно добавить новую зависимость Angular
angular.action.ng-add.install-current=Установить текущую
angular.action.ng-add.install-latest=Установить последнюю
angular.action.ng-add.install-other=Установить пакет, не указанный выше…
angular.action.ng-add.installing-for=Установка {0} для {1}
angular.action.ng-add.not-supported-installed-try-latest=Похоже, установленная версия пакета не поддерживает 'ng add'.\n\nХотите установить последнюю версию пакета?
angular.action.ng-add.not-supported-specified-try-latest=Похоже, указанная версия пакета не поддерживает 'ng add'.\n\nХотите установить последнюю версию пакета?
angular.action.ng-add.pacakge-not-installed=Пакет Angular CLI не установлен.
angular.action.ng-add.package-name=Имя пакета
angular.action.ng-add.title=Установить с помощью 'ng add'
angular.action.ng-generate.cant-generate-code=Невозможно сгенерировать код из Angular Schematics
angular.action.ng-generate.error-label=\ - Ошибка\: {0}
angular.action.ng-generate.label.parameters=Параметры{0}
angular.action.ng-generate.params.options=<опции…>
angular.action.ng-generate.title=Сгенерировать код с помощью Angular Schematics
angular.colors.banana-binding=Двустороннее связывание данных '[(...)]'
angular.colors.block-braces=Фигурные скобки блока
angular.colors.block-name=Имя блока
angular.colors.event-binding=Привязка события '(event)'
angular.colors.expansion-form=Выражение множественного числа
angular.colors.expansion-form-comma=Запятая в выражении множественного числа
angular.colors.expansion-form-delimiter=Скобки в выражении множественного числа
angular.colors.interpolation-delimiter=Скобки в интерполяции
angular.colors.property-binding=Привязка свойства '[property]'
angular.colors.signal=Сигнал
angular.colors.template-binding=Структурная директива '*directive'
angular.colors.template-expression=Выражение шаблона
angular.colors.template-variable=Переменная шаблона
angular.command.name.auto-import-angular-directives=Автоимпорт директив Angular
angular.configurable.name.angular.template=Шаблон Angular
angular.configurable.service.auto=Авто
angular.configurable.service.auto.help=Выберите эту опцию, чтобы включить пользовательский плагин WebStorm Angular TypeScript, когда это возможно. WebStorm будет использовать проверки сервера языка TypeScript для анализа выражений шаблона. Если включена опция "использовать типы с сервера", оценка типов также будет происходить в службе языка TypeScript.
angular.configurable.service.disabled=Отключено
angular.configurable.service.disabled.help=Выберите эту опцию, чтобы отключить языковой сервис. Будут использоваться только внутренние проверки ИСР.
angular.configurable.service.group=WebStorm Angular TypeScript плагин
angular.configurable.service.title=Angular
angular.description.and-separator=и
angular.description.angular-cli=Angular CLI
angular.description.attribute-selector=Селектор атрибута
angular.description.element-selector=Селектор элемента
angular.description.pipe=Пайп
angular.description.ref-var=Ссылочная переменная шаблона
angular.description.unknown-class=<unknown class>
angular.description.unnamed=<unnamed>
angular.entity.component=Компонент
angular.entity.component.or.directive=Компонент или Директива
angular.entity.directive=Директива
angular.entity.module=Модуль
angular.entity.pipe=Пайп
angular.html.template=HTML шаблон Angular
angular.html.template.17=HTML шаблон Angular (17+)
angular.html.template.181=HTML шаблон Angular (18.1+)
angular.inlay.params.option.pipe.arguments=Аргументы пайпа
angular.inspection.ambiguous-component-tag.message.embedded=Компоненты во встроенном шаблоне\: {0}
angular.inspection.ambiguous-component-tag.message.many-components=Этому элементу соответствует несколько компонентов\: {0}
angular.inspection.ambiguous-component-tag.name=Неоднозначный тег компонента
angular.inspection.animation-trigger-assignment.message=Недопустимое присваивание триггера анимации
angular.inspection.animation-trigger-assignment.name=Недопустимое присваивание триггера анимации
angular.inspection.cyclic-module-dependency.message.cycle=Циклическая зависимость между\: {0}
angular.inspection.cyclic-module-dependency.message.self-export={0} экспортует сам себя
angular.inspection.cyclic-module-dependency.message.self-import={0} импортует сам себя
angular.inspection.cyclic-module-dependency.message.separator=->
angular.inspection.cyclic-module-dependency.name=Рекурсивный импорт или экспорт модуля Angular или автономного компонента
angular.inspection.defer-block-on-trigger.message.argument-not-supported=Триггер {0} не поддерживает аргументы
angular.inspection.defer-block-on-trigger.message.argument-required=Триггер {0} требует аргумент
angular.inspection.defer-block-on-trigger.message.template-var-ref-required=Триггер {0} поддерживает только ссылку на переменную шаблона
angular.inspection.defer-block-on-trigger.message.time-duration-required=Триггер {0} поддерживает только длительность времени
angular.inspection.defer-block-on-trigger.name=Проблемы с триггерами @defer `on`
angular.inspection.for-block-non-iterable.message.non-iterable-type=Тип {0} должен иметь метод {1}, возвращающий итератор.
angular.inspection.for-block-non-iterable.name=Неитерируемый тип в блоке @for
angular.inspection.group.name=Angular
angular.inspection.i18n.message.empty=Атрибут {0} должен содержать имя атрибута для перевода
angular.inspection.i18n.message.not-matching=Переведенный атрибут {0} не существует
angular.inspection.i18n.name=Некорректный атрибут i18n
angular.inspection.inaccessible-symbol.aot.message={0} {1} является {2} и доступен только внутри класса {3} при использовании компилятора AOT
angular.inspection.inaccessible-symbol.name=Недоступный член компонента или входной параметр директивы
angular.inspection.inaccessible-symbol.strict.private.message={0} {1} является {2} и доступен только внутри класса {3}
angular.inspection.inaccessible-symbol.strict.protected.message={0} {1} является {2} и доступен только внутри класса {3} и его подклассов
angular.inspection.inaccessible-symbol.strict.read-only.message=Невозможно присвоить значение входному параметру {0}, так как это свойство только для чтения
angular.inspection.incorrect-block-usage.message.cannot-be-nested=Блок {0} не может быть вложен в {1}
angular.inspection.incorrect-block-usage.message.duplicated-block=Блок {0} может иметь только один блок {1}
angular.inspection.incorrect-block-usage.message.duplicated-parameter=Блок {0} может иметь только один параметр {1}
angular.inspection.incorrect-block-usage.message.hydrate-never-surplus-trigger=Невозможно указать дополнительные триггеры {0}, если присутствует {1}
angular.inspection.incorrect-block-usage.message.missing-block-name=Отсутствует имя блока
angular.inspection.incorrect-block-usage.message.missing-expression={0} требует параметр {1}
angular.inspection.incorrect-block-usage.message.missing-primary-block.parent=Блок {0} должен быть вложен в основной блок {1}
angular.inspection.incorrect-block-usage.message.missing-primary-block.sibling=Блок {0} должен быть на одном уровне с основным блоком {1}
angular.inspection.incorrect-block-usage.message.missing-primary-expression={0} требует выражение в качестве первого параметра
angular.inspection.incorrect-block-usage.message.no-params-allowed=Блок {0} не может иметь параметров
angular.inspection.incorrect-block-usage.message.not-last=Блок {0} должен быть последним внутри {1}
angular.inspection.incorrect-block-usage.message.undefined=Неизвестный блок {0}
angular.inspection.incorrect-block-usage.message.unrecognized-parameter={0} не поддерживает параметр {1}
angular.inspection.incorrect-block-usage.message.unrecognized-parameter-prefix={0} не поддерживает префикс параметра {1}
angular.inspection.incorrect-block-usage.name=Некорректное использование блока Angular
angular.inspection.incorrect-let-usage.message.conflicting-declaration=Невозможно объявить {0} с именем {1}, так как в той же области видимости шаблона существует другой символ с таким же именем.
angular.inspection.incorrect-let-usage.message.used-before-declaration=Невозможно прочитать объявление {0} {1} до его определения
angular.inspection.incorrect-let-usage.name=Некорректное использование объявления @let
angular.inspection.insecure-binding-to-event.message.attribute=Привязка к атрибуту события {0} запрещена по соображениям безопасности
angular.inspection.insecure-binding-to-event.message.property=Привязка к свойству события {0} запрещена по соображениям безопасности
angular.inspection.insecure-binding-to-event.name=Небезопасная привязка к событию
angular.inspection.install-with-ng-add.message={0} можно установить с помощью команды ''ng add''
angular.inspection.install-with-ng-add.name=Добавление зависимости через Angular CLI
angular.inspection.invalid-binding-type.name=Некорректный тип привязки
angular.inspection.invalid-declaration-in-module.message.declared-in-many={0} объявлен в нескольких Angular модулях\: {1}
angular.inspection.invalid-declaration-in-module.message.not-declared={0} не объявлен ни в одном Angular модуле
angular.inspection.invalid-declaration-in-module.name=Отсутствующее или некорректное объявление компонента, директивы или пайпа в модуле
angular.inspection.invalid-directive-selector.message.missing=В директиве отсутствует обязательное свойство {0}
angular.inspection.invalid-directive-selector.name=Отсутствующий или некорректный селектор
angular.inspection.invalid-entry-component.message.not-array-of-class-types=Выражение не разрешается в массив типов классов или тип класса
angular.inspection.invalid-entry-component.message.not-component=Класс {0} не является Angular компонентом
angular.inspection.invalid-entry-component.message.standalone=Компонент {0} является автономным и не может использоваться в массиве {1}. Используйте функцию {2} для bootstrap
angular.inspection.invalid-entry-component.name=Некорректный входной компонент
angular.inspection.invalid-template-definition.message.duplicated={0} и {1} не могут использоваться вместе
angular.inspection.invalid-template-definition.message.missing={0} не имеет шаблона
angular.inspection.invalid-template-definition.name=Некорректное определение шаблона компонента
angular.inspection.invalid-template-ref-var.message.ambiguous-name=Существует несколько директив с {0}, установленным в {1}\: {2}
angular.inspection.invalid-template-ref-var.message.unbound=Нет директивы с {0}, установленным в {1}
angular.inspection.invalid-template-ref-var.name=Несвязанная или неоднозначная шаблонная переменная
angular.inspection.missing-event-handler.message=Привязка события не имеет обработчика события
angular.inspection.missing-event-handler.name=Отсутствует обработчик события
angular.inspection.missing-required-directive-input-binding.message=Отсутствует привязка для обязательного входного параметра {0} директивы {1}
angular.inspection.missing-required-directive-input-binding.message.component=Отсутствует привязка для обязательного входного параметра {0} компонента {1}
angular.inspection.missing-required-directive-input.name=Отсутствует обязательный входной параметр директивы
angular.inspection.multiple-structural-directives.message=Может быть применена только одна структурная директива
angular.inspection.multiple-structural-directives.name=Несколько структурных директив на одном элементе
angular.inspection.ng-content-with-content.message=Элемент {0} не может иметь содержимого
angular.inspection.ng-content-with-content.name=Содержимое внутри тега <ng-content>
angular.inspection.ng-optimized-image.message.both.fill.attributes.not.allowed=Директива {2} не допускает одновременное использование атрибутов {0} и {1}
angular.inspection.ng-optimized-image.message.both.fill.width.or.height.attributes.not.allowed=Директива {3} не допускает одновременное использование атрибутов {0} и {1} или {2}
angular.inspection.ng-optimized-image.message.both.width.height.attributes.required=Директива {2} требует оба атрибута {0} и {1}
angular.inspection.ng-optimized-image.message.ngsrc.requires.width.height.attributes={0} требует атрибуты {1} и {2}
angular.inspection.ng-optimized-image.message.ngsrc.requires.width.height.or.fill.attributes={0} требует атрибуты {1} и {2} или {3}
angular.inspection.ng-optimized-image.message.use-ngsrc=Используйте {0} (директива {1}) для улучшения производительности
angular.inspection.ng-optimized-image.name=Проблемы с использованием ngSrc в тегах img
angular.inspection.non-standalone-component-imports.message=Только standalone компоненты могут использовать импорты
angular.inspection.non-standalone-component-imports.name=Некорректное использование импортов в не-standalone компонентах
angular.inspection.undefined-binding.message.attribute-directive-out-of-scope=Директива, предоставляющая атрибут {0}, находится вне области видимости текущего шаблона
angular.inspection.undefined-binding.message.banana-box-binding-not-provided=Невозможно привязаться к {0}, так как он не предоставляется ни одной применимой директивой
angular.inspection.undefined-binding.message.embedded.event-not-emitted=Событие {0} не генерируется ни одной применимой директивой во встроенном шаблоне
angular.inspection.undefined-binding.message.embedded.no-directive-matched=Нет директивы, соответствующей атрибуту {0}
angular.inspection.undefined-binding.message.embedded.property-not-provided=Свойство {0} не предоставляется ни одной применимой директивой во встроенном шаблоне
angular.inspection.undefined-binding.message.event-not-emitted=Событие {0} не генерируется ни применимыми директивами, ни элементом {1}
angular.inspection.undefined-binding.message.property-not-provided=Свойство {0} не предоставляется ни применимыми директивами, ни элементом {1}
angular.inspection.undefined-binding.message.unknown-attribute=Атрибут {0} здесь не допускается
angular.inspection.undefined-binding.name=Неопределённая привязка
angular.inspection.undefined-export.message=Невозможно экспортовать {0} из {1}, так как он не объявлен и не импортован в нем
angular.inspection.undefined-export.name=Неопределённый экспорт из Angular модуля
angular.inspection.undefined-tag.message.out-of-scope=Компонент или директива, соответствующая элементу {0}, находится вне области видимости текущего шаблона
angular.inspection.undefined-tag.name=Неопределённый тег
angular.inspection.unresolved-pipe.message=Неразрешённый пайп {0}
angular.inspection.unresolved-pipe.name=Неразрешённый пайп
angular.inspection.unsupported-syntax-inspection.message.ng19-or-above=Ключевое слово {0} поддерживается только в Angular 19 и выше.
angular.inspection.unsupported-syntax-inspection.name=Неподдерживаемый синтаксис выражения Angular
angular.inspection.unused-component-import.declaration.message={0} никогда не используется в шаблоне компонента
angular.inspection.unused-component-import.name=Неиспользуемый импорт в объявлении компонента Angular
angular.inspection.unused-component-import.pseudo-module.message=Ни одно из объявлений, предоставляемых {0}, не используется в шаблоне компонента
angular.inspection.wrong-entity-type.message.not-declarable=Класс {0} не является ни Angular компонентом, ни директивой, ни пайпом
angular.inspection.wrong-entity-type.message.not-entity=Класс {0} не является ни Angular модулем, ни компонентом, ни директивой, ни пайпом
angular.inspection.wrong-entity-type.message.not-importable=Класс {0} не может быть импортован (не является ни Angular модулем, ни standalone декларируемым)
angular.inspection.wrong-entity-type.message.not-standalone={0} не является standalone и не может быть импортован напрямую. Он должен быть импортован через NgModule.
angular.inspection.wrong-entity-type.message.standalone-declarable={0} является standalone и не может быть объявлен в Angular модуле. Возможно, вы хотели его импортовать?
angular.inspection.wrong-entity-type.name=Некорректный импортованный или объявленный символ
angular.intention.category=Angular
angular.intention.introduce.let.variable.name=Добавить переменную @let
angular.intention.introduce.let.variable.title=Извлечь переменную @let
angular.live.template.context.angular=Angular
angular.live.template.context.template=Шаблон
angular.notify.cli.required-package-not-installed=Требуемый пакет '@angular/cli' не установлен.
angular.parse.expression.assignment-in-binding=Выражение привязки не может содержать присваивания
angular.parse.expression.chained-expression-in-binding=Выражение привязки не может содержать цепочки выражений
angular.parse.expression.deferred-time.bad-numeric-format=Допускаются только натуральные числа или десятичные дроби
angular.parse.expression.deferred-time.wrong-time-unit=Поддерживаются только единицы времени 's' и 'ms'
angular.parse.expression.expected-comma=Ожидается ','
angular.parse.expression.expected-eq=Ожидается '\='
angular.parse.expression.expected-identifier-keyword-or-string=Ожидается идентификатор, ключевое слово или строка
angular.parse.expression.expected-identifier-or-keyword=Ожидается идентификатор или ключевое слово
angular.parse.expression.expected-numeric-literal=Ожидается числовой литерал
angular.parse.expression.expected-of=Ожидается 'of'
angular.parse.expression.expected-on-when=Ожидается 'when' или 'on'
angular.parse.expression.expected-on-when-never=Ожидается 'when', 'on' или 'never'
angular.parse.expression.expected-whitespace=Ожидается пробел
angular.parse.expression.pipe-in-action=Выражение действия не может содержать пайпы
angular.parse.expression.pipe-in-host-binding=Выражение привязки хоста не может содержать пайпы
angular.parse.expression.unexpected-token=Неожиданный токен ''{0}''
angular.parse.expression.unexpected-whitespace=Неожиданный пробел
angular.parse.selector.multiple-not=Множественные селекторы в \:not не поддерживаются
angular.parse.selector.nested-not=Вложенный \:not не разрешен в селекторах
angular.parse.template.animation-trigger-missing-phase-value=В выходном событии анимационного триггера (@{0}) отсутствует название фазы (поддерживаются ''start'' или ''done'')
angular.parse.template.animation-trigger-wrong-output-phase=Указанное значение фазы анимации ''{0}'' для ''@{1}'' не поддерживается (используйте ''start'' или ''done'')
angular.parse.template.invalid-icu-message-expected-comma=Неверное ICU сообщение. Ожидается ','.
angular.parse.template.invalid-icu-message-expected-left-brace=Неверное ICU сообщение. Отсутствует '{'.
angular.parse.template.invalid-icu-message-missing-case-value=Неверное ICU сообщение. Отсутствует значение case.
angular.parse.template.invalid-icu-message-missing-right-brace=Неверное ICU сообщение. Отсутствует '}'.
angular.parse.template.let-dash-not-allowed-in-name='-' не разрешен в именах переменных
angular.parse.template.let-only-on-ng-template='let-' поддерживается только для элементов <ng-template>
angular.parse.template.missing-block-closing-rbrace=Неполный блок – отсутствует }
angular.parse.template.missing-block-opening-lbrace=Неполный блок – отсутствует {
angular.parse.template.missing-let-block-closing-semicolon=Неполный блок @let - отсутствует ;
angular.parse.template.ref-var-dash-not-allowed-in-name='-' не разрешен в именах ссылок
angular.parse.template.unexpected-block-closing-rbrace=Неожиданный } – нет соответствующего открывающего блока
angular.parse.template.unterminated-expansion-form=Незавершенная форма расширения
angular.parse.template.unterminated-interpolation=Незавершенная интерполяция
angular.progress.title.auto-importing-angular-directives-on-paste=Автоматический импорт Angular директив при вставке…
angular.quickfix.decorator.add-property.family=Добавить свойство
angular.quickfix.decorator.add-property.name=Добавить свойство ''{0}''
angular.quickfix.decorator.remove-property.family=Удалить свойство
angular.quickfix.decorator.remove-property.name=Удалить свойство ''{0}''
angular.quickfix.json.ng-add.error.cant-run=Невозможно выполнить ''ng add''
angular.quickfix.json.ng-add.family=Выполнить ''ng add''
angular.quickfix.json.ng-add.name.reinstall=Переустановить с помощью ''ng add {0}''
angular.quickfix.json.ng-add.name.run=Выполнить ''ng add {0}''
angular.quickfix.ngmodule.declare.family=Добавить декларацию в модуль
angular.quickfix.ngmodule.declare.name=Объявить {0} в {1}
angular.quickfix.ngmodule.declare.name.choice=Объявить {0} в Angular модуле…
angular.quickfix.ngmodule.declare.select.declarable=Объявить {0}
angular.quickfix.ngmodule.declare.select.module=Объявить {0} в Angular модуле
angular.quickfix.ngmodule.export.family=Экспортовать сущность из модуля
angular.quickfix.ngmodule.export.name=Экспортовать {0}
angular.quickfix.ngmodule.export.select.declarable=Экспортовать {0}
angular.quickfix.ngmodule.import.family=Импортовать Angular модуль
angular.quickfix.ngmodule.import.name=Импортовать {0}
angular.quickfix.ngmodule.import.name.choice=Импортовать Angular сущность…
angular.quickfix.ngmodule.import.select.module=Angular сущность для импорта
angular.quickfix.remove-import.family=Удалить импорт
angular.quickfix.remove-import.name=Удалить импорт ''{0}''
angular.quickfix.standalone.convert-to-non-standalone.family=Сделать декларируемый класс неавтономным
angular.quickfix.standalone.convert-to-non-standalone.name=Сделать {0} неавтономным
angular.quickfix.standalone.convert-to-standalone.family=Сделать декларируемый класс автономным
angular.quickfix.standalone.convert-to-standalone.name=Сделать {0} автономным
angular.quickfix.standalone.move-to-imports.family=Импортовать декларируемый класс
angular.quickfix.standalone.move-to-imports.name=Импортовать {0}
angular.quickfix.template.add-attribute-value.family=Добавить значение атрибута
angular.quickfix.template.add-attribute-value.name=Добавить значение атрибута
angular.quickfix.template.bind-to-event.family=Привязать к событию
angular.quickfix.template.bind-to-event.name=Привязать к событию ({0})
angular.quickfix.template.bind-to-property.family=Привязать к свойству
angular.quickfix.template.bind-to-property.name=Привязать к свойству [{0}]
angular.quickfix.template.covert-to-ng-src.family=Преобразовать в ngSrc
angular.quickfix.template.create-attribute.family=Создать атрибут
angular.quickfix.template.create-attribute.name=Создать атрибут ''{0}''
angular.quickfix.template.create-height-width-attributes.name=Создать атрибуты 'width' и 'height'
angular.quickfix.template.create-input-transformer.family=Создать преобразователь входных данных
angular.quickfix.template.create-input-transformer.std.name=Использовать преобразователь входных данных {0}
angular.quickfix.template.create-input.name=Создать вход ''{0}''
angular.quickfix.template.create-output.name=Создать выход ''{0}''
angular.quickfix.template.create-signal.name=Создать сигнал ''{0}''
angular.quickfix.template.popup.choose-target-class=Выбрать целевой класс
angular.quickfix.template.remove-attribute-value.family=Удалить значение атрибута
angular.quickfix.template.remove-attribute-value.name=Удалить значение атрибута
angular.quickfix.template.remove-tag-content.family=Удалить содержимое тега
angular.quickfix.template.remove-tag-content.name=Удалить содержимое
angular.quickfix.template.rename-attribute.family=Переименовать атрибут
angular.quickfix.template.rename-attribute.name=Переименовать атрибут в ''{0}''
angular.refactor.extractComponent.after-generator-error=Произошла ошибка при модификации файла
angular.refactor.extractComponent.animations=Анимации не поддерживаются
angular.refactor.extractComponent.cli-error=Не удалось создать компонент с помощью Angular CLI
angular.refactor.extractComponent.dialog=Извлечь компонент
angular.refactor.extractComponent.dialog.name=Имя\:
angular.refactor.extractComponent.task=Извлечение компонента
angular.refactor.extractComponent.unexpected-cli-output=Неожиданный вывод Angular CLI
angular.refactor.extractComponent.unsupported-i18n=Синтаксис I18n не поддерживается
angular.refactor.extractComponent.unsupported-multiple-carets=Используйте одиночный курсор
angular.refactor.extractComponent.unsupported-ng-content=Элемент ng-content не поддерживается
angular.refactor.extractComponent.unsupported-selection=Выберите элементы целиком
angular.refactor.selector.invalid.html.attribute.name={0} не является допустимым именем HTML атрибута
angular.refactor.selector.invalid.html.element.name={0} не является допустимым именем HTML элемента
angular.search-scope.template=шаблон
angular.service.name=Angular Language Server
angular.suppress.for-expression=Подавить для выражения
angular.svg.template=Angular SVG шаблон
angular.svg.template.17=Angular SVG шаблон (17+)
angular.svg.template.181=Angular SVG шаблон (18.1+)
description.angularCliAdd.description=Добавить новую зависимость и выполнить связанные схемы 'ng-add'
description.angularCliGenerate.description=Сгенерировать новый код из Angular Schematics
filetype.angular17html.description=Angular HTML шаблон (17+)
filetype.angular17svg.description=Angular SVG шаблон (17+)
filetype.angular181html.description=Angular HTML шаблон (18.1+)
filetype.angular181svg.description=Angular SVG шаблон (18.1+)
filetype.angular2html.description=Angular HTML шаблон
filetype.angular2svg.description=Angular SVG шаблон
livetemplate.description.angular2.a-class=Angular привязка [class]
livetemplate.description.angular2.a-component=Angular компонент
livetemplate.description.angular2.a-component-inline=Angular компонент с встроенным шаблоном
livetemplate.description.angular2.a-component-root=Корневой компонент Angular приложения
livetemplate.description.angular2.a-ctor-skip-self=Конструктор Angular модуля SkipSelf
livetemplate.description.angular2.a-directive=Angular директива
livetemplate.description.angular2.a-formControlName=Angular formControlName
livetemplate.description.angular2.a-formGroup=Angular formGroup
livetemplate.description.angular2.a-formGroupName=Angular formGroupName
livetemplate.description.angular2.a-guard-can-activate=Angular guard CanActivate
livetemplate.description.angular2.a-guard-can-activate-child=Angular guard CanActivateChild
livetemplate.description.angular2.a-guard-can-deactivate=Angular guard CanDeactivate
livetemplate.description.angular2.a-guard-can-load=Angular guard CanLoad
livetemplate.description.angular2.a-http-interceptor=Пустой Angular HttpInterceptor для HttpClient
livetemplate.description.angular2.a-http-interceptor-headers=Angular HttpInterceptor для заголовков HttpClient
livetemplate.description.angular2.a-http-interceptor-logging=Angular HttpInterceptor для логования HttpClient
livetemplate.description.angular2.a-httpclient-get=Angular HttpClient.get
livetemplate.description.angular2.a-injectable-providedin=Angular Injectable ProvidedIn
livetemplate.description.angular2.a-module=Angular модуль
livetemplate.description.angular2.a-module-root=Корневой модуль Angular
livetemplate.description.angular2.a-module-with-routing=Angular модуль с маршрутизацией в одном файле
livetemplate.description.angular2.a-ngClass=Angular ngClass
livetemplate.description.angular2.a-ngFor=Angular *ngFor
livetemplate.description.angular2.a-ngFor-trackBy=Angular *ngFor с trackBy
livetemplate.description.angular2.a-ngForAsync=Angular *ngForAsync
livetemplate.description.angular2.a-ngIf=Angular *ngIf
livetemplate.description.angular2.a-ngIfElse=Angular *ngIfElse
livetemplate.description.angular2.a-ngModel=Angular ngModel
livetemplate.description.angular2.a-ngStyle=Angular ngStyle
livetemplate.description.angular2.a-ngSwitch=Angular ngSwitch
livetemplate.description.angular2.a-ngrx-data-entity-collection-data-service=NgRx Data Entity Collection Data Service
livetemplate.description.angular2.a-ngrx-data-entity-metadata=NgRx Data Entity Metadata
livetemplate.description.angular2.a-ngrx-data-store-module=NgRx Data Store Module
livetemplate.description.angular2.a-output-event=Angular событие @Output и эмиттер
livetemplate.description.angular2.a-pipe=Angular pipe
livetemplate.description.angular2.a-prej=Angular pre debug | json
livetemplate.description.angular2.a-preja=Angular pre debug | async | json
livetemplate.description.angular2.a-preload-strategy=Пользовательская стратегия предзагрузки Angular
livetemplate.description.angular2.a-route-params-subscribe=Angular - подписка на параметры маршрута
livetemplate.description.angular2.a-route-path-404=Angular маршрут 404
livetemplate.description.angular2.a-route-path-default=Маршрут по умолчанию Angular
livetemplate.description.angular2.a-route-path-eager=Angular eager маршрут
livetemplate.description.angular2.a-route-path-lazy=Angular lazy маршрут
livetemplate.description.angular2.a-route-path-with-children=Маршрут Angular с дочерними элементами
livetemplate.description.angular2.a-router-events=События роутера Angular
livetemplate.description.angular2.a-routerLink=Angular routerLink
livetemplate.description.angular2.a-routerLink-param=Angular routerLink с параметром маршрута
livetemplate.description.angular2.a-rxjs-import=RxJs импорт
livetemplate.description.angular2.a-rxjs-operator-import=RxJs импорт
livetemplate.description.angular2.a-select=Элемент управления <select> с ngModel
livetemplate.description.angular2.a-service=Angular сервис
livetemplate.description.angular2.a-service-httpclient=Angular сервис с HttpClient
livetemplate.description.angular2.a-style=Angular привязка [style]
livetemplate.description.angular2.a-subscribe=Angular подписка на observable