AddVariableFix.family.name=Добавить переменную
AddVariableFix.text=Добавить переменную ''{0}''
HCLFileType.description=Файл конфигурации HashiCorp
HCLFindUsagesProvider.type.backend.configuration=Конфигурация бэкенда
HCLFindUsagesProvider.type.data.source=Источник данных
HCLFindUsagesProvider.type.dynamic.iterator=Динамический итератор
HCLFindUsagesProvider.type.for.loop.variable=Переменная цикла for
HCLFindUsagesProvider.type.local.value=Локальное значение
HCLFindUsagesProvider.type.local.values=Локальные значения
HCLFindUsagesProvider.type.module=Модуль
HCLFindUsagesProvider.type.named.block=Блок({0})
HCLFindUsagesProvider.type.output.value=Выходное значение
HCLFindUsagesProvider.type.property=Свойство
HCLFindUsagesProvider.type.provider=Провайдер
HCLFindUsagesProvider.type.resource=Ресурс
HCLFindUsagesProvider.type.terraform.configuration=Конфигурация terraform
HCLFindUsagesProvider.type.untyped.named.element=<Нетипизованный PsiNamedElement {0}>
HCLFindUsagesProvider.type.untyped.non.psi.named.element=<Нетипизованный не-PsiNamedElement {0}>
HCLFindUsagesProvider.type.variable=Входная переменная
HILFileType.description=Файл языка интерполяции HashiCorp
TFExecutor.failed.to.run.notification.text=Не удалось выполнить
TFExecutor.finished.successfully.notification.text=Успешно завершено
TFExecutor.interrupted.notification.text=Прервано
TFExecutor.unknown.error.notification.text=Неизвестная ошибка, подробности в логах
TerraformFileType.description=Файл конфигурации Terraform
action.AddProviderAction.text=Добавить встроенный провайдер ресурсов
action.NewTerraformFile.text=Файл Terraform
action.TFFmtFileAction.description=Форматовать выбранные файлы с помощью утилиты 'terraform fmt'
action.TFFmtFileAction.text=Переформатовать с помощью terraform fmt
action.TFGenerateLocalMetadataAction.description=Сгенерировать метаданные провайдера с помощью команды `terraform providers schema -json`
action.TFGenerateLocalMetadataAction.text=Сгенерировать метаданные провайдера
action.TFInitAction.description=Запустить утилиту 'terraform init'
action.TFInitAction.text=Инициализовать
action.TFInitRequiredAction.description=Запустить 'terraform init' для правильной инициализации рабочей директории
action.TFInitRequiredAction.text=Запустить Terraform init
action.Terraform.InstallTerraform.description=Скачать и установить последнюю стабильную версию Terraform
action.Terraform.InstallTerraform.text=Установить Terraform
action.TfApplyConfigAction.description=Создать или обновить инфраструктуру
action.TfApplyConfigAction.text=Terraform Apply
action.TfDestroyConfigAction.description=Уничтожить ранее созданную инфраструктуру
action.TfDestroyConfigAction.text=Terraform Destroy
action.TfInitConfigAction.description=Инициализовать рабочую директорию Terraform
action.TfInitConfigAction.text=Terraform Init
action.TfPlanConfigAction.description=Показать необходимые изменения для текущей конфигурации
action.TfPlanConfigAction.text=Terraform Plan
action.TfValidateConfigAction.description=Проверить корректность конфигурации
action.TfValidateConfigAction.text=Terraform Validate
action.create.terraform.file=Создать файл Terraform {0}
action.create.terraform.file.title=Новый файл Terraform
action.new.empty.terraform.file.description=Пустой файл
action.new.outputs.terraform.file.description=Выходные данные
action.new.template.terraform.file.description=Основной
action.new.variables.terraform.file.description=Переменные
advanced.setting.org.intellij.terraform.code.vision.usages.limit=Максимальное количество использований во встроенных подсказках
advanced.setting.org.intellij.terraform.config.build.metadata.auto=Автоматически создавать локальные метаданные
advanced.setting.org.intellij.terraform.config.build.metadata.eagerly=Создавать локальные метаданные заранее
advanced.setting.org.intellij.terraform.config.documentation.download=Автоматически загружать документацию Terraform
advanced.setting.org.intellij.terraform.config.variables.deep.search=Глубокий поиск переменных
advanced.setting.org.intellij.terraform.variables.search.fallback=Резервный поиск переменных
advanced.setting.terraform=Terraform
binary.installation.calculating.hash.progress.title=Вычисление контрольной суммы загруженного бинарного файла...
binary.installation.download.failed=Не удалось загрузить {0}
binary.installation.downloading.binary.progress.title=Загрузка бинарного файла из ''{0}''...
binary.installation.failed=Установка бинарного файла не удалась
binary.installation.make.executable.failed=Не удалось сделать ''{0}'' исполняемым
binary.installation.move.to.installation.dir=Перемещение бинарного файла в ''{0}''
binary.installation.move.to.installation.dir.failed=Не удалось переместить бинарный файл в директорию установки\: ''{0}''
binary.installation.progress.title=Установка бинарного файла...
binary.installation.search.failed=Не найден загруженный бинарный файл с ожидаемым именем\: ''{0}''
binary.installation.succeeded=Бинарный файл ''{0}'' успешно установлен в ''{1}''
binary.installation.verification.failed=Не удалось проверить загрузку. Ожидаемая контрольная сумма не совпадает с фактической
block.name.validness.inspection.add.name.quick.fix.name=Добавить элемент имени
block.name.validness.inspection.block.name.should.not.be.empty.error.message=Имя блока не должно быть пустым
block.name.validness.inspection.display.name=Некорректное имя блока
block.name.validness.inspection.extra.block.name.error.message=Слишком много элементов имени блока
block.name.validness.inspection.invalid.name.error.message=Имя должно начинаться с буквы или подчеркивания и может содержать только буквы, цифры, подчеркивания и дефисы
block.name.validness.inspection.missing.block.name.error.message=Требуется еще {0} элементов имени
block.name.validness.inspection.remove.name.quick.fix.name=Удалить лишний элемент имени
block.name.validness.inspection.rename.block.quick.fix.name=Переименовать
code.style.align.properties.title=Выравнивать свойства
code.style.code.conventions.group.name=Соглашения о коде
code.style.formatting.options.group.name=Параметры форматования
code.style.line.commenter.character.title=Символ однострочного комментария
code.style.run.tf.fmt.comment=При вызове действия "Переформатовать файл" будет использоваться 'terraform fmt' вместо форматтера плагина. Обратите внимание, что 'terraform fmt' поддерживает только файлы .tf, .tfvars и .tftest.hcl.
code.style.run.tf.fmt.group.name=Terraform fmt
code.style.run.tf.fmt.title=При выполнении действия "Переформатовать файл"
conflicting.resource.property.inspection.display.name=Конфликтующие свойства
conflicting.resource.property.inspection.error.message=Конфликтует с\: {0}
deprecated.element.inspection.deprecated.block.error.message=Устаревший блок\: {0}{2, choice, 0\#\: {1}|1\#}
deprecated.element.inspection.deprecated.property.error.message=Устаревшее свойство\: {0}{2, choice, 0\#\: {1}|1\#}
deprecated.element.inspection.display.name=Устаревшие блоки/свойства
dialog.message.failed.to.get.output.terraform.providers.command.for=Не удалось получить вывод команды `terraform providers` для {0}, код выхода {1}
disable.deep.variable.search=Отключить поиск переменных во вложенных директориях
documentation.for.0.1.on.terraform.website=Документация для {0}{1} на сайте Terraform
duplicated.block.property.inspection.display.name=Дублирующиеся свойства
duplicated.block.property.inspection.duplicate.property.error.message=Свойство ''{0}'' объявлено несколько раз в одном блоке
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name=Перейти к {0} дубликату
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name.first=первому
duplicated.inspection.base.show.other.duplicates.quick.fix.name=Показать все похожие дубликаты
duplicated.output.inspection.delete.output.quick.fix.name=Удалить выходные данные
duplicated.output.inspection.display.name=Дублирующиеся выходные данные
duplicated.output.inspection.output.declared.multiple.times.error.message=Выходные данные ''{0}'' объявлены несколько раз
duplicated.output.inspection.rename.output.quick.fix=Переименовать выходные данные
duplicated.provider.inspection.display.name=Дублирующиеся провайдеры
duplicated.provider.inspection.display.name.add.provider.alias.quick.fix.name=Добавить псевдоним провайдера
duplicated.provider.inspection.display.name.change.provider.alias.quick.fix.name=Изменить псевдоним провайдера
duplicated.provider.inspection.display.name.multiple.declaration.error.message=Провайдер ''{0}'' объявлен несколько раз
duplicated.variable.inspection.delete.variable.quick.fix.name=Удалить переменную
duplicated.variable.inspection.display.name=Дублирующиеся переменные
duplicated.variable.inspection.multiple.declaration.error.message=Переменная ''{0}'' объявлена несколько раз
duplicated.variable.inspection.rename.variable.quick.fix.name=Переименовать переменную
group.TFTools.description=Внешние инструменты Terraform
group.TFTools.text=Инструменты Terraform
group.TfRunConfigurationActions.description=Управление и запуск конфигураций Terraform в проекте
group.TfRunConfigurationActions.text=Конфигурации запуска Terraform
hcl.code.style.settings.arrays=Массивы
hcl.code.style.settings.braces=Фигурные скобки
hcl.code.style.settings.equals=Знаки равенства
hcl.code.style.settings.objects=Объекты
hcl.color.settings.block.first.type=Блоки//Первый тип блока
hcl.color.settings.block.name=Блоки//Имя блока
hcl.color.settings.block.only.name.type=Блоки//Блок только с типом
hcl.color.settings.block.other.types=Блоки//Другие типы блоков
hcl.color.settings.block.second.type=Блоки//Второй тип блока
hcl.color.settings.braces.and.operators.braces=Скобки и операторы//Фигурные скобки
hcl.color.settings.braces.and.operators.brackets=Скобки и операторы//Квадратные скобки
hcl.color.settings.braces.and.operators.comma=Скобки и операторы//Запятая
hcl.color.settings.braces.and.operators.operation.sign=Скобки и операторы//Знак операции
hcl.color.settings.comments.block.comment=Комментарии//Блочный комментарий
hcl.color.settings.comments.line.comment=Комментарии//Строчный комментарий
hcl.color.settings.identifier=Идентификатор
hcl.color.settings.keyword=Ключевое слово
hcl.color.settings.number=Число
hcl.color.settings.property.name=Имя свойства
hcl.color.settings.string.invalid.escape.sequence=Строки//Неверная escape-последовательность
hcl.color.settings.string.text=Строки//Текст строки
hcl.color.settings.string.valid.escape.sequence=Строки//Верная escape-последовательность
hcl.literal.annotator.block.name.identifier=Идентификатор имени блока
hcl.literal.annotator.block.only.name.identifier=Идентификатор блока только с именем
hcl.literal.annotator.block.type.1.element=Элемент типа блока 1
hcl.literal.annotator.block.type.2.element=Элемент типа блока 2
hcl.literal.annotator.block.type.3.element=Элемент типа блока 3+
hcl.literal.annotator.property.key=Ключ свойства
hcl.literal.inspection.add.closing.quote.quick.fix.text=Добавить закрывающую кавычку
hcl.literal.inspection.argument.names.must.not.be.quoted=Имена аргументов не должны быть в кавычках
hcl.literal.inspection.display.name=Некорректные строковые и числовые литералы
hcl.literal.inspection.illegal.escape.sequence=Недопустимая escape-последовательность
hcl.literal.inspection.illegal.hex.escape.sequence=Недопустимая шестнадцатеричная escape-последовательность
hcl.literal.inspection.illegal.number.literal=Недопустимый числовой литерал
hcl.literal.inspection.illegal.octal.escape.sequence=Недопустимая восьмеричная escape-последовательность
hcl.literal.inspection.illegal.unicode.escape.sequence=Недопустимая Unicode escape-последовательность
hcl.literal.inspection.invalid.quotes=В файлах Terraform следует использовать двойные кавычки
hcl.literal.inspection.missing.closing.quote=Отсутствует закрывающая кавычка
hcl.literal.inspection.replace.quotes.quick.fix.text=Заменить на двойные кавычки
hcl.simplify.expression.inspection.could.be.replaced.with.list.indexing.message=Может быть заменено на индексацию списка (возможно изменение семантики)
hcl.simplify.expression.inspection.display.name=Неоптимальное выражение
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.family.name=Упростить выражение
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.text=Заменить на индексацию списка
hil.color.settings.braces.operators.braces=Скобки и операторы//Фигурные скобки
hil.color.settings.braces.operators.brackets=Скобки и операторы//Квадратные скобки
hil.color.settings.braces.operators.comma=Скобки и операторы//Запятая
hil.color.settings.braces.operators.dot=Скобки и операторы//Точка
hil.color.settings.braces.operators.operation.sign=Скобки и операторы//Знак операции
hil.color.settings.braces.operators.parentheses=Скобки и операторы//Круглые скобки
hil.color.settings.identifier=Идентификатор
hil.color.settings.invalid.escape.sequence=Неверная escape-последовательность
hil.color.settings.keyword=Ключевое слово
hil.color.settings.number=Число
hil.color.settings.predefined.scope=Предопределённая область видимости
hil.color.settings.property.reference=Ссылка на свойство
hil.color.settings.resource.instance.reference=Ссылка на экземпляр ресурса
hil.color.settings.resource.type.reference=Ссылка на тип ресурса
hil.color.settings.string=Строка
hil.color.settings.template.background=Фон шаблонного сегмента
hil.color.settings.valid.escape.sequence=Верная escape-последовательность
hil.convert.to.hcl.inspection.convert.to.hcl2.quick.fix.text=Преобразовать в выражение HCL2
hil.convert.to.hcl.inspection.display.name=HIL выражение может быть преобразовано в HCL2
hil.convert.to.hcl.inspection.interpolation.could.be.replaced.with.hcl2.message=Интерполяция может быть заменена выражением HCL2
hil.inplace.variable.introducer.title=Ввести переменную
hil.introduce.variable.handler.dialog.caption=Ввести переменную
hil.literal.annotator.unwrap.string.quick.fix.text=Преобразовать в идентификатор
hil.operation.types.mismatch.inspection.boolean.expected.error.message=Ожидается логическое значение, а не {0}
hil.operation.types.mismatch.inspection.boolean.or.string.expected.error.message=Условие должно быть логическим значением или строкой, содержащей логическое значение
hil.operation.types.mismatch.inspection.both.branches.must.have.same.type.error.message=Обе ветви должны иметь одинаковый тип. ''then'' имеет тип {0}, ''else'' имеет тип {1}
hil.operation.types.mismatch.inspection.display.name=Несоответствие типов операндов
hil.operation.types.mismatch.inspection.number.expected.error.message=Ожидается число, а не {0}
hil.scope.not.available.in.context.inspection.display.name=Недоступная область видимости
hil.scope.not.available.in.context.inspection.illegal.self.use.message=Ссылка на 'self' разрешена только внутри блоков 'provisioner' и 'connection' в определении ресурса
hil.unknown.resource.type.inspection.display.name=Ссылка на неизвестный тип ресурса
hil.unknown.resource.type.inspection.unknown.resource.type.error.message=Неизвестный тип ресурса
hil.unresolved.reference.inspection.display.name=Неразрешённая ссылка
hil.unresolved.reference.inspection.unresolved.reference.error.message=Неразрешённая ссылка {0}
hil.variable.annotator.expanded.function.argument.must.be.immediately.followed.by.closing.parentheses=За развернутым аргументом функции должна следовать закрывающая скобка
hil.variable.annotator.expression.start.expected=Ожидается начало выражения
illegal.interpolations.inspection.depends.on.error.message=Интерполяция не разрешена в {0}
illegal.interpolations.inspection.display.name=Недопустимая интерполяция
illegal.interpolations.inspection.in.variable.error.message=Интерполяция не разрешена в переменных
illegal.interpolations.inspection.no.double.quotes.error.message=Источник модуля должен быть строкой в двойных кавычках
illegal.interpolations.inspection.no.function.calls.error.message=Требуется только статическая ссылка на переменную\: только доступ к свойствам и индексация с константными ключами (без вычислений, вызовов функций, шаблонных выражений и т.д.)
incorrect.variable.type.inspection.change.type.quick.fix.name=Изменить тип переменной на {0}
incorrect.variable.type.inspection.display.name=Некорректный тип переменной
incorrect.variable.type.inspection.legacy.variable.error.message=Некорректный тип переменной в ''старом формате'' (до Terraform 0.12), должен быть {0}
incorrect.variable.type.inspection.type.mismatch.error.message=Тип значения переменной ''{0}'' не соответствует типу значения по умолчанию ''{1}''
incorrect.variable.type.inspection.type.mismatch.simplified.error.message=Тип значения переменной не соответствует типу значения по умолчанию ''{0}''
inspection.possible.template.add.association.fix.name=Рассматривать как шаблон Terraform
inspection.possible.template.group.name=Шаблоны Terraform
inspection.possible.template.ignore.association.fix.name=Закрыть
inspection.possible.template.name=Возможный файл шаблона
inspection.possible.template.remove.association.fix.name=Перестать рассматривать как шаблон Terraform
inspection.suppressor.suppress.for.element.action.name=Подавить для {0}
inspection.suppressor.suppress.for.property.action.name=Подавить для свойства
inspection.unselected.data.language.name=Не выбран язык данных шаблона
introduce.dialogs.replace.all.checkbox.title={0} ({1} совпадений)
introduce.variable.title=Ввести переменную
label.runs.terraform.fmt="Запустить `terraform fmt` для конфигурационных файлов Terraform HCL"
live.template.context.name=Контекст шаблона Terraform (.tftpl)
missing.module.inspection.display.name=Неразрешённый модуль
missing.module.inspection.missing.module.error.message=Не удаётся найти модуль локально\: {0}
missing.module.inspection.run.terraform.get.quick.fix.failure.message=Не удалось выполнить ''{1} get''\: {0}
missing.module.inspection.run.terraform.get.quick.fix.failure.title=Не удалось получить модуль {0}
missing.module.inspection.run.terraform.get.quick.fix.family.name=Выполнить ''{0} get''
missing.module.inspection.run.terraform.get.quick.fix.name=Выполнить ''{1} get'' в {0}
missing.resource.property.inspection.add.properties.quick.fix.name=Добавить отсутствующие свойства
missing.resource.property.inspection.display.name=Отсутствуют обязательные свойства
missing.resource.property.inspection.required.properties.error.message=Отсутствуют обязательные свойства\: {0}
module.detection.error.failed.parse.modules.json=Не удалось разобрать .terraform/modules/modules.json, выполните `{0} get` повторно
module.detection.error.name.not.defined=Имя модуля не определено
module.detection.error.no.containing.directory=Файл `{0}` не имеет содержащей директории
module.detection.error.no.dir.found=.terraform не найден в директории проекта, выполните `{0} get` в нужном месте
module.detection.error.no.module.dir.found=Директория модуля не найдена в `{0}/.terraform/modules`
module.detection.error.no.module.source=Не удаётся получить источник модуля
module.detection.error.no.modules.json.found=modules/modules.json не найден в директории .terraform, выполните `{0} get` в нужном месте
module.detection.error.no.path.found=Путь `.terraform/{0}` не найден в модуле, выполните `{1} get`, или мы находимся в неиспользуемом модуле, например поддиректории модуля
module.detection.error.no.psi.dir=PsiDirectory не найден для {0}
module.detection.error.no.relative.dir.in.manifest=Относительная директория `{0}` не найдена в `{1}`
module.detection.error.no.relative.path.found=Путь `{0}` не найден в модуле, выполните `{1} get`, или мы находимся в неиспользуемом модуле, например поддиректории модуля
module.detection.error.no.source.property="Отсутствует свойство 'source'"
not.initialized.inspection.display.name=Terraform не инициализован
not.initialized.inspection.error.message=Рабочая директория Terraform не инициализована
notification.content.cannot.find.directory=Не удаётся найти директорию {0}
notification.content.local.model.has.been.generated.successfully=Локальная модель успешно сгенерирована
notification.content.terraform.init.failed={0} init завершился с ошибкой
notification.content.terraform.init.succeed={0} успешно инициализован
notification.content.there.no.terraform.lock.hcl.found.please.run.terraform.init='.terraform.lock.hcl' не найден, выполните 'terraform init'
notification.group.terraform.execution=Выполнение Terraform завершено
notification.title.cant.generate.model=Не удаётся сгенерировать модель
opentofu.display.name=OpenTofu
opentofu.files.inspection.group.display.name=OpenTofu
opentofu.filetype.description=Конфигурационный файл OpenTofu
opentofu.key_provider.aws_kms.key_spec.description=Key spec - это свойство, представляющее конфигурацию шифрования ключа. Значение key spec зависит от типа ключа.
opentofu.key_provider.aws_kms.kms_key_id.description=Идентификатор ключа, например имя вашего KMS ключа.
opentofu.key_provider.gcp_kms.key_length.description=Длина генерируемого ключа в байтах, от {0} до {1} байт.
opentofu.key_provider.gcp_kms.kms_encryption_key.description=Cloud KMS ключ - это именованный объект, содержащий одну или несколько версий ключа и метаданные ключа. Ключ существует только в одном keyring, привязанном к определённому расположению.
opentofu.key_provider.pbkdf2.hash_function.description=Хэш-функция, sha256 или sha512
opentofu.key_provider.pbkdf2.iterations.description=Количество итераций, от 200,000 до 600,000
opentofu.key_provider.pbkdf2.key_length.description=Длина генерируемого ключа в байтах, от {0} до {1} байт
opentofu.key_provider.pbkdf2.passphrase.description=Длинная и сложная парольная фраза, минимум 16 символов
opentofu.key_provider.pbkdf2.salt_length.description=Длина соли для генерации ключа от 1 до 32 байтов
opentofu.name=OpenTofu
opentofu.unknown.encryption.method.inspection.display.name=Неизвестный метод шифрования
opentofu.unknown.encryption.method.inspection.message=Неизвестный метод шифрования\: {0}
opentofu.unknown.key.provider.inspection.display.name=Неизвестный провайдер ключей шифрования
opentofu.unknown.key.provider.inspection.message=Неизвестный провайдер ключей шифрования\: {0}
parsing.error.empty.tags.not.allowed=Пустые теги не разрешены
parsing.error.recover.to.token=Ожидался токен {0}, получен {1}
popup.advertisement.press.to.show.partner.community.providers=Нажмите {0} для отображения партнерских и community провайдеров
popup.content.could.not.find.bundled.provider.for=Не найден встроенный провайдер {0} "<b>{1}</b>"<p>См. <a href\="https\://registry.terraform.io/search/providers?q\={2}" target\="_blank">Terraform Registry</a> для информации о провайдерах</p>
progress.text.loading.documentation=Загрузка документации
progress.title.adding.required.properties=Добавление обязательных свойств
progress.title.detecting.terraform.executable=Определение исполняемого файла Terraform…
progress.title.opening.terraform.documentation=Открытие документации Terraform
progress.title.removing.unused.metadata=Удаление неиспользуемых метаданных
progress.title.terraform.init=Инициализация рабочей директории
rebuilding.local.schema=Перестройка локальной схемы
refactoring.introduce.anchor.error=Не удаётся найти позицию для результата
refactoring.introduce.error=Ошибка введения
refactoring.introduce.name.error=Некорректное имя
refactoring.introduce.selection.error=Невозможно выполнить рефакторинг с выбранным элементом
refactoring.introduce.variable.scope.error=Имя конфликтует с именем существующей переменной
run.configuration.no.terraform.specified=Путь к исполняемому файлу Terraform не задан
run.configuration.no.working.directory.specified=Рабочая директория не указана
run.configuration.terraform.path.incorrect=Не удаётся найти исполняемый файл Terraform по указанному пути\:<br>{0}
run.configuration.terraform.path.title=Ошибка пути к исполняемому файлу Terraform
terraform.add.provider.dialog.title=Добавить {0}
terraform.add.required.properties.command.name=Добавить обязательные свойства
terraform.configuration.type.description=Запустить Terraform с указанными параметрами
terraform.display.name=Terraform
terraform.doc.argument.0.1=Аргумент {0}.{1}
terraform.doc.argument.0.1.br.2=Аргумент "<b>{0}.{1}</b>"<br>{2}
terraform.doc.block.0.br.1=Блок <b>{0}</b><br>{1}
terraform.doc.block.type.0={0} {1}
terraform.doc.block.type.0.br.1=Тип блока <b>{0}</b><br>{1}
terraform.doc.data.source.0.of.type.1=Data source "{0}" типа {1}
terraform.doc.generic.block=Блок
terraform.doc.hcl.datasource.0.of.type.1=Data source "<b>{0}</b>" типа <b>{1}</b><br> {2}
terraform.doc.hcl.output.0.of.type.1=Output "<b>{0}</b>"<br>{1}
terraform.doc.hcl.provider.0.of.type.1=Provider "<b>{0}</b>"<br>{1}
terraform.doc.hcl.resource.0.of.type.1=Resource "<b>{0}</b>" типа <b>{1}</b><br> {2}
terraform.doc.input.variable.0=Input variable "{0}"
terraform.doc.label.local.value.0=Local value {0}
terraform.doc.local.value.0=Local value {0}
terraform.doc.local.values=Local values
terraform.doc.module.0=Module "{0}"
terraform.doc.output.value.0=Output value "{0}"
terraform.doc.property.0=Property {0}
terraform.doc.property.0.1.br.2=<p>Property <b>{0}</b> ({1})</p>{2}
terraform.doc.provider.0=Provider "{0}"
terraform.doc.resource.0.of.type.1=Resource "{0}" типа {1}
terraform.doc.terraform.configuration=Terraform configuration
terraform.doc.variable.0.1.2.3=<p>Variable <b>{0}</b></p> {1} {2} {3}
terraform.documentation.download.enabled=Разрешить автоматическую загрузку документации Terraform. Если отключено, будут использоваться встроенные метаданные для описаний.
terraform.edit.configurations.action.text=Редактировать конфигурации…
terraform.executable.macro.description=Путь к исполняемому файлу Terraform
terraform.files.duplicates.inspection.group.display.name=Дубликаты
terraform.files.inspection.group.display.name=Terraform
terraform.fmt.commit.error.message=Не удалось применить 'terraform fmt' к выбранным файлам
terraform.formatter.error.message=Не удалось выполнить `{1} fmt` для {0}
terraform.formatter.error.title=Ошибка `{} fmt`
terraform.inlay.hints.indefinite.usages.text=неограниченное количество использований
terraform.inlay.hints.usages.text={0,choice, 0\#не используется|1\#1 использование|2\#{0,number}'{1,choice, |1\#+}' использований}
terraform.metadata.build.auto=Автоматически строить локальные метаданные Terraform, запуская `terraform providers schema -json` для каждого инициализованного проекта.
terraform.metadata.build.eagerly=Если включено, локальные метаданные будут перестраиваться при изменении или добавлении любых связанных файлов в проект. Если отключено, метаданные будут строиться только по запросу.
terraform.name=Terraform
terraform.name.lowercase=terraform
terraform.open.settings=Открыть настройки
terraform.opentofu.settings.label=Terraform и OpenTofu
terraform.run.configuration.apply.name.suffix=apply
terraform.run.configuration.arguments.empty.validation.text=При выборе "Custom" поле "Program arguments" не должно быть пустым. Укажите действительную команду или опции Terraform
terraform.run.configuration.arguments.label=Program arguments\:
terraform.run.configuration.command.combobox.none.item=Custom
terraform.run.configuration.command.label=Command\:
terraform.run.configuration.destroy.name.suffix=destroy
terraform.run.configuration.init.name.suffix=init
terraform.run.configuration.name=Terraform Run
terraform.run.configuration.plan.name.suffix=plan
terraform.run.configuration.validate.name.suffix=validate
terraform.run.text=Запустить Terraform
terraform.template.file.type=Файл шаблона Terraform
terraform.variables.deep.search=Если включено, переменные будут искаться во вложенных директориях. Если отключено, поиск будет только в текущей директории
terraform.variables.search.fallback=Если включено, будет использоваться старая стратегия поиска переменных (до версии 2024.3)
tftpl.external.variable.title=Внешняя переменная
tftpl.loop.variable.title=Переменная цикла
tfvars.unsupported.element.inspection.convert.to.double.quoted.string.quick.fix.name=Преобразовать в строку с двойными кавычками
tfvars.unsupported.element.inspection.display.name=Некорректное содержимое .tfvars
tfvars.unsupported.element.inspection.illegal.value.type.error.message=Значение свойства должно быть числом, строкой в двойных кавычках, списком или объектом
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message=Некорректный тип значения переменной. Должен быть {0}
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message.string.expected=простое значение (строка или число)
tfvars.unsupported.element.inspection.no.quotes.in.argument.name.error.message=Имя аргумента не должно быть в кавычках
tfvars.unsupported.element.inspection.only.key.values.allowed.error.message=Разрешены только элементы вида 'key\=value'
tfvars.unsupported.element.inspection.undefined.variable.error.message=Неопределённая переменная ''{0}''
tool.detectAndTestButton.text=Определить и протестовать
tool.executor.invalid.path=Указанный путь не существует
tool.executor.unrecognized.version=Неопознанная версия {0}
tool.executor.version=Получение версии {0}
tool.format.display={0} fmt
tool.installButton.text=Установить
tool.settings.executable.path.label=Путь к исполняемому файлу {0}\:
tool.testButton.text=Тест
tool.testResultLabel.download.progress.title=Загрузка {0}…
tool.testResultLabel.installed={0} установлен
tool.testResultLabel.not.found={0} не найден
tool.testResultLabel.not.installed=Не удалось установить {0}
tool.testResultLabel.progressTitle=Тестование…
type.specification.validator.block.not.allowed.error.message=Блоки не разрешены, разрешены только свойства
type.specification.validator.collection.argument.required.error.message=Конструктор типа {0} требует аргумент, указывающий тип элементов
type.specification.validator.exact.type.required.error.message=Ключевое слово {0} не может быть использовано в этой спецификации типа\: требуется точный тип
type.specification.validator.illegal.type.specification.error.message=Спецификация типа может быть ключевым словом примитивного типа (bool, number, string) или вызовом конструктора сложного типа, например list(string)
type.specification.validator.invalid.type.constructor.error.message=Ключевое слово {0} не является допустимым конструктором типа
type.specification.validator.invalid.type.specification.error.message=Ключевое слово {0} не является допустимой спецификацией типа
type.specification.validator.no.argument.expected.error.message=Ключевое слово примитивного типа {0} не должно иметь аргументов
type.specification.validator.object.argument.map.required.error.message=Конструктор типа object требует map с именами атрибутов в качестве ключей и их типами в качестве значений
type.specification.validator.object.argument.required.error.message=Конструктор типа object требует аргумент, указывающий типы атрибутов и значений в виде map
type.specification.validator.object.constructor.map.keys.must.be.attribute.names.error.message=Ключи map конструктора object должны быть именами атрибутов
type.specification.validator.optional.argument.required.error.message=Конструктор типа optional требует один или два аргумента, указывающих тип элемента и значение по умолчанию
type.specification.validator.tuple.argument.required.error.message=Конструктор типа tuple требует аргумент, указывающий типы элементов в виде списка
unknown.block.0=Неизвестный блок {0}
unknown.block.type.inspection.add.closing.brace.quick.fix.test=Добавить закрывающую фигурную скобку перед элементом
unknown.block.type.inspection.display.name=Неизвестный тип блока
unknown.block.type.inspection.missing.closing.brace.error.message=Отсутствует закрывающая фигурная скобка в предыдущей строке
unknown.block.type.inspection.quick.fix.name=Удалить неизвестный блок
unknown.block.type.inspection.unknown.block.type.error.message=Неизвестный тип блока {0}
unknown.property.in.block.inspection.display.name=Неизвестное свойство
unknown.property.in.block.inspection.error.message=Неизвестное свойство {0}
unknown.property.in.block.inspection.quick.fix.name=Удалить неизвестное свойство
unknown.resource.identifier.for.known.provider=Для провайдера "{2}" не определен {0} "{1}"
unknown.resource.identifier.inspection.display.name=Неизвестный тип ресурса
unknown.resource.identifier.inspection.error.message=Неизвестный {0}\: "{1}"
unused.data.source.inspection.error.message=Data source ''{0}'' никогда не используется
unused.data.source.inspection.quick.fix.name=Удалить неиспользуемый data source
unused.local.inspection.display.name=Неиспользуемый элемент
unused.local.inspection.error.message=Local ''{0}'' никогда не используется
unused.local.inspection.quick.fix.name=Удалить неиспользуемый local
unused.variable.inspection.error.message=Переменная ''{0}'' никогда не используется
unused.variable.inspection.quick.fix.name=Удалить неиспользуемую переменную