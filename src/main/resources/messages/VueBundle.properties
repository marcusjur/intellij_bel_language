action.CreateVueSingleFileComp.description=Создает файл Vue компонента
action.CreateVueSingleFileComp.text=Vue компонент
action.VueExtractComponentAction.description=Извлекает выбранную часть Vue.js шаблона в новый однофайловый компонент, передает используемые данные и методы через props
action.VueExtractComponentAction.text=Извлечь Vue компонент
nuxt.support.notification.contents=Для улучшения автодополнения кода добавьте @nuxt/types в зависимости проекта
nuxt.support.notification.title=Поддержка Nuxt.js
options.indent.label.top-level.caption=Отступ для дочерних элементов корневого тега\:
options.indent.radio.block-specific.caption=В соответствии с языком в блоке
options.indent.radio.block-specific.tooltip=Отступы в блоках <template>, <script> и <style> будут установлены в соответствии с настройками стиля кода для используемого языка. Например, для <style lang\='scss'> будут использоваться отступы, заданные в SCSS
options.indent.radio.uniform.caption=Одинаковые во всем файле
vue.command.name.auto-import-external-symbols=Автоимпорт внешних символов
vue.command.name.auto-import-vue-components=Автоимпорт Vue компонентов
vue.configurable.service.auto=Авто
vue.configurable.service.auto.help=Выберите эту опцию, чтобы включить Vue Language Server (в режиме Takeover) при возможности. Внутренние проверки ИСР будут по-прежнему использоваться.
vue.configurable.service.disabled=Отключено
vue.configurable.service.disabled.help=Выберите эту опцию, чтобы отключить оба языковых сервиса. Будут использоваться только внутренние проверки ИСР.
vue.configurable.service.group=Vue сервис
vue.configurable.service.languageServerPackage=Vue Language Server\:
vue.configurable.service.ts=Классический TypeScript сервис
vue.configurable.service.ts.help=Выберите эту опцию, чтобы принудительно включить классическую интеграцию с TypeScript сервисом для Vue файлов. Поскольку она не работает для TypeScript версии 5.0 и выше, в таких случаях будут использоваться внутренние проверки ИСР.
vue.configurable.title=Vue
vue.create.single.file.component.action.dialog.title=Новый {0}
vue.create.single.file.component.action.name=Создать файл Vue компонента ''{0}''
vue.create.single.file.component.template.class.api=Class API
vue.create.single.file.component.template.composition.api=Composition API
vue.create.single.file.component.template.options.api=Options API
vue.documentation.section.argument=Аргумент\:
vue.documentation.section.default=По умолчанию\:
vue.documentation.section.library=Библиотека\:
vue.documentation.section.pattern=Шаблон\:
vue.documentation.section.required=Обязательно
vue.documentation.section.slot.scope=Область видимости
vue.documentation.type.component=компонент
vue.documentation.type.component.computed.property=вычисляемое свойство компонента
vue.documentation.type.component.data.property=свойство данных компонента
vue.documentation.type.component.event=событие компонента
vue.documentation.type.component.method=метод компонента
vue.documentation.type.component.property=свойство компонента
vue.documentation.type.directive=директива
vue.documentation.type.directive.argument=аргумент директивы
vue.documentation.type.directive.modifier=модификатор директивы
vue.documentation.type.filter=фильтр
vue.documentation.type.functional.component=функциональный компонент
vue.documentation.type.slot=слот
vue.documentation.vue=Vue
vue.inspection.display.name.data.function=Функция данных
vue.inspection.display.name.deprecated.symbol=Устаревший символ
vue.inspection.display.name.duplicate.tag=Дублирующийся тег template/script
vue.inspection.display.name.missing.component.import=Отсутствует импорт компонента
vue.inspection.display.name.unrecognized.directive=Неопознанная директива
vue.inspection.display.name.unrecognized.slot=Неопознанный слот
vue.inspection.group.name=Vue
vue.inspection.message.attribute.does.not.accept.value={0} не принимает значений
vue.inspection.message.data.property.should.be.function=Свойство data должно быть функцией
vue.inspection.message.duplicate.tag=Дублирующийся корневой тег {0}
vue.inspection.message.filter.function.with.no.args=Функция фильтра должна принимать как минимум один аргумент
vue.inspection.message.filter.invalid.number.of.arguments=Неверное количество аргументов фильтра, ожидается {0}
vue.inspection.message.missing.component.import=Компонент {0} не импортован
vue.inspection.message.unresolved.filter=Неразрешённый фильтр {0}
vue.live.template.context.component=Vue компонент
vue.live.template.context.script.tag=Содержимое тега script Vue
vue.live.template.context.template=Vue шаблон
vue.live.template.context.template.tag.element=Элемент тега шаблона Vue
vue.live.template.context.top.level=Корневой элемент Vue
vue.param.hints.show.names.for.filters=Аргументы фильтра
vue.parser.message.expected.comma.or.end.of.expression=Ожидается запятая или конец выражения
vue.parser.message.expected.end.of.expression=Ожидается конец выражения
vue.parser.message.expected.identifier.or.string=Ожидается идентификатор или строка
vue.parser.message.expected.in.or.of=Ожидается 'in' или 'of'
vue.parser.message.expected.lparen.pipe.or.end.of.expression=Ожидается (, | или конец выражения
vue.parser.message.expected.pipe.or.end.of.expression=Ожидается | или конец выражения
vue.parser.message.generic.component.parameters.only.with.typescript=Параметры generic-компонентов поддерживаются только в TypeScript.
vue.parser.message.statements.not.allowed=Операторы не разрешены в выражениях Vue
vue.parser.message.unterminated.interpolation=Незавершенная интерполяция
vue.progress.title.auto-importing-external-symbols-on-paste=Автоматический импорт внешних символов при вставке...
vue.progress.title.auto-importing-vue-components-on-paste=Автоматический импорт Vue компонентов при вставке...
vue.project.generator.description=Создать новый проект <a href\='https\://vuejs.org'>Vue.js</a> с помощью <a href\='https\://cli.vuejs.org'>Vue CLI</a>.
vue.project.generator.name=Vue.js
vue.project.generator.presentable.package.name=Vue CLI [&C]
vue.project.generator.use.default.project.setup=Использовать настройки проекта по умолчанию [&D]
vue.quickfix.import.component.family=Импортовать компонент
vue.quickfix.import.component.name=Импортовать компонент ''{0}''
vue.quickfix.wrap.with.function.family=Обернуть объект
vue.quickfix.wrap.with.function.text=Обернуть объект data в функцию
vue.search.scope.template.name=шаблон
vue.service.name=Языковой сервер Vue
vue.service.prefix=Vue
vue.symbol.presentation=Vue {0} {1}
vue.template.intention.extract.component.command.name=Извлечь Vue компонент
vue.template.intention.extract.component.continue=Продолжить редактирование
vue.template.intention.extract.component.error.component.exists=Компонент {0} уже существует
vue.template.intention.extract.component.error.component.name=Недопустимое имя компонента\: {0}
vue.template.intention.extract.component.error.file.exists=Файл {0} уже существует
vue.template.intention.extract.component.family.name=Извлечь Vue компонент
vue.template.intention.import.component.family.name=Импортовать компонент локально
vue.template.intention.v-model.expand.command.name=Развернуть v-model
vue.template.intention.v-model.expand.family.name=Развернуть v-model
vuex.inspection.message.unresolved.action=Невозможно разрешить действие Vuex {0}
vuex.inspection.message.unresolved.getter=Невозможно разрешить getter Vuex {0}
vuex.inspection.message.unresolved.mutation=Невозможно разрешить mutation Vuex {0}
vuex.inspection.message.unresolved.namespace=Неизвестное пространство имён модуля Vuex {0}
vuex.inspection.message.unresolved.state=Невозможно разрешить состояние Vuex {0}
vuex.inspection.message.unresolved.symbol=Невозможно разрешить символ Vuex {0}